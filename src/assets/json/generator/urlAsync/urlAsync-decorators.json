{"complete":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-urlAsync-complete',\r\n    templateUrl: './url-async-complete.component.html'\r\n})\r\nexport class UrlAsyncCompleteComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Admin Website Url</label>\r\n      <input type=\"text\" formControlName=\"adminWebsiteUrl\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.adminWebsiteUrl.errors\">{{userFormGroup.controls.adminWebsiteUrl.errors.urlAsync.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Maintenance Website Url</label>\r\n      <input type=\"text\" formControlName=\"maintenanceWebSiteUrl\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.maintenanceWebSiteUrl.errors\">{{userFormGroup.controls.maintenanceWebSiteUrl.errors.urlAsync.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Localhost Url</label>\r\n      <input type=\"text\" formControlName=\"localhostUrl\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Enter valid localhost url.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.localhostUrl.errors\">{{userFormGroup.controls.localhostUrl.errors.urlAsync.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>FQDN Domain Url</label>\r\n      <input type=\"text\" formControlName=\"fqdnDomainUrl\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Enter valid FQDN url.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.fqdnDomainUrl.errors\">{{userFormGroup.controls.fqdnDomainUrl.errors.urlAsync.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>IntraServer Url</label>\r\n      <input type=\"text\" formControlName=\"intraServerUrl\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Enter valid Intra url.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.intraServerUrl.errors\">{{userFormGroup.controls.intraServerUrl.errors.urlAsync.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Deployed Website Url</label>\r\n      <input type=\"text\" formControlName=\"deployedWebSiteUrl\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message based on message key<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.deployedWebSiteUrl.errors\">{{userFormGroup.controls.deployedWebSiteUrl.errors.urlMessageKey.message}}<br/></small>\t\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  urlAsync, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class User {\r\n\r\n\t@urlAsync() \r\n\tadminWebsiteUrl: string;\r\n\t\r\n\t\r\n\t@urlAsync({message:'{{0}} Is not the correct url pattern.' }) \r\n\tmaintenanceWebSiteUrl: string;\r\n\t\r\n\t\r\n\t@urlAsync({urlValidationType:2 }) \r\n\tlocalhostUrl: string;\r\n\t\r\n\t\r\n\t@urlAsync({urlValidationType:1 }) \r\n\tfqdnDomainUrl: string;\r\n\t\r\n\t\r\n\t@urlAsync({urlValidationType:3 }) \r\n\tintraServerUrl: string;\r\n\t\r\n\t\r\n\t@urlAsync({messageKey:'urlMessageKey' }) \r\n\tdeployedWebSiteUrl: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"user.model.ts","json":{}},"messageExample":{"notes":null,"component":null,"html":null,"model":"@urlAsync({message:'{{0}} Is not the correct url pattern.' }) \r\nmaintenanceWebSiteUrl: string;\r\n","modelName":null,"json":{}},"message":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-urlAsync-message',\r\n    templateUrl: './url-async-message.component.html'\r\n})\r\nexport class UrlAsyncMessageComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Maintenance Website Url</label>\r\n      <input type=\"text\" formControlName=\"maintenanceWebSiteUrl\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.maintenanceWebSiteUrl.errors\">{{userFormGroup.controls.maintenanceWebSiteUrl.errors.urlAsync.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  urlAsync, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class User {\r\n\r\n\t@urlAsync({message:'{{0}} Is not the correct url pattern.' }) \r\n\tmaintenanceWebSiteUrl: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"user.model.ts","json":{}},"urlValidationTypeExample":{"notes":null,"component":null,"html":null,"model":"@urlAsync({urlValidationType:2 }) \r\nlocalhostUrl: string;\r\n","modelName":null,"json":{}},"urlValidationType":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-urlAsync-urlValidationType',\r\n    templateUrl: './url-async-url-validation-type.component.html'\r\n})\r\nexport class UrlAsyncUrlValidationTypeComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Localhost Url</label>\r\n      <input type=\"text\" formControlName=\"localhostUrl\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Enter valid localhost url.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.localhostUrl.errors\">{{userFormGroup.controls.localhostUrl.errors.urlAsync.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  urlAsync, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class User {\r\n\r\n\t@urlAsync({urlValidationType:2 }) \r\n\tlocalhostUrl: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"user.model.ts","json":{}},"messageKeyExample":{"notes":null,"component":null,"html":null,"model":"@urlAsync({messageKey:'urlMessageKey' }) \r\ndeployedWebSiteUrl: string;\r\n","modelName":null,"json":{}},"messageKey":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-urlAsync-messageKey',\r\n    templateUrl: './url-async-message-key.component.html'\r\n})\r\nexport class UrlAsyncMessageKeyComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Deployed Website Url</label>\r\n      <input type=\"text\" formControlName=\"deployedWebSiteUrl\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message based on message key<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.deployedWebSiteUrl.errors\">{{userFormGroup.controls.deployedWebSiteUrl.errors.urlMessageKey.message}}<br/></small>\t\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  urlAsync, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class User {\r\n\r\n\t@urlAsync({messageKey:'urlMessageKey' }) \r\n\tdeployedWebSiteUrl: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"user.model.ts","json":{}},"dynamic":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\nimport { FormBuilderConfiguration,} from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-urlAsync-dynamic',\r\n    templateUrl: './url-async-dynamic.component.html'\r\n})\r\nexport class UrlAsyncDynamicComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder,private http: HttpClient    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        let formBuilderConfiguration = new FormBuilderConfiguration();\r\n\t\tthis.http.get('assets/examples/reactive-form-validators/decorators/urlAsync/dynamic/dynamic.json?v=' + environment.appVersion).subscribe(dynamic => {\r\n            formBuilderConfiguration.dynamicValidation = JSON.parse(JSON.stringify(dynamic));\r\n\t\t\tthis.userFormGroup = this.formBuilder.formGroup(user,formBuilderConfiguration);\r\n        })\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  *ngIf=\"userFormGroup\"  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Admin Website Url</label>\r\n      <input type=\"text\" formControlName=\"adminWebsiteUrl\" class=\"form-control\"   />\r\n      <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.adminWebsiteUrl.errors\">{{userFormGroup.controls.adminWebsiteUrl.errors.urlAsync.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Maintenance Website Url</label>\r\n      <input type=\"text\" formControlName=\"maintenanceWebSiteUrl\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.maintenanceWebSiteUrl.errors\">{{userFormGroup.controls.maintenanceWebSiteUrl.errors.urlAsync.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Localhost Url</label>\r\n      <input type=\"text\" formControlName=\"localhostUrl\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Enter valid localhost url.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.localhostUrl.errors\">{{userFormGroup.controls.localhostUrl.errors.urlAsync.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>FQDN Domain Url</label>\r\n      <input type=\"text\" formControlName=\"fqdnDomainUrl\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Enter valid FQDN url.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.fqdnDomainUrl.errors\">{{userFormGroup.controls.fqdnDomainUrl.errors.urlAsync.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>IntraServer Url</label>\r\n      <input type=\"text\" formControlName=\"intraServerUrl\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Enter valid Intra url.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.intraServerUrl.errors\">{{userFormGroup.controls.intraServerUrl.errors.urlAsync.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Deployed Website Url</label>\r\n      <input type=\"text\" formControlName=\"deployedWebSiteUrl\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message based on message key<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.deployedWebSiteUrl.errors\">{{userFormGroup.controls.deployedWebSiteUrl.errors.urlMessageKey.message}}<br/></small>\t\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  urlAsync,prop, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class User {\r\n\r\n\t@prop()\r\n\tadminWebsiteUrl: string;\r\n\r\n\t@prop()\r\n\tmaintenanceWebSiteUrl: string;\r\n\r\n\t@prop()\r\n\tlocalhostUrl: string;\r\n\r\n\t@prop()\r\n\tfqdnDomainUrl: string;\r\n\r\n\t@prop()\r\n\tintraServerUrl: string;\r\n\r\n\t@prop()\r\n\tdeployedWebSiteUrl: string;\r\n\r\n}\r\n","modelName":"user.model.ts","json":{"dynamic.json":"{\"adminWebsiteUrl\":{\"urlAsync\":true},\"maintenanceWebSiteUrl\":{\"urlAsync\":{\"message\":\"{{0}} Is not the correct url pattern.\"}},\"localhostUrl\":{\"urlAsync\":{\"urlValidationType\":\"2\"}},\"fqdnDomainUrl\":{\"urlAsync\":{\"urlValidationType\":\"1\"}},\"intraServerUrl\":{\"urlAsync\":{\"urlValidationType\":\"3\"}},\"deployedWebSiteUrl\":{\"urlAsync\":{\"messageKey\":\"urlMessageKey\"}}}"}},"add":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { WebSiteInfoModel } from './web-site-info-model.model';\r\n\r\n@Component({\r\n    selector: 'app-urlAsync-add',\r\n    templateUrl: './url-async-add.component.html'\r\n})\r\nexport class UrlAsyncAddComponent implements OnInit {\r\n    webSiteInfoModelFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let webSiteInfoModel = new WebSiteInfoModel();\r\n        this.webSiteInfoModelFormGroup = this.formBuilder.formGroup(webSiteInfoModel);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"webSiteInfoModelFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Admin Website Url</label>\r\n      <input type=\"text\" formControlName=\"adminWebsiteUrl\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"webSiteInfoModelFormGroup.controls.adminWebsiteUrl.errors\">{{webSiteInfoModelFormGroup.controls.adminWebsiteUrl.errors.urlAsync.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!webSiteInfoModelFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  urlAsync, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class WebSiteInfoModel {\r\n\r\n\t@urlAsync() \r\n\tadminWebsiteUrl: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"web-site-info-model.model.ts","json":{}},"edit":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { WebSiteInfoModel } from './web-site-info-model.model';\r\n\r\n@Component({\r\n    selector: 'app-urlAsync-edit',\r\n    templateUrl: './url-async-edit.component.html'\r\n})\r\nexport class UrlAsyncEditComponent implements OnInit {\r\n    webSiteInfoModelFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder,private http: HttpClient    ) { }\r\n\r\n    ngOnInit() {\r\n        this.http.get('assets/examples/reactive-form-validators/decorators/urlAsync/edit/web-site-info-model-data.json?v=' + environment.appVersion).subscribe(webSiteInfoModel => {\r\n            this.webSiteInfoModelFormGroup = this.formBuilder.formGroup<WebSiteInfoModel>(WebSiteInfoModel,webSiteInfoModel);\r\n        })\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  *ngIf=\"webSiteInfoModelFormGroup\"  [formGroup]=\"webSiteInfoModelFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Admin Website Url</label>\r\n      <input type=\"text\" formControlName=\"adminWebsiteUrl\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"webSiteInfoModelFormGroup.controls.adminWebsiteUrl.errors\">{{webSiteInfoModelFormGroup.controls.adminWebsiteUrl.errors.urlAsync.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!webSiteInfoModelFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  urlAsync, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class WebSiteInfoModel {\r\n\r\n\t@urlAsync() \r\n\tadminWebsiteUrl: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"web-site-info-model.model.ts","json":{"web-site-info-model-data.json":"{\"adminWebsiteUrl\":\"https://google.co.in\"}"}}}