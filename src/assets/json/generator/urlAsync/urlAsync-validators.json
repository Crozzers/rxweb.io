{"complete":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-urlAsync-complete-validator',\r\n    templateUrl: './url-async-complete.component.html'\r\n})\r\nexport class UrlAsyncCompleteValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n            adminWebsiteUrl:['', RxwebValidators.urlAsync()], \r\n            maintenanceWebSiteUrl:['', RxwebValidators.urlAsync({validatorConfig:of({message:'{{0}} Is not the correct url pattern.'})})], \r\n            localhostUrl:['', RxwebValidators.urlAsync({validatorConfig:of({urlValidationType:2})})], \r\n            fqdnDomainUrl:['', RxwebValidators.urlAsync({validatorConfig:of({urlValidationType:1})})], \r\n            intraServerUrl:['', RxwebValidators.urlAsync({validatorConfig:of({urlValidationType:3})})], \r\n            deployedWebSiteUrl:['', RxwebValidators.urlAsync({validatorConfig:of({messageKey:'urlMessageKey'})})], \r\n       })});\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Admin Website Url</label>\r\n      <input type=\"text\" formControlName=\"adminWebsiteUrl\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.adminWebsiteUrl.errors\">{{userFormGroup.controls.adminWebsiteUrl.errors.url.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Maintenance Website Url</label>\r\n      <input type=\"text\" formControlName=\"maintenanceWebSiteUrl\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.maintenanceWebSiteUrl.errors\">{{userFormGroup.controls.maintenanceWebSiteUrl.errors.url.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Localhost Url</label>\r\n      <input type=\"text\" formControlName=\"localhostUrl\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Enter valid localhost url.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.localhostUrl.errors\">{{userFormGroup.controls.localhostUrl.errors.url.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>FQDN Domain Url</label>\r\n      <input type=\"text\" formControlName=\"fqdnDomainUrl\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Enter valid FQDN url.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.fqdnDomainUrl.errors\">{{userFormGroup.controls.fqdnDomainUrl.errors.url.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>IntraServer Url</label>\r\n      <input type=\"text\" formControlName=\"intraServerUrl\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Enter valid Intra url.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.intraServerUrl.errors\">{{userFormGroup.controls.intraServerUrl.errors.url.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Deployed Website Url</label>\r\n      <input type=\"text\" formControlName=\"deployedWebSiteUrl\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message based on message key<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.deployedWebSiteUrl.errors\">{{userFormGroup.controls.deployedWebSiteUrl.errors.urlMessageKey.message}}<br/></small>\t\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"json":{}},"messageExample":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.urlAsync({validatorConfig:of({message:'{{0}} Is not the correct url pattern.'})});\r\n","modelName":null,"json":{}},"message":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-urlAsync-message-validator',\r\n    templateUrl: './url-async-message.component.html'\r\n})\r\nexport class UrlAsyncMessageValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n            maintenanceWebSiteUrl:['', RxwebValidators.urlAsync({validatorConfig:of({message:'{{0}} Is not the correct url pattern.'})})], \r\n       })});\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Maintenance Website Url</label>\r\n      <input type=\"text\" formControlName=\"maintenanceWebSiteUrl\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.maintenanceWebSiteUrl.errors\">{{userFormGroup.controls.maintenanceWebSiteUrl.errors.url.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"json":{}},"urlValidationTypeExample":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.urlAsync({validatorConfig:of({urlValidationType:2})});\r\n","modelName":null,"json":{}},"urlValidationType":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-urlAsync-urlValidationType-validator',\r\n    templateUrl: './url-async-url-validation-type.component.html'\r\n})\r\nexport class UrlAsyncUrlValidationTypeValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n            localhostUrl:['', RxwebValidators.urlAsync({validatorConfig:of({urlValidationType:2})})], \r\n       })});\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Localhost Url</label>\r\n      <input type=\"text\" formControlName=\"localhostUrl\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Enter valid localhost url.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.localhostUrl.errors\">{{userFormGroup.controls.localhostUrl.errors.url.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"json":{}},"messageKeyExample":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.urlAsync({validatorConfig:of({messageKey:'urlMessageKey'})});\r\n","modelName":null,"json":{}},"messageKey":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-urlAsync-messageKey-validator',\r\n    templateUrl: './url-async-message-key.component.html'\r\n})\r\nexport class UrlAsyncMessageKeyValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n            deployedWebSiteUrl:['', RxwebValidators.urlAsync({validatorConfig:of({messageKey:'urlMessageKey'})})], \r\n       })});\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Deployed Website Url</label>\r\n      <input type=\"text\" formControlName=\"deployedWebSiteUrl\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message based on message key<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.deployedWebSiteUrl.errors\">{{userFormGroup.controls.deployedWebSiteUrl.errors.urlMessageKey.message}}<br/></small>\t\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"json":{}},"dynamic":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormBuilderConfiguration,RxFormBuilder} from '@rxweb/reactive-form-validators';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n    selector: 'app-urlAsync-dynamic-validator',\r\n    templateUrl: './url-async-dynamic.component.html'\r\n})\r\nexport class UrlAsyncDynamicValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: RxFormBuilder , private http: HttpClient )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n\t\tlet formBuilderConfiguration = new FormBuilderConfiguration();\r\n\t\tthis.http.get('assets/examples/reactive-form-validators/validators/urlAsync/dynamic/dynamic.json?v='+environment.appVersion).subscribe(dynamic => {\r\n\t\t\tformBuilderConfiguration.dynamicValidation = JSON.parse(JSON.stringify(dynamic));\r\n\t\t\tvar user = { adminWebsiteUrl:'', maintenanceWebSiteUrl:'', localhostUrl:'', fqdnDomainUrl:'', intraServerUrl:'', deployedWebSiteUrl:'',  }\r\n\t\t\tthis.userFormGroup = this.formBuilder.group(user,formBuilderConfiguration);\r\n\t\t})\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  *ngIf=\"userFormGroup\"  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Admin Website Url</label>\r\n      <input type=\"text\" formControlName=\"adminWebsiteUrl\" class=\"form-control\"   />\r\n      <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.adminWebsiteUrl.errors\">{{userFormGroup.controls.adminWebsiteUrl.errors.url.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Maintenance Website Url</label>\r\n      <input type=\"text\" formControlName=\"maintenanceWebSiteUrl\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.maintenanceWebSiteUrl.errors\">{{userFormGroup.controls.maintenanceWebSiteUrl.errors.url.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Localhost Url</label>\r\n      <input type=\"text\" formControlName=\"localhostUrl\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Enter valid localhost url.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.localhostUrl.errors\">{{userFormGroup.controls.localhostUrl.errors.url.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>FQDN Domain Url</label>\r\n      <input type=\"text\" formControlName=\"fqdnDomainUrl\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Enter valid FQDN url.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.fqdnDomainUrl.errors\">{{userFormGroup.controls.fqdnDomainUrl.errors.url.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>IntraServer Url</label>\r\n      <input type=\"text\" formControlName=\"intraServerUrl\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Enter valid Intra url.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.intraServerUrl.errors\">{{userFormGroup.controls.intraServerUrl.errors.url.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Deployed Website Url</label>\r\n      <input type=\"text\" formControlName=\"deployedWebSiteUrl\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message based on message key<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.deployedWebSiteUrl.errors\">{{userFormGroup.controls.deployedWebSiteUrl.errors.urlMessageKey.message}}<br/></small>\t\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"json":{"dynamic.json":"{\"adminWebsiteUrl\":{\"urlAsync\":true},\"maintenanceWebSiteUrl\":{\"urlAsync\":{\"message\":\"{{0}} Is not the correct url pattern.\"}},\"localhostUrl\":{\"urlAsync\":{\"urlValidationType\":\"2\"}},\"fqdnDomainUrl\":{\"urlAsync\":{\"urlValidationType\":\"1\"}},\"intraServerUrl\":{\"urlAsync\":{\"urlValidationType\":\"3\"}},\"deployedWebSiteUrl\":{\"urlAsync\":{\"messageKey\":\"urlMessageKey\"}}}"}},"add":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-urlAsync-add-validator',\r\n    templateUrl: './url-async-add.component.html'\r\n})\r\nexport class UrlAsyncAddValidatorComponent implements OnInit {\r\n    webSiteInfoModelFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.webSiteInfoModelFormGroup = this.formBuilder.group({\r\n            adminWebsiteUrl:['', RxwebValidators.urlAsync()], \r\n       })});\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"webSiteInfoModelFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Admin Website Url</label>\r\n      <input type=\"text\" formControlName=\"adminWebsiteUrl\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"webSiteInfoModelFormGroup.controls.adminWebsiteUrl.errors\">{{webSiteInfoModelFormGroup.controls.adminWebsiteUrl.errors.url.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!webSiteInfoModelFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"json":{}}}