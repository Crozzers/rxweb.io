{"complete":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { Location } from './location.model';\r\n\r\n@Component({\r\n    selector: 'app-alphaNumericAsync-complete-template-driven-validation-decorators',\r\n    templateUrl: './alpha-numeric-async-complete.component.html'\r\n})\r\nexport class AlphaNumericAsyncCompleteTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    location: Location\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.location= new Location()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #locationForm = \"ngForm\" [rxwebForm]=\"locationForm\" [model]=\"location\">\r\n    <div class=\"form-group\">\r\n      <label>Area Name</label>\r\n\t    <input type=\"text\" name=\"areaName\" [(ngModel)]=\"location.areaName\"  class=\"form-control\" />\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"locationForm.controls?.areaName?.errors\">{{locationForm.controls?.areaName?.errors?.alphaNumeric.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Flat Address</label>\r\n\t    <input type=\"text\" name=\"flatAddress\" [(ngModel)]=\"location.flatAddress\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">This allowed whitespace in alpha Numeric validation<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"locationForm.controls?.flatAddress?.errors\">{{locationForm.controls?.flatAddress?.errors?.alphaNumeric.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>SpanishCityName</label>\r\n\t    <input type=\"text\" name=\"spanishcityName\" [(ngModel)]=\"location.spanishcityName\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">It will allow spanish characters in the formControl<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"locationForm.controls?.spanishcityName?.errors\">{{locationForm.controls?.spanishcityName?.errors?.alphaNumeric.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Postal Address</label>\r\n\t    <input type=\"text\" name=\"postalAddress\" [(ngModel)]=\"location.postalAddress\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"locationForm.controls?.postalAddress?.errors\">{{locationForm.controls?.postalAddress?.errors?.alphaNumeric.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Colony Name</label>\r\n\t    <input type=\"text\" name=\"colonyName\" [(ngModel)]=\"location.colonyName\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">custom message based on messageKey<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"locationForm.controls?.colonyName?.errors\">{{locationForm.controls?.colonyName?.errors?.alphaNumeric.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!locationForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  alphaNumericAsync, } from   \"@rxweb/reactive-form-validators\" \r\n\rimport { of } from \"rxjs\" \r\n\r\n   \r\n\r\nexport class Location {\r\n\r\n\t@alphaNumericAsync() \r\n\tareaName: string;\r\n\t\r\n\t\r\n\t@alphaNumericAsync({validatorConfig:of({allowWhiteSpace:true})}) \r\n\tflatAddress: string;\r\n\t\r\n\t\r\n\t@alphaNumericAsync({validatorConfig:of({locale:ValidationAlphabetLocale.spanish})}) \r\n\tspanishcityName: string;\r\n\t\r\n\t\r\n\t//Shows custom message\r\n\t@alphaNumericAsync({validatorConfig:of({message:'Please enter only alphanumerics, special characters are not allowed.'})}) \r\n\tpostalAddress: string;\r\n\t\r\n\t\r\n\t@alphaNumericAsync({validatorConfig:of({messageKey:'alphaNumericMessageKey'})}) \r\n\tcolonyName: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"location.model.ts","json":{}},"allowWhiteSpaceExample":{"notes":null,"component":null,"html":null,"model":"@alphaNumericAsync({validatorConfig:of({allowWhiteSpace:true})}) \r\nflatAddress: string;\r\n","modelName":null,"json":{}},"allowWhiteSpace":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { Location } from './location.model';\r\n\r\n@Component({\r\n    selector: 'app-alphaNumericAsync-allowWhiteSpace-template-driven-validation-decorators',\r\n    templateUrl: './alpha-numeric-async-allow-white-space.component.html'\r\n})\r\nexport class AlphaNumericAsyncAllowWhiteSpaceTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    location: Location\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.location= new Location()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #locationForm = \"ngForm\" [rxwebForm]=\"locationForm\" [model]=\"location\">\r\n    <div class=\"form-group\">\r\n      <label>Flat Address</label>\r\n\t    <input type=\"text\" name=\"flatAddress\" [(ngModel)]=\"location.flatAddress\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">This allowed whitespace in alpha Numeric validation<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"locationForm.controls?.flatAddress?.errors\">{{locationForm.controls?.flatAddress?.errors?.alphaNumeric.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!locationForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  alphaNumericAsync, } from   \"@rxweb/reactive-form-validators\" \r\n\rimport { of } from \"rxjs\" \r\n\r\n   \r\n\r\nexport class Location {\r\n\r\n\t@alphaNumericAsync({validatorConfig:of({allowWhiteSpace:true})}) \r\n\tflatAddress: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"location.model.ts","json":{}},"localeExample":{"notes":null,"component":null,"html":null,"model":"@alphaNumericAsync({validatorConfig:of({locale:ValidationAlphabetLocale.spanish})}) \r\nspanishcityName: string;\r\n","modelName":null,"json":{}},"locale":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { Location } from './location.model';\r\n\r\n@Component({\r\n    selector: 'app-alphaNumericAsync-locale-template-driven-validation-decorators',\r\n    templateUrl: './alpha-numeric-async-locale.component.html'\r\n})\r\nexport class AlphaNumericAsyncLocaleTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    location: Location\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.location= new Location()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #locationForm = \"ngForm\" [rxwebForm]=\"locationForm\" [model]=\"location\">\r\n    <div class=\"form-group\">\r\n      <label>SpanishCityName</label>\r\n\t    <input type=\"text\" name=\"spanishcityName\" [(ngModel)]=\"location.spanishcityName\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">It will allow spanish characters in the formControl<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"locationForm.controls?.spanishcityName?.errors\">{{locationForm.controls?.spanishcityName?.errors?.alphaNumeric.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!locationForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  alphaNumericAsync, } from   \"@rxweb/reactive-form-validators\" \r\n\rimport { of } from \"rxjs\" \r\n\r\n   \r\n\r\nexport class Location {\r\n\r\n\t@alphaNumericAsync({validatorConfig:of({locale:ValidationAlphabetLocale.spanish})}) \r\n\tspanishcityName: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"location.model.ts","json":{}},"messageExample":{"notes":null,"component":null,"html":null,"model":"@alphaNumericAsync({validatorConfig:of({message:'Please enter only alphanumerics, special characters are not allowed.'})}) \r\npostalAddress: string;\r\n","modelName":null,"json":{}},"message":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { Location } from './location.model';\r\n\r\n@Component({\r\n    selector: 'app-alphaNumericAsync-message-template-driven-validation-decorators',\r\n    templateUrl: './alpha-numeric-async-message.component.html'\r\n})\r\nexport class AlphaNumericAsyncMessageTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    location: Location\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.location= new Location()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #locationForm = \"ngForm\" [rxwebForm]=\"locationForm\" [model]=\"location\">\r\n    <div class=\"form-group\">\r\n      <label>Postal Address</label>\r\n\t    <input type=\"text\" name=\"postalAddress\" [(ngModel)]=\"location.postalAddress\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"locationForm.controls?.postalAddress?.errors\">{{locationForm.controls?.postalAddress?.errors?.alphaNumeric.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!locationForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  alphaNumericAsync, } from   \"@rxweb/reactive-form-validators\" \r\n\rimport { of } from \"rxjs\" \r\n\r\n   \r\n\r\nexport class Location {\r\n\r\n\t//Shows custom message\r\n\t@alphaNumericAsync({validatorConfig:of({message:'Please enter only alphanumerics, special characters are not allowed.'})}) \r\n\tpostalAddress: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"location.model.ts","json":{}},"messageKeyExample":{"notes":null,"component":null,"html":null,"model":"@alphaNumericAsync({validatorConfig:of({messageKey:'alphaNumericMessageKey'})}) \r\ncolonyName: string;\r\n","modelName":null,"json":{}},"messageKey":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { Location } from './location.model';\r\n\r\n@Component({\r\n    selector: 'app-alphaNumericAsync-messageKey-template-driven-validation-decorators',\r\n    templateUrl: './alpha-numeric-async-message-key.component.html'\r\n})\r\nexport class AlphaNumericAsyncMessageKeyTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    location: Location\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.location= new Location()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #locationForm = \"ngForm\" [rxwebForm]=\"locationForm\" [model]=\"location\">\r\n    <div class=\"form-group\">\r\n      <label>Colony Name</label>\r\n\t    <input type=\"text\" name=\"colonyName\" [(ngModel)]=\"location.colonyName\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">custom message based on messageKey<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"locationForm.controls?.colonyName?.errors\">{{locationForm.controls?.colonyName?.errors?.alphaNumeric.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!locationForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  alphaNumericAsync, } from   \"@rxweb/reactive-form-validators\" \r\n\rimport { of } from \"rxjs\" \r\n\r\n   \r\n\r\nexport class Location {\r\n\r\n\t@alphaNumericAsync({validatorConfig:of({messageKey:'alphaNumericMessageKey'})}) \r\n\tcolonyName: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"location.model.ts","json":{}},"add":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { Location } from './location.model';\r\n\r\n@Component({\r\n    selector: 'app-alphaNumericAsync-add-template-driven-validation-decorators',\r\n    templateUrl: './alpha-numeric-async-add.component.html'\r\n})\r\nexport class AlphaNumericAsyncAddTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    location: Location\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.location= new Location()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #locationForm = \"ngForm\" [rxwebForm]=\"locationForm\" [model]=\"location\">\r\n    <div class=\"form-group\">\r\n      <label>Area Name</label>\r\n\t    <input type=\"text\" name=\"areaName\" [(ngModel)]=\"location.areaName\"  class=\"form-control\" />\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"locationForm.controls?.areaName?.errors\">{{locationForm.controls?.areaName?.errors?.alphaNumeric.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!locationForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  alphaNumericAsync, } from   \"@rxweb/reactive-form-validators\" \r\n\rimport { of } from \"rxjs\" \r\n\r\n   \r\n\r\nexport class Location {\r\n\r\n\t@alphaNumericAsync() \r\n\tareaName: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"location.model.ts","json":{}}}