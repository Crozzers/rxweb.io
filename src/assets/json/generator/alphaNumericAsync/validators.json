{"rightSidebarLinks":[{"id":"alphanumericasync","title":"alphaNumericAsync","subLink":null},{"id":"whentouse","title":"When to use","subLink":[]},{"id":"basicalphanumericasyncvalidation","title":"Basic alphaNumericAsync Validation","subLink":[]},{"id":"validatorconfig","title":"ValidatorConfig","subLink":[{"title":"locale","id":"locale","thirdLevelLink":[]},{"title":"allowWhiteSpace","id":"allowwhitespace","thirdLevelLink":[]},{"title":"message","id":"message","thirdLevelLink":[]},{"title":"messageKey","id":"messagekey","thirdLevelLink":[]}]},{"id":"completealphanumericasyncexample","title":"Complete alphaNumericAsync Example","subLink":[]}],"title":"alphaNumericAsync","description":"Alpha Numeric Async validation validators will allow only alphabets and numbers to be entered. It will not allow any special character.","validatorType":"validators","validationTypeTitle":"Validators","type":"tabs","gitDocPath":"https://github.com/rxweb/rxweb.io/edit/master/docs/angular/reactive-forms/reactive-form-validators/async-validators/alphaNumericAsync.md","category":"async-validators","subCategory":"String","linkTitle":"alphaNumericAsync","tabArray":{"complete":[{"tabName":"Example","tabGroupContent":null,"content":"<div component=\"app-example-runner\" ref-component=\"app-alphaNumericAsync-complete\"></div>\r\n"},{"tabName":"Component","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"alphaNumericAsync-complete-component\"></div> \r\n"},{"tabName":"Html","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"alphaNumericAsync-complete-html\"></div> \r\n"}]},"innerHtml":null,"htmlContent":"<div class=\"title-bar top_title\"><p>alphaNumericAsync</p></div> <div class=\"title-bar\"><p>alphaNumericAsync validation validator will allow only alphabets and numbers to be entered. It will not allow any special character asynchronously.</p></div>\r\n<div class='row page-section' id= 'whentouse'>\r\n<div class='col-lg-12'>\r\n<h2 class='showHideElement' >When to use<a title='Link to this heading' class='link-header' href='/async-validators/alphaNumericAsync/validators#whentouse'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Suppose you want to create a Location form, which contains fields like AreaName, FlatAddress, PostalAddress, countryCode, CityCode and you want the user to enter only alphabets and numbers asynchronously. Here depending upon the requirement these scenarios may arise .</p>\r\n<ol class='showHideElement'>\r\n    <li>Allow only alphabets and numbers in AreaName without space.</li>\r\n    <li>Allowing WhiteSpace in FlatAddress.</li>\r\n    <li>Adding Custom Message on PostalAddress Field.</li>\r\n    <li>Shows the custom message on <span class='highlighted'>Colony Name</span> field by using <span class='highlighted'>messageKey</span> property.</li>\r\n    <data-scope scope=\"['decorator','validator']\">\r\n        <li>Apply alphaNumericAsync validation dynamically based on server rules. </li>\r\n    </data-scope>\r\n</ol>\r\n<p class='showHideElement' >Letâ€™s see how alphaNumericAsync validator fulfil the need.</p>\r\n</div></div>\r\n<div class='row page-section' id= 'basicalphanumericasyncvalidation'>\r\n<div class='col-lg-12'>\r\n<h2>Basic alphaNumericAsync Validation<a title='Link to this heading' class='link-header' href='/async-validators/alphaNumericAsync/validators#basicalphanumericasyncvalidation'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Through Angular FormBuilder service we create FormGroup in the component.</p>\r\n<p class='showHideElement' >Here we have covered Add form operations. </p>\r\n<div component=\"app-code\" key=\"alphaNumericAsync-add-component\"></div> \r\n<p class='showHideElement' >Next, we need to write html code.</p>\r\n<div component=\"app-code\" key=\"alphaNumericAsync-add-html\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-alphaNumericAsync-add\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'validatorconfig'>\r\n<div class='col-lg-12'>\r\n<h2>ValidatorConfig<a title='Link to this heading' class='link-header' href='/async-validators/alphaNumericAsync/validators#validatorconfig'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type : <span class='highlighted'>Observable</span></p>\r\n<p class='showHideElement' >validator config is used to dynamically resolve the value of the property according to the server rules by using the keyword <span class='highlighted'>of</span> as below </p>\r\n<p class='showHideElement' >Below options are not mandatory to use in the <span class='highlighted'>RxwebValidators.alphaNumericAsync({validatorConfig:of({validatorConfig:of({&ltproperty_name&gt:&ltvalue&gt})})</span> validator. If needed then use the below options.</p>\r\n<table class=\"table table-bordered table-striped showHideElement\">\r\n<tr><th>Option</th><th>Description</th></tr>\r\n<tr><td><a  (click)='scrollTo(\"#locale\")' title=\"locale\">locale</a></td><td>This will allow multilingual characters based upon the specified validation alphabet locale.</td></tr>\r\n<tr><td><a  (click)='scrollTo(\"#allowwhitespace\")' title=\"allowWhiteSpace\">allowWhiteSpace</a></td><td>This will allow whitespace in particular control property. The default value is <span class='highlighted'>false</span>.</td></tr>\r\n<tr><td><a  (click)='scrollTo(\"#message\")' title=\"message\">message</a></td><td>To override the global configuration message and set the custom error message on respective FormControl</td></tr>\r\n<tr><td><a (click)='scrollTo(\"#messageKey\")' title=\"messageKey\">messageKey</a></td><td>messageKey property of BaseConfig can be used when the user wants to show a different custom validation message on some of their fields. User can define a custom messageKey globally by defining it in ReactiveFormConfig and set it in the message property of the validation.</td></tr>\r\n</table>\r\n</div></div>\r\n<div class='row page-section' id= 'locale'>\r\n<div class='col-lg-12'>\r\n<h2>locale<a title='Link to this heading' class='link-header' href='/async-validators/alphaNumericAsync/validators#locale'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type : <span class='highlighted'>String</span></p>\r\n<p class='showHideElement' >This will allow multilingual characters based upon the specified validation alphabet locale. It can be set to Spanish, danish, french, german, russian.</p>\r\n<div component=\"app-code\" key=\"alphaNumericAsync-localeExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-alphaNumericAsync-locale\" title=\"alphaNumericAsync validator with locale\" key=\"locale\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'allowwhitespace'>\r\n<div class='col-lg-12'>\r\n<h2>allowWhiteSpace<a title='Link to this heading' class='link-header' href='/async-validators/alphaNumericAsync/validators#allowwhitespace'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type :  <span class='highlighted'>boolean</span> </p>\r\n<p class='showHideElement' >This will allow whitespace in particular FormControl value .The default value is <span class='highlighted'>false</span>.</p>\r\n<div component=\"app-code\" key=\"alphaNumericAsync-allowWhiteSpaceExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-alphaNumericAsync-allowWhiteSpace\" title=\"alphaNumericAsync validator with allowWhiteSpace\" key=\"allowWhiteSpace\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'message'>\r\n<div class='col-lg-12'>\r\n<h2>message<a title='Link to this heading' class='link-header' href='/async-validators/alphaNumericAsync/validators#message'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type :  <span class='highlighted'>string</span> </p>\r\n<p class='showHideElement' >To override the global configuration message and set the custom error message on respective FormControl</p>\r\n<div component=\"app-code\" key=\"alphaNumericAsync-messageExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-alphaNumericAsync-message\" title=\"alphaNumericAsync validator with message\" key=\"message\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'messagekey'>\r\n<div class='col-lg-12'>\r\n<h2>messageKey<a title='Link to this heading' class='link-header' href='/async-validators/alphaNumericAsync/validators#messagekey'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type : <span class='highlighted'>string</span></p>\r\n<p class='showHideElement' >messageKey property of BaseConfig can be used when the user wants to show a different custom validation message on some of their fields. User can define a custom messageKey globally by defining it in ReactiveFormConfig and set it in the message property of the validation.</p>\r\n<div component=\"app-code\" key=\"alphaNumericAsync-messageKeyExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-alphaNumericAsync-messageKey\" title=\"alphaNumericAsync validator with messageKey\" key=\"messageKey\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'completealphanumericasyncexample'>\r\n<div class='col-lg-12'>\r\n<h2>Complete alphaNumericAsync Example<a title='Link to this heading' class='link-header' href='/async-validators/alphaNumericAsync/validators#completealphanumericasyncexample'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >This Complete alphaNumericAsync example which includes all the AlphaConfig properties will fulfil the requirement of scenarios 1, 2, 3, 4 and 5.</p>\r\n<div component=\"app-tabs\" key=\"complete\"></div>\r\n</div></div>\r\n"}