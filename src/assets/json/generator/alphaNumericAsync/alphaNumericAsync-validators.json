{"complete":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-alphaNumericAsync-complete-validator',\r\n    templateUrl: './alpha-numeric-async-complete.component.html'\r\n})\r\nexport class AlphaNumericAsyncCompleteValidatorComponent implements OnInit {\r\n    locationFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.locationFormGroup = this.formBuilder.group({\r\n            areaName:['', RxwebValidators.alphaNumericAsync()], \r\n            flatAddress:['', RxwebValidators.alphaNumericAsync({validatorConfig:of({allowWhiteSpace:true})})], \r\n            spanishcityName:['', RxwebValidators.alphaNumericAsync({validatorConfig:of({locale:ValidationAlphabetLocale.spanish})})], \r\n            postalAddress:['', RxwebValidators.alphaNumericAsync({validatorConfig:of({message:'Please enter only alphanumerics, special characters are not allowed.'})})], \r\n            colonyName:['', RxwebValidators.alphaNumericAsync({validatorConfig:of({messageKey:'alphaNumericMessageKey'})})], \r\n       })});\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"locationFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Area Name</label>\r\n      <input type=\"text\" formControlName=\"areaName\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"locationFormGroup.controls.areaName.errors\">{{locationFormGroup.controls.areaName.errors.alphaNumeric.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Flat Address</label>\r\n      <input type=\"text\" formControlName=\"flatAddress\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This allowed whitespace in alpha Numeric validation<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"locationFormGroup.controls.flatAddress.errors\">{{locationFormGroup.controls.flatAddress.errors.alphaNumeric.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>SpanishCityName</label>\r\n      <input type=\"text\" formControlName=\"spanishcityName\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">It will allow spanish characters in the formControl<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"locationFormGroup.controls.spanishcityName.errors\">{{locationFormGroup.controls.spanishcityName.errors.alphaNumeric.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Postal Address</label>\r\n      <input type=\"text\" formControlName=\"postalAddress\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"locationFormGroup.controls.postalAddress.errors\">{{locationFormGroup.controls.postalAddress.errors.alphaNumeric.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Colony Name</label>\r\n      <input type=\"text\" formControlName=\"colonyName\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">custom message based on messageKey<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"locationFormGroup.controls.colonyName.errors\">{{locationFormGroup.controls.colonyName.errors.alphaNumericMessageKey.message}}<br/></small>\t\t\r\n    </div>\r\n    <button [disabled]=\"!locationFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"json":{}},"allowWhiteSpaceExample":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.alphaNumericAsync({validatorConfig:of({allowWhiteSpace:true})});\r\n","modelName":null,"json":{}},"allowWhiteSpace":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-alphaNumericAsync-allowWhiteSpace-validator',\r\n    templateUrl: './alpha-numeric-async-allow-white-space.component.html'\r\n})\r\nexport class AlphaNumericAsyncAllowWhiteSpaceValidatorComponent implements OnInit {\r\n    locationFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.locationFormGroup = this.formBuilder.group({\r\n            flatAddress:['', RxwebValidators.alphaNumericAsync({validatorConfig:of({allowWhiteSpace:true})})], \r\n       })});\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"locationFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Flat Address</label>\r\n      <input type=\"text\" formControlName=\"flatAddress\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This allowed whitespace in alpha Numeric validation<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"locationFormGroup.controls.flatAddress.errors\">{{locationFormGroup.controls.flatAddress.errors.alphaNumeric.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!locationFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"json":{}},"localeExample":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.alphaNumericAsync({validatorConfig:of({locale:ValidationAlphabetLocale.spanish})});\r\n","modelName":null,"json":{}},"locale":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-alphaNumericAsync-locale-validator',\r\n    templateUrl: './alpha-numeric-async-locale.component.html'\r\n})\r\nexport class AlphaNumericAsyncLocaleValidatorComponent implements OnInit {\r\n    locationFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.locationFormGroup = this.formBuilder.group({\r\n            spanishcityName:['', RxwebValidators.alphaNumericAsync({validatorConfig:of({locale:ValidationAlphabetLocale.spanish})})], \r\n       })});\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"locationFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>SpanishCityName</label>\r\n      <input type=\"text\" formControlName=\"spanishcityName\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">It will allow spanish characters in the formControl<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"locationFormGroup.controls.spanishcityName.errors\">{{locationFormGroup.controls.spanishcityName.errors.alphaNumeric.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!locationFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"json":{}},"messageExample":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.alphaNumericAsync({validatorConfig:of({message:'Please enter only alphanumerics, special characters are not allowed.'})});\r\n","modelName":null,"json":{}},"message":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-alphaNumericAsync-message-validator',\r\n    templateUrl: './alpha-numeric-async-message.component.html'\r\n})\r\nexport class AlphaNumericAsyncMessageValidatorComponent implements OnInit {\r\n    locationFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.locationFormGroup = this.formBuilder.group({\r\n            postalAddress:['', RxwebValidators.alphaNumericAsync({validatorConfig:of({message:'Please enter only alphanumerics, special characters are not allowed.'})})], \r\n       })});\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"locationFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Postal Address</label>\r\n      <input type=\"text\" formControlName=\"postalAddress\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"locationFormGroup.controls.postalAddress.errors\">{{locationFormGroup.controls.postalAddress.errors.alphaNumeric.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!locationFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"json":{}},"messageKeyExample":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.alphaNumericAsync({validatorConfig:of({messageKey:'alphaNumericMessageKey'})});\r\n","modelName":null,"json":{}},"messageKey":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-alphaNumericAsync-messageKey-validator',\r\n    templateUrl: './alpha-numeric-async-message-key.component.html'\r\n})\r\nexport class AlphaNumericAsyncMessageKeyValidatorComponent implements OnInit {\r\n    locationFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.locationFormGroup = this.formBuilder.group({\r\n            colonyName:['', RxwebValidators.alphaNumericAsync({validatorConfig:of({messageKey:'alphaNumericMessageKey'})})], \r\n       })});\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"locationFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Colony Name</label>\r\n      <input type=\"text\" formControlName=\"colonyName\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">custom message based on messageKey<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"locationFormGroup.controls.colonyName.errors\">{{locationFormGroup.controls.colonyName.errors.alphaNumericMessageKey.message}}<br/></small>\t\t\r\n    </div>\r\n    <button [disabled]=\"!locationFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"json":{}},"dynamic":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormBuilderConfiguration,RxFormBuilder} from '@rxweb/reactive-form-validators';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n    selector: 'app-alphaNumericAsync-dynamic-validator',\r\n    templateUrl: './alpha-numeric-async-dynamic.component.html'\r\n})\r\nexport class AlphaNumericAsyncDynamicValidatorComponent implements OnInit {\r\n    locationFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: RxFormBuilder , private http: HttpClient )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n\t\tlet formBuilderConfiguration = new FormBuilderConfiguration();\r\n\t\tthis.http.get('assets/examples/reactive-form-validators/validators/alphaNumericAsync/dynamic/dynamic.json?v='+environment.appVersion).subscribe(dynamic => {\r\n\t\t\tformBuilderConfiguration.dynamicValidation = JSON.parse(JSON.stringify(dynamic));\r\n\t\t\tvar location = { areaName:'', flatAddress:'', spanishcityName:'', postalAddress:'', colonyName:'',  }\r\n\t\t\tthis.locationFormGroup = this.formBuilder.group(location,formBuilderConfiguration);\r\n\t\t})\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  *ngIf=\"locationFormGroup\"  [formGroup]=\"locationFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Area Name</label>\r\n      <input type=\"text\" formControlName=\"areaName\" class=\"form-control\"   />\r\n      <small class=\"form-text text-danger\" *ngIf=\"locationFormGroup.controls.areaName.errors\">{{locationFormGroup.controls.areaName.errors.alphaNumeric.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Flat Address</label>\r\n      <input type=\"text\" formControlName=\"flatAddress\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This allowed whitespace in alpha Numeric validation<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"locationFormGroup.controls.flatAddress.errors\">{{locationFormGroup.controls.flatAddress.errors.alphaNumeric.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>SpanishCityName</label>\r\n      <input type=\"text\" formControlName=\"spanishcityName\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">It will allow spanish characters in the formControl<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"locationFormGroup.controls.spanishcityName.errors\">{{locationFormGroup.controls.spanishcityName.errors.alphaNumeric.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Postal Address</label>\r\n      <input type=\"text\" formControlName=\"postalAddress\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"locationFormGroup.controls.postalAddress.errors\">{{locationFormGroup.controls.postalAddress.errors.alphaNumeric.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Colony Name</label>\r\n      <input type=\"text\" formControlName=\"colonyName\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">custom message based on messageKey<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"locationFormGroup.controls.colonyName.errors\">{{locationFormGroup.controls.colonyName.errors.alphaNumericMessageKey.message}}<br/></small>\t\t\r\n    </div>\r\n    <button [disabled]=\"!locationFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"json":{"dynamic.json":"{\"areaName\":{\"alphaNumericAsync\":true},\"flatAddress\":{\"alphaNumericAsync\":{\"allowWhiteSpace\":\"true\"}},\"spanishcityName\":{\"alphaNumericAsync\":{\"locale\":\"ValidationAlphabetLocale.spanish\"}},\"postalAddress\":{\"alphaNumericAsync\":{\"message\":\"Please enter only alphanumerics, special characters are not allowed.\"}},\"colonyName\":{\"alphaNumericAsync\":{\"messageKey\":\"alphaNumericMessageKey\"}}}"}},"add":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-alphaNumericAsync-add-validator',\r\n    templateUrl: './alpha-numeric-async-add.component.html'\r\n})\r\nexport class AlphaNumericAsyncAddValidatorComponent implements OnInit {\r\n    locationFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.locationFormGroup = this.formBuilder.group({\r\n            areaName:['', RxwebValidators.alphaNumericAsync()], \r\n       })});\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"locationFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Area Name</label>\r\n      <input type=\"text\" formControlName=\"areaName\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"locationFormGroup.controls.areaName.errors\">{{locationFormGroup.controls.areaName.errors.alphaNumeric.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!locationFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"json":{}}}