{
  "complete": {
    "notes": null,
    "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { Location } from './location.model';\r\n\r\n@Component({\r\n    selector: 'app-alphaNumericAsync-complete',\r\n    templateUrl: './alpha-numeric-async-complete.component.html'\r\n})\r\nexport class AlphaNumericAsyncCompleteComponent implements OnInit {\r\n    locationFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let location = new Location();\r\n        this.locationFormGroup = this.formBuilder.formGroup(location);\r\n    }\r\n}\r\n",
    "html": "<div>\r\n  <form  [formGroup]=\"locationFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Area Name<\/label>\r\n      <input type=\"text\" formControlName=\"areaName\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"locationFormGroup.controls.areaName.errors\">{{locationFormGroup.controls.areaName.errors.alphaNumeric.message}}<br/><\/small>\t\r\n    <\/div>\r\n    <div class=\"form-group\">\r\n      <label>Flat Address<\/label>\r\n      <input type=\"text\" formControlName=\"flatAddress\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This allowed whitespace in alpha Numeric validation<br/><\/small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"locationFormGroup.controls.flatAddress.errors\">{{locationFormGroup.controls.flatAddress.errors.alphaNumeric.message}}<br/><\/small>\t\r\n    <\/div>\r\n    <div class=\"form-group\">\r\n      <label>SpanishCityName<\/label>\r\n      <input type=\"text\" formControlName=\"spanishcityName\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">It will allow spanish characters in the formControl<br/><\/small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"locationFormGroup.controls.spanishcityName.errors\">{{locationFormGroup.controls.spanishcityName.errors.alphaNumeric.message}}<br/><\/small>\t\r\n    <\/div>\r\n    <div class=\"form-group\">\r\n      <label>Postal Address<\/label>\r\n      <input type=\"text\" formControlName=\"postalAddress\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows custom message<br/><\/small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"locationFormGroup.controls.postalAddress.errors\">{{locationFormGroup.controls.postalAddress.errors.alphaNumeric.message}}<br/><\/small>\t\r\n    <\/div>\r\n    <div class=\"form-group\">\r\n      <label>Colony Name<\/label>\r\n      <input type=\"text\" formControlName=\"colonyName\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">custom message based on messageKey<br/><\/small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"locationFormGroup.controls.colonyName.errors\">{{locationFormGroup.controls.colonyName.errors?.alphaNumericMessageKey?.message}}<br/><\/small>\t\t\r\n    <\/div>\r\n    <button [disabled]=\"!locationFormGroup.valid\" class=\"btn btn-primary\">Submit<\/button>\r\n  <\/form>\r\n<\/div>\r\n",
    "model": "import {  alphaNumericAsync, } from   \"@rxweb\/reactive-form-validators\" \r\n\r\nimport { of } from \"rxjs\" \r\nimport { ValidationAlphabetLocale } from '@rxweb\/reactive-form-validators';\r\n   \r\n\r\nexport class Location {\r\n\r\n\t@alphaNumericAsync() \r\n\tareaName: string;\r\n\t\r\n\t\r\n\t@alphaNumericAsync({validatorConfig:of({allowWhiteSpace:true})}) \r\n\tflatAddress: string;\r\n\t\r\n\t\r\n\t@alphaNumericAsync({validatorConfig:of({locale:ValidationAlphabetLocale.spanish})}) \r\n\tspanishcityName: string;\r\n\t\r\n\t\r\n\t\/\/Shows custom message\r\n\t@alphaNumericAsync({validatorConfig:of({message:'Please enter only alphanumerics, special characters are not allowed.'})}) \r\n\tpostalAddress: string;\r\n\t\r\n\t\r\n\t@alphaNumericAsync({validatorConfig:of({messageKey:'alphaNumericMessageKey'})}) \r\n\tcolonyName: string;\r\n\t\r\n\t\r\n}\r\n",
    "modelName": "location.model.ts",
    "json": {}
  },
  "allowWhiteSpaceExample": {
    "notes": null,
    "component": null,
    "html": null,
    "model": "@alphaNumericAsync({validatorConfig:of({allowWhiteSpace:true})}) \r\nflatAddress: string;\r\n",
    "modelName": null,
    "json": {}
  },
  "allowWhiteSpace": {
    "notes": null,
    "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { Location } from './location.model';\r\n\r\n@Component({\r\n    selector: 'app-alphaNumericAsync-allowWhiteSpace',\r\n    templateUrl: './alpha-numeric-async-allow-white-space.component.html'\r\n})\r\nexport class AlphaNumericAsyncAllowWhiteSpaceComponent implements OnInit {\r\n    locationFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let location = new Location();\r\n        this.locationFormGroup = this.formBuilder.formGroup(location);\r\n    }\r\n}\r\n",
    "html": "<div>\r\n  <form  [formGroup]=\"locationFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Flat Address<\/label>\r\n      <input type=\"text\" formControlName=\"flatAddress\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This allowed whitespace in alpha Numeric validation<br/><\/small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"locationFormGroup.controls.flatAddress.errors\">{{locationFormGroup.controls.flatAddress.errors.alphaNumeric.message}}<br/><\/small>\t\r\n    <\/div>\r\n    <button [disabled]=\"!locationFormGroup.valid\" class=\"btn btn-primary\">Submit<\/button>\r\n  <\/form>\r\n<\/div>\r\n",
    "model": "import {  alphaNumericAsync, } from   \"@rxweb/reactive-form-validators\" \r\n\rimport { of } from \"rxjs\" \r\n\r\n   \r\n\r\nexport class Location {\r\n\r\n\t@alphaNumericAsync({validatorConfig:of({allowWhiteSpace:true})}) \r\n\tflatAddress: string;\r\n\t\r\n\t\r\n}\r\n",
    "modelName": "location.model.ts",
    "json": {}
  },
  "localeExample": {
    "notes": null,
    "component": null,
    "html": null,
    "model": "@alphaNumericAsync({validatorConfig:of({locale:ValidationAlphabetLocale.spanish})}) \r\nspanishcityName: string;\r\n",
    "modelName": null,
    "json": {}
  },
  "locale": {
    "notes": null,
    "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { Location } from './location.model';\r\n\r\n@Component({\r\n    selector: 'app-alphaNumericAsync-locale',\r\n    templateUrl: './alpha-numeric-async-locale.component.html'\r\n})\r\nexport class AlphaNumericAsyncLocaleComponent implements OnInit {\r\n    locationFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let location = new Location();\r\n        this.locationFormGroup = this.formBuilder.formGroup(location);\r\n    }\r\n}\r\n",
    "html": "<div>\r\n  <form  [formGroup]=\"locationFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>SpanishCityName<\/label>\r\n      <input type=\"text\" formControlName=\"spanishcityName\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">It will allow spanish characters in the formControl<br/><\/small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"locationFormGroup.controls.spanishcityName.errors\">{{locationFormGroup.controls.spanishcityName.errors.alphaNumeric.message}}<br/><\/small>\t\r\n    <\/div>\r\n    <button [disabled]=\"!locationFormGroup.valid\" class=\"btn btn-primary\">Submit<\/button>\r\n  <\/form>\r\n<\/div>\r\n",
    "model": "import {  alphaNumericAsync, } from \"@rxweb\/reactive-form-validators\" \r\nimport { ValidationAlphabetLocale } from '@rxweb\/reactive-form-validators';\r\nimport { of } from \"rxjs\" \r\n\r\n   \r\n\r\nexport class Location {\r\n\r\n\t@alphaNumericAsync({validatorConfig:of({locale:ValidationAlphabetLocale.spanish})}) \r\n\tspanishcityName: string;\r\n\t\r\n\t\r\n}\r\n",
    "modelName": "location.model.ts",
    "json": {}
  },
  "messageExample": {
    "notes": null,
    "component": null,
    "html": null,
    "model": "@alphaNumericAsync({validatorConfig:of({message:'Please enter only alphanumerics, special characters are not allowed.'})}) \r\npostalAddress: string;\r\n",
    "modelName": null,
    "json": {}
  },
  "message": {
    "notes": null,
    "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { Location } from './location.model';\r\n\r\n@Component({\r\n    selector: 'app-alphaNumericAsync-message',\r\n    templateUrl: './alpha-numeric-async-message.component.html'\r\n})\r\nexport class AlphaNumericAsyncMessageComponent implements OnInit {\r\n    locationFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let location = new Location();\r\n        this.locationFormGroup = this.formBuilder.formGroup(location);\r\n    }\r\n}\r\n",
    "html": "<div>\r\n  <form  [formGroup]=\"locationFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Postal Address<\/label>\r\n      <input type=\"text\" formControlName=\"postalAddress\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows custom message<br/><\/small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"locationFormGroup.controls.postalAddress.errors\">{{locationFormGroup.controls.postalAddress.errors.alphaNumeric.message}}<br/><\/small>\t\r\n    <\/div>\r\n    <button [disabled]=\"!locationFormGroup.valid\" class=\"btn btn-primary\">Submit<\/button>\r\n  <\/form>\r\n<\/div>\r\n",
    "model": "import {  alphaNumericAsync, } from   \"@rxweb/reactive-form-validators\" \r\n\rimport { of } from \"rxjs\" \r\n\r\n   \r\n\r\nexport class Location {\r\n\r\n\t//Shows custom message\r\n\t@alphaNumericAsync({validatorConfig:of({message:'Please enter only alphanumerics, special characters are not allowed.'})}) \r\n\tpostalAddress: string;\r\n\t\r\n\t\r\n}\r\n",
    "modelName": "location.model.ts",
    "json": {}
  },
  "messageKeyExample": {
    "notes": null,
    "component": null,
    "html": null,
    "model": "@alphaNumericAsync({validatorConfig:of({messageKey:'alphaNumericMessageKey'})}) \r\ncolonyName: string;\r\n",
    "modelName": null,
    "json": {}
  },
  "messageKey": {
    "notes": null,
    "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { Location } from './location.model';\r\n\r\n@Component({\r\n    selector: 'app-alphaNumericAsync-messageKey',\r\n    templateUrl: './alpha-numeric-async-message-key.component.html'\r\n})\r\nexport class AlphaNumericAsyncMessageKeyComponent implements OnInit {\r\n    locationFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let location = new Location();\r\n        this.locationFormGroup = this.formBuilder.formGroup(location);\r\n    }\r\n}\r\n",
    "html": "<div>\r\n  <form  [formGroup]=\"locationFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Colony Name<\/label>\r\n      <input type=\"text\" formControlName=\"colonyName\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">custom message based on messageKey<br/><\/small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"locationFormGroup.controls.colonyName.errors\">{{locationFormGroup.controls.colonyName.errors?.alphaNumericMessageKey?.message}}<br/><\/small>\t\t\r\n    <\/div>\r\n    <button [disabled]=\"!locationFormGroup.valid\" class=\"btn btn-primary\">Submit<\/button>\r\n  <\/form>\r\n<\/div>\r\n",
    "model": "import {  alphaNumericAsync, } from   \"@rxweb/reactive-form-validators\" \r\n\rimport { of } from \"rxjs\" \r\n\r\n   \r\n\r\nexport class Location {\r\n\r\n\t@alphaNumericAsync({validatorConfig:of({messageKey:'alphaNumericMessageKey'})}) \r\n\tcolonyName: string;\r\n\t\r\n\t\r\n}\r\n",
    "modelName": "location.model.ts",
    "json": {}
  },
  "dynamic": {
    "notes": null,
    "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\nimport { FormBuilderConfiguration,} from '@rxweb/reactive-form-validators';\r\n\r\nimport { Location } from './location.model';\r\n\r\n@Component({\r\n    selector: 'app-alphaNumericAsync-dynamic',\r\n    templateUrl: './alpha-numeric-async-dynamic.component.html'\r\n})\r\nexport class AlphaNumericAsyncDynamicComponent implements OnInit {\r\n    locationFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder,private http: HttpClient    ) { }\r\n\r\n    ngOnInit() {\r\n        let location = new Location();\r\n        let formBuilderConfiguration = new FormBuilderConfiguration();\r\n\t\tthis.http.get('assets/examples/reactive-form-validators/decorators/alphaNumericAsync/dynamic/dynamic.json?v=' + environment.appVersion).subscribe(dynamic => {\r\n            formBuilderConfiguration.dynamicValidation = JSON.parse(JSON.stringify(dynamic));\r\n\t\t\tthis.locationFormGroup = this.formBuilder.formGroup(location,formBuilderConfiguration);\r\n       })})\r\n    }\r\n}\r\n",
    "html": "<div>\r\n  <form  *ngIf=\"locationFormGroup\"  [formGroup]=\"locationFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Area Name<\/label>\r\n      <input type=\"text\" formControlName=\"areaName\" class=\"form-control\"   />\r\n      <small class=\"form-text text-danger\" *ngIf=\"locationFormGroup.controls.areaName.errors\">{{locationFormGroup.controls.areaName.errors.alphaNumeric.message}}<br/><\/small>\r\n    <\/div>\r\n    <div class=\"form-group\">\r\n      <label>Flat Address<\/label>\r\n      <input type=\"text\" formControlName=\"flatAddress\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This allowed whitespace in alpha Numeric validation<br/><\/small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"locationFormGroup.controls.flatAddress.errors\">{{locationFormGroup.controls.flatAddress.errors.alphaNumeric.message}}<br/><\/small>\t\r\n    <\/div>\r\n    <div class=\"form-group\">\r\n      <label>SpanishCityName<\/label>\r\n      <input type=\"text\" formControlName=\"spanishcityName\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">It will allow spanish characters in the formControl<br/><\/small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"locationFormGroup.controls.spanishcityName.errors\">{{locationFormGroup.controls.spanishcityName.errors.alphaNumeric.message}}<br/><\/small>\t\r\n    <\/div>\r\n    <div class=\"form-group\">\r\n      <label>Postal Address<\/label>\r\n      <input type=\"text\" formControlName=\"postalAddress\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows custom message<br/><\/small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"locationFormGroup.controls.postalAddress.errors\">{{locationFormGroup.controls.postalAddress.errors.alphaNumeric.message}}<br/><\/small>\t\r\n    <\/div>\r\n    <div class=\"form-group\">\r\n      <label>Colony Name<\/label>\r\n      <input type=\"text\" formControlName=\"colonyName\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">custom message based on messageKey<br/><\/small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"locationFormGroup.controls.colonyName.errors\">{{locationFormGroup.controls.colonyName.errors.alphaNumericMessageKey.message}}<br/><\/small>\t\t\r\n    <\/div>\r\n    <button [disabled]=\"!locationFormGroup.valid\" class=\"btn btn-primary\">Submit<\/button>\r\n  <\/form>\r\n<\/div>\r\n",
    "model": "import {  alphaNumericAsync,prop, } from   \"@rxweb/reactive-form-validators\" \r\n\rimport { of } from \"rxjs\" \r\n\r\n   \r\n\r\nexport class Location {\r\n\r\n\t@prop()\r\n\tareaName: string;\r\n\r\n\t@prop()\r\n\tflatAddress: string;\r\n\r\n\t@prop()\r\n\tspanishcityName: string;\r\n\r\n\t@prop()\r\n\tpostalAddress: string;\r\n\r\n\t@prop()\r\n\tcolonyName: string;\r\n\r\n}\r\n",
    "modelName": "location.model.ts",
    "json": {
      "dynamic.json": {
        "areaName": {
          "alphaNumericAsync": true
        },
        "flatAddress": {
          "alphaNumericAsync": {
            "allowWhiteSpace": "true"
          }
        },
        "spanishcityName": {
          "alphaNumericAsync": {
            "locale": "ValidationAlphabetLocale.spanish"
          }
        },
        "postalAddress": {
          "alphaNumericAsync": {
            "message": "Please enter only alphanumerics, special characters are not allowed."
          }
        },
        "colonyName": {
          "alphaNumericAsync": {
            "messageKey": "alphaNumericMessageKey"
          }
        }
      }
    }
  },
  "add": {
    "notes": null,
    "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { Location } from './location.model';\r\n\r\n@Component({\r\n    selector: 'app-alphaNumericAsync-add',\r\n    templateUrl: './alpha-numeric-async-add.component.html'\r\n})\r\nexport class AlphaNumericAsyncAddComponent implements OnInit {\r\n    locationFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let location = new Location();\r\n        this.locationFormGroup = this.formBuilder.formGroup(location);\r\n    }\r\n}\r\n",
    "html": "<div>\r\n  <form  [formGroup]=\"locationFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Area Name<\/label>\r\n      <input type=\"text\" formControlName=\"areaName\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"locationFormGroup.controls.areaName.errors\">{{locationFormGroup.controls.areaName.errors.alphaNumeric.message}}<br/><\/small>\t\r\n    <\/div>\r\n    <button [disabled]=\"!locationFormGroup.valid\" class=\"btn btn-primary\">Submit<\/button>\r\n  <\/form>\r\n<\/div>\r\n",
    "model": "import {  alphaNumericAsync, } from   \"@rxweb/reactive-form-validators\" \r\n\rimport { of } from \"rxjs\" \r\n\r\n   \r\n\r\nexport class Location {\r\n\r\n\t@alphaNumericAsync() \r\n\tareaName: string;\r\n\t\r\n\t\r\n}\r\n",
    "modelName": "location.model.ts",
    "json": {}
  },
  "edit": {
    "notes": null,
    "component": "import { Component, OnInit } from '@angular\/core';\r\nimport { FormGroup } from \"@angular\/forms\"\r\nimport { HttpClient } from '@angular\/common\/http';\r\n\r\nimport { RxFormBuilder } from '@rxweb\/reactive-form-validators';\r\n\r\nimport { Location } from '.\/location.model';\r\n\r\n@Component({\r\n    selector: 'app-alphaNumericAsync-edit',\r\n    templateUrl: '.\/alpha-numeric-async-edit.component.html'\r\n})\r\nexport class AlphaNumericAsyncEditComponent implements OnInit {\r\n    locationFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder,private http: HttpClient    ) { }\r\n\r\n    ngOnInit() {\r\n        this.http.get('assets\/location-data.json?v=').subscribe(location => {\r\n            this.locationFormGroup = this.formBuilder.formGroup<Location>(Location,location);\r\n       })\r\n    }\r\n}\r\n",
    "html": "<div>\r\n  <form  *ngIf=\"locationFormGroup\"  [formGroup]=\"locationFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Area Name<\/label>\r\n      <input type=\"text\" formControlName=\"areaName\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"locationFormGroup.controls.areaName.errors\">{{locationFormGroup.controls.areaName.errors.alphaNumeric.message}}<br/><\/small>\t\r\n    <\/div>\r\n    <button [disabled]=\"!locationFormGroup.valid\" class=\"btn btn-primary\">Submit<\/button>\r\n  <\/form>\r\n<\/div>\r\n",
    "model": "import {  alphaNumericAsync, } from   \"@rxweb/reactive-form-validators\" \r\n\rimport { of } from \"rxjs\" \r\n\r\n   \r\n\r\nexport class Location {\r\n\r\n\t@alphaNumericAsync() \r\n\tareaName: string;\r\n\t\r\n\t\r\n}\r\n",
    "modelName": "location.model.ts",
    "json": {
      "location-data.json": {
        "areaName": "Delhi"
      }
    }
  }
}