{
    "dynamic": {
        "notes": null,
        "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\nimport { FormBuilderConfiguration,} from '@rxweb/reactive-form-validators';\r\n\r\nimport { AddressInfo } from './address-info.model';\r\n\r\n@Component({\r\n    selector: 'app-alpha-dynamic',\r\n    templateUrl: './alpha-dynamic.component.html'\r\n})\r\nexport class AlphaDynamicComponent implements OnInit {\r\n    addressInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder,private http: HttpClient    ) { }\r\n\r\n    ngOnInit() {\r\n        let addressInfo = new AddressInfo();\r\n        let formBuilderConfiguration = new FormBuilderConfiguration();\r\n\t\tthis.http.get('assets/examples/reactive-form-validators/decorators/alpha/dynamic/dynamic.json?v=' + environment.appVersion).subscribe(dynamic => {\r\n            formBuilderConfiguration.dynamicValidation = JSON.parse(JSON.stringify(dynamic));\r\n\t\t\tthis.addressInfoFormGroup = this.formBuilder.formGroup(addressInfo,formBuilderConfiguration);\r\n        })\r\n    }\r\n}\r\n",
        "html": "<div>\r\n  <form  *ngIf=\"addressInfoFormGroup\"  [formGroup]=\"addressInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Country Name</label>\r\n      <input type=\"text\" formControlName=\"countryName\" class=\"form-control\"   />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Country Code' or 'City' then you need to add this input as 'India'.<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"addressInfoFormGroup.controls.countryName.errors\">{{addressInfoFormGroup.controls.countryName.errors.alpha.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>City</label>\r\n      <input type=\"text\" formControlName=\"cityName\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'City' then you need to add 'Country Name' input as 'India'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t<small class=\"form-text text-danger\" *ngIf=\"addressInfoFormGroup.controls.cityName.errors\">{{addressInfoFormGroup.controls.cityName.errors.alpha.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>State Name</label>\r\n      <input type=\"text\" formControlName=\"stateName\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This allowed whitespace in alpha validation<br/></small>\r\n\t<small class=\"form-text text-danger\" *ngIf=\"addressInfoFormGroup.controls.stateName.errors\">{{addressInfoFormGroup.controls.stateName.errors.alpha.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>State Code</label>\r\n      <input type=\"text\" formControlName=\"stateCode\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n\t<small class=\"form-text text-danger\" *ngIf=\"addressInfoFormGroup.controls.stateCode.errors\">{{addressInfoFormGroup.controls.stateCode.errors.alpha.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>City Code</label>\r\n      <input type=\"text\" formControlName=\"cityCode\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">custom message based on messageKey<br/></small>\r\n\t<small class=\"form-text text-danger\" *ngIf=\"addressInfoFormGroup.controls.cityCode.errors\">{{addressInfoFormGroup.controls.cityCode.errors.alpha.message}}<br/></small>\r\n    </div>\r\n    <button [disabled]=\"!addressInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n",
        "model": "import {  alpha,prop, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class AddressInfo {\r\n\r\n\t@prop()\r\n\tcountryName: string;\r\n\r\n\t@prop()\r\n\tcityName: string;\r\n\r\n\t@prop()\r\n\tstateName: string;\r\n\r\n\t@prop()\r\n\tstateCode: string;\r\n\r\n\t@prop()\r\n\tcityCode: string;\r\n\r\n}\r\n",
        "modelName": "address-info.model.ts",
        "json": {
            "dynamic.json": "{\"countryName\":{\"alpha\":true},\"cityName\":{\"alpha\":{\"conditionalExpression\":\"x => x.countryName ==\\\"India\\\"\"}},\"stateName\":{\"alpha\":{\"allowWhiteSpace\":\"true\"}},\"stateCode\":{\"alpha\":{\"message\":\"You can enter only alphabets.\"}},\"cityCode\":{\"alpha\":{\"messageKey\":\"alphaMessageKey\"}}}"
        }
    }
}