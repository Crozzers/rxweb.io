{"complete":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { AddressInfo } from './address-info.model';\r\n\r\n@Component({\r\n    selector: 'app-rule-complete-template-driven-validation-directives',\r\n    templateUrl: './rule-complete.component.html'\r\n})\r\nexport class RuleCompleteTemplateDrivenValidationDirectivesComponent implements OnInit {\r\n    addressinfo: AddressInfo\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.addressinfo= new AddressInfo()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #addressinfoForm = \"ngForm\" [rxwebForm]=\"addressinfoForm\">\r\n    <div class=\"form-group\">\r\n      <label>Zipcode</label>\r\n\t    <input type=\"text\" name=\"zipcode\" [(ngModel)]=\"addressinfo.zipcode\"  class=\"form-control\" />\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"addressinfoForm.controls?.zipcode?.errors\">{{addressinfoForm.controls?.zipcode?.errors?.rule.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Country Name</label>\r\n\t    <input type=\"text\" name=\"countryName\" [(ngModel)]=\"addressinfo.countryName\"  class=\"form-control\" />\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"addressinfoForm.controls?.countryName?.errors\">{{addressinfoForm.controls?.countryName?.errors?.rule.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>City Name</label>\r\n\t    <input type=\"text\" name=\"cityName\" [(ngModel)]=\"addressinfo.cityName\"  class=\"form-control\" [rule]=\"{'customRules':[(entity) => {return entity.zipcode == 4000 ? { 'required': 'This field is required' } : null;}],'conditionalExpression':'x => x.countryName ==\\'India\\''}\"/>\r\n\r\n      <small class=\"form-text text-muted\">If you want to apply customRules on this field, then you need to enter 'Zipcode' value as 4000.<br/></small>\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'State Name' then you need to add 'Country Name' input as 'India'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"addressinfoForm.controls?.cityName?.errors\">{{addressinfoForm.controls?.cityName?.errors?.rule.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Colony Name</label>\r\n\t    <input type=\"text\" name=\"colonyName\" [(ngModel)]=\"addressinfo.colonyName\"  class=\"form-control\" [rule]=\"{'customRules':[(entity) => {return entity.zipcode == 10001 ? { 'required': 'This field is dependent on the zipcode field' } : null;}]}\"/>\r\n\r\n      <small class=\"form-text text-muted\">rule validation based on the customRules <br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"addressinfoForm.controls?.colonyName?.errors\">{{addressinfoForm.controls?.colonyName?.errors?.rule.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!addressinfoForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class AddressInfo {\r\n\r\n\tzipcode: number;\r\n\r\n\tcountryName: string;\r\n\r\n\tstateName: string;\r\n\r\n\tcityName: string;\r\n\r\n\tcolonyName: string;\r\n\r\n}\r\n","modelName":"address-info.model.ts","json":{}},"customRulesExampleFunction":{"notes":null,"component":null,"html":null,"model":"[rule]=\"{'customRules':[(entity) => {return entity.zipcode == 4000 ? { 'required': 'This field is required' } : null;}],'conditionalExpression':(x,y) => x.countryName == \\'India\\'}\"","modelName":null,"json":{}},"customRules":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { AddressInfo } from './address-info.model';\r\n\r\n@Component({\r\n    selector: 'app-rule-customRules-template-driven-validation-directives',\r\n    templateUrl: './rule-custom-rules.component.html'\r\n})\r\nexport class RuleCustomRulesTemplateDrivenValidationDirectivesComponent implements OnInit {\r\n    addressinfo: AddressInfo\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.addressinfo= new AddressInfo()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #addressinfoForm = \"ngForm\" [rxwebForm]=\"addressinfoForm\">\r\n    <div class=\"form-group\">\r\n      <label>City Name</label>\r\n\t    <input type=\"text\" name=\"cityName\" [(ngModel)]=\"addressinfo.cityName\"  class=\"form-control\" [rule]=\"{'customRules':[(entity) => {return entity.zipcode == 4000 ? { 'required': 'This field is required' } : null;}],'conditionalExpression':'x => x.countryName ==\\'India\\''}\"/>\r\n\r\n      <small class=\"form-text text-muted\">If you want to apply customRules on this field, then you need to enter 'Zipcode' value as 4000.<br/></small>\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'State Name' then you need to add 'Country Name' input as 'India'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"addressinfoForm.controls?.cityName?.errors\">{{addressinfoForm.controls?.cityName?.errors?.rule.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!addressinfoForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class AddressInfo {\r\n\r\n\tcityName: string;\r\n\r\n\tstateName: string;\r\n\r\n}\r\n","modelName":"address-info.model.ts","json":{}},"conditionalExpressionExampleFunction":{"notes":null,"component":null,"html":null,"model":"[rule]=\"{'customRules':[(entity) => {return entity.zipcode == 4000 ? { 'required': 'This field is required' } : null;}],'conditionalExpression':(x,y) => x.countryName == \\'India\\'}\"","modelName":null,"json":{}},"conditionalExpression":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { AddressInfo } from './address-info.model';\r\n\r\n@Component({\r\n    selector: 'app-rule-conditionalExpression-template-driven-validation-directives',\r\n    templateUrl: './rule-conditional-expression.component.html'\r\n})\r\nexport class RuleConditionalExpressionTemplateDrivenValidationDirectivesComponent implements OnInit {\r\n    addressinfo: AddressInfo\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.addressinfo= new AddressInfo()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #addressinfoForm = \"ngForm\" [rxwebForm]=\"addressinfoForm\">\r\n    <div class=\"form-group\">\r\n      <label>Country Name</label>\r\n\t    <input type=\"text\" name=\"countryName\" [(ngModel)]=\"addressinfo.countryName\"  class=\"form-control\" />\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"addressinfoForm.controls?.countryName?.errors\">{{addressinfoForm.controls?.countryName?.errors?.rule.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>City Name</label>\r\n\t    <input type=\"text\" name=\"cityName\" [(ngModel)]=\"addressinfo.cityName\"  class=\"form-control\" [rule]=\"{'customRules':[(entity) => {return entity.zipcode == 4000 ? { 'required': 'This field is required' } : null;}],'conditionalExpression':'x => x.countryName ==\\'India\\''}\"/>\r\n\r\n      <small class=\"form-text text-muted\">If you want to apply customRules on this field, then you need to enter 'Zipcode' value as 4000.<br/></small>\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'State Name' then you need to add 'Country Name' input as 'India'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"addressinfoForm.controls?.cityName?.errors\">{{addressinfoForm.controls?.cityName?.errors?.rule.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!addressinfoForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class AddressInfo {\r\n\r\n\tcountryName: string;\r\n\r\n\tcityName: string;\r\n\r\n\tstateName: string;\r\n\r\n}\r\n","modelName":"address-info.model.ts","json":{}},"customRulesExampleString":{"notes":null,"component":null,"html":null,"model":"[rule]=\"{'customRules':[(entity) => {return entity.zipcode == 4000 ? { 'required': 'This field is required' } : null;}],'conditionalExpression':'x => x.countryName ==\\'India\\''}\"","modelName":null,"json":{}},"conditionalExpressionExampleString":{"notes":null,"component":null,"html":null,"model":"[rule]=\"{'customRules':[(entity) => {return entity.zipcode == 4000 ? { 'required': 'This field is required' } : null;}],'conditionalExpression':'x => x.countryName ==\\'India\\''}\"","modelName":null,"json":{}},"customRulesExample":{"notes":null,"component":null,"html":null,"model":"[rule]=\"{'customRules':[(entity) => {return entity.zipcode == 10001 ? { 'required': 'This field is dependent on the zipcode field' } : null;}]}\"","modelName":null,"json":{}},"add":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { AddressInfo } from './address-info.model';\r\n\r\n@Component({\r\n    selector: 'app-rule-add-template-driven-validation-directives',\r\n    templateUrl: './rule-add.component.html'\r\n})\r\nexport class RuleAddTemplateDrivenValidationDirectivesComponent implements OnInit {\r\n    addressinfo: AddressInfo\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.addressinfo= new AddressInfo()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #addressinfoForm = \"ngForm\" [rxwebForm]=\"addressinfoForm\">\r\n    <div class=\"form-group\">\r\n      <label>Zipcode</label>\r\n\t    <input type=\"text\" name=\"zipcode\" [(ngModel)]=\"addressinfo.zipcode\"  class=\"form-control\" />\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"addressinfoForm.controls?.zipcode?.errors\">{{addressinfoForm.controls?.zipcode?.errors?.rule.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Colony Name</label>\r\n\t    <input type=\"text\" name=\"colonyName\" [(ngModel)]=\"addressinfo.colonyName\"  class=\"form-control\" [rule]=\"{'customRules':[(entity) => {return entity.zipcode == 10001 ? { 'required': 'This field is dependent on the zipcode field' } : null;}]}\"/>\r\n\r\n      <small class=\"form-text text-muted\">rule validation based on the customRules <br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"addressinfoForm.controls?.colonyName?.errors\">{{addressinfoForm.controls?.colonyName?.errors?.rule.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!addressinfoForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class AddressInfo {\r\n\r\n\tzipcode: number;\r\n\r\n\tcolonyName: string;\r\n\r\n}\r\n","modelName":"address-info.model.ts","json":{}}}