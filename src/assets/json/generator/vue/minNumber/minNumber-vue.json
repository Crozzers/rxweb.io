{"complete":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Maths</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"resultInfoFormGroup.props.maths\" type=\"text\" name=\"name\" />\r\n        <div v-if=\"resultInfoFormGroup.controls.maths.errors\">\r\n         <small class=\"form-text text-danger\">{{resultInfoFormGroup.controls.maths.errors.minNumber.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Science</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"resultInfoFormGroup.props.science\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">Shows Custom Validation Message<br/></small>\r\n         <small class=\"form-text text-muted\">you can enter min number upto 35<br/></small>\r\n       <div v-if=\"resultInfoFormGroup.controls.science.errors\">\r\n         <small class=\"form-text text-danger\">{{resultInfoFormGroup.controls.science.errors.minNumber.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>English</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"resultInfoFormGroup.props.english\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">If you want to apply conditional validation on 'English' then you need to add 'Maths' input as '50'.<br/></small>\r\n         <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n       <div v-if=\"resultInfoFormGroup.controls.english.errors\">\r\n         <small class=\"form-text text-danger\">{{resultInfoFormGroup.controls.english.errors.minNumber.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Statstics</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"resultInfoFormGroup.props.statstics\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">Conditional validation will be applied if the 'Statstics' field have value of '50'<br/></small>\r\n         <small class=\"form-text text-muted\">you can enter min number upto 35<br/></small>\r\n         <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n       <div v-if=\"resultInfoFormGroup.controls.statstics.errors\">\r\n         <small class=\"form-text text-danger\">{{resultInfoFormGroup.controls.statstics.errors.minNumber.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Economics</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"resultInfoFormGroup.props.economics\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">Shows Custom Validation Message using message key<br/></small>\r\n       <div v-if=\"resultInfoFormGroup.controls.economics.errors\">\r\n         <small class=\"form-text text-danger\">{{resultInfoFormGroup.controls.economics.errors.minNumber.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { ResultInfo } from './resultInfo.model';\r\n\r\n@Component\r\nexport default class MinNumberCompleteComponent extends Vue {\r\n resultInfoFormGroup: IFormGroup<ResultInfo>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.resultInfoFormGroup = this.formBuilder.formGroup(ResultInfo) as IFormGroup<ResultInfo>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  minNumber, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class ResultInfo {\r\n\r\n\t@minNumber({value:35 }) \r\n\tmaths: number;\r\n\t\r\n\t\r\n\t@minNumber({value:35  ,message:'Number should not be less than 35' }) \r\n\tscience: number;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@minNumber({value:35  ,conditionalExpression:(x,y) => x.maths == 50  }) \r\n\tenglish: number;\r\n\t\r\n\t\r\n\t@minNumber({value:35  ,conditionalExpression:'x => x.maths == 50' }) \r\n\tstatstics: number;\r\n\t\r\n\t\r\n\t@minNumber({value:35  ,messageKey:'minNumberMessageKey' }) \r\n\teconomics: number;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"value":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Maths</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"resultInfoFormGroup.props.maths\" type=\"text\" name=\"name\" />\r\n        <div v-if=\"resultInfoFormGroup.controls.maths.errors\">\r\n         <small class=\"form-text text-danger\">{{resultInfoFormGroup.controls.maths.errors.minNumber.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { ResultInfo } from './resultInfo.model';\r\n\r\n@Component\r\nexport default class MinNumberValueComponent extends Vue {\r\n resultInfoFormGroup: IFormGroup<ResultInfo>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.resultInfoFormGroup = this.formBuilder.formGroup(ResultInfo) as IFormGroup<ResultInfo>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  minNumber, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class ResultInfo {\r\n\r\n\t@minNumber({value:35 }) \r\n\tmaths: number;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"message":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Science</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"resultInfoFormGroup.props.science\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">Shows Custom Validation Message<br/></small>\r\n         <small class=\"form-text text-muted\">you can enter min number upto 35<br/></small>\r\n       <div v-if=\"resultInfoFormGroup.controls.science.errors\">\r\n         <small class=\"form-text text-danger\">{{resultInfoFormGroup.controls.science.errors.minNumber.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { ResultInfo } from './resultInfo.model';\r\n\r\n@Component\r\nexport default class MinNumberMessageComponent extends Vue {\r\n resultInfoFormGroup: IFormGroup<ResultInfo>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.resultInfoFormGroup = this.formBuilder.formGroup(ResultInfo) as IFormGroup<ResultInfo>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  minNumber, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class ResultInfo {\r\n\r\n\t@minNumber({value:35  ,message:'Number should not be less than 35' }) \r\n\tscience: number;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"conditionalExpression":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Maths</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"resultInfoFormGroup.props.maths\" type=\"text\" name=\"name\" />\r\n        <div v-if=\"resultInfoFormGroup.controls.maths.errors\">\r\n         <small class=\"form-text text-danger\">{{resultInfoFormGroup.controls.maths.errors.minNumber.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Statstics</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"resultInfoFormGroup.props.statstics\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">Conditional validation will be applied if the 'Statstics' field have value of '50'<br/></small>\r\n         <small class=\"form-text text-muted\">you can enter min number upto 35<br/></small>\r\n         <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n       <div v-if=\"resultInfoFormGroup.controls.statstics.errors\">\r\n         <small class=\"form-text text-danger\">{{resultInfoFormGroup.controls.statstics.errors.minNumber.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>English</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"resultInfoFormGroup.props.english\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">If you want to apply conditional validation on 'English' then you need to add 'Maths' input as '50'.<br/></small>\r\n         <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n       <div v-if=\"resultInfoFormGroup.controls.english.errors\">\r\n         <small class=\"form-text text-danger\">{{resultInfoFormGroup.controls.english.errors.minNumber.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { ResultInfo } from './resultInfo.model';\r\n\r\n@Component\r\nexport default class MinNumberConditionalExpressionComponent extends Vue {\r\n resultInfoFormGroup: IFormGroup<ResultInfo>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.resultInfoFormGroup = this.formBuilder.formGroup(ResultInfo) as IFormGroup<ResultInfo>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  minNumber, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class ResultInfo {\r\n\r\n\t@minNumber({value:35 }) \r\n\tmaths: number;\r\n\t\r\n\t\r\n\t@minNumber({value:35  ,conditionalExpression:'x => x.maths == 50' }) \r\n\tstatstics: number;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@minNumber({value:35  ,conditionalExpression:(x,y) => x.maths == 50  }) \r\n\tenglish: number;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"messageKey":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Economics</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"resultInfoFormGroup.props.economics\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">Shows Custom Validation Message using message key<br/></small>\r\n       <div v-if=\"resultInfoFormGroup.controls.economics.errors\">\r\n         <small class=\"form-text text-danger\">{{resultInfoFormGroup.controls.economics.errors.minNumber.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { ResultInfo } from './resultInfo.model';\r\n\r\n@Component\r\nexport default class MinNumberMessageKeyComponent extends Vue {\r\n resultInfoFormGroup: IFormGroup<ResultInfo>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.resultInfoFormGroup = this.formBuilder.formGroup(ResultInfo) as IFormGroup<ResultInfo>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  minNumber, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class ResultInfo {\r\n\r\n\t@minNumber({value:35  ,messageKey:'minNumberMessageKey' }) \r\n\teconomics: number;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"add":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Maths</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"resultInfoFormGroup.props.maths\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">you can enter min number upto 35<br/></small>\r\n       <div v-if=\"resultInfoFormGroup.controls.maths.errors\">\r\n         <small class=\"form-text text-danger\">{{resultInfoFormGroup.controls.maths.errors.minNumber.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { ResultInfo } from './resultInfo.model';\r\n\r\n@Component\r\nexport default class MinNumberAddComponent extends Vue {\r\n resultInfoFormGroup: IFormGroup<ResultInfo>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.resultInfoFormGroup = this.formBuilder.formGroup(ResultInfo) as IFormGroup<ResultInfo>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  minNumber, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class ResultInfo {\r\n\r\n\t@minNumber({value:35 }) \r\n\tmaths: number;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"edit":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Maths</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"resultInfoFormGroup.props.maths\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">you can enter min number upto 35<br/></small>\r\n       <div v-if=\"resultInfoFormGroup.controls.maths.errors\">\r\n         <small class=\"form-text text-danger\">{{resultInfoFormGroup.controls.maths.errors.minNumber.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { ResultInfo } from './resultInfo.model';\r\n\r\n@Component\r\nexport default class MinNumberEditComponent extends Vue {\r\n resultInfoFormGroup: IFormGroup<ResultInfo>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.resultInfoFormGroup = this.formBuilder.formGroup(ResultInfo) as IFormGroup<ResultInfo>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  minNumber, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class ResultInfo {\r\n\r\n\t@minNumber({value:35 }) \r\n\tmaths: number;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}}}