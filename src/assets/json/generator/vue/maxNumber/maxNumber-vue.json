{"complete":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Subject Code</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"subjectDetailsFormGroup.props.subjectCode\" type=\"text\" name=\"name\" />\r\n        <div v-if=\"subjectDetailsFormGroup.controls.subjectCode.errors\">\r\n         <small class=\"form-text text-danger\">{{subjectDetailsFormGroup.controls.subjectCode.errors.maxNumber.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Maximum Marks for above subject code</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"subjectDetailsFormGroup.props.maximumMarks\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">To apply the validation of Max Number on 'Maximum Marks' field, then enter the value '8CS5A' in 'Subject Code' textbox and you can enter maxNumber upto 100<br/></small>\r\n          <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n       <div v-if=\"subjectDetailsFormGroup.controls.maximumMarks.errors\">\r\n         <small class=\"form-text text-danger\">{{subjectDetailsFormGroup.controls.maximumMarks.errors.maxNumber.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Obtained Marks for above subject code</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"subjectDetailsFormGroup.props.obtainedMarks\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">To apply the validation of Max Number on 'Obtained Marks' field, then enter the value '8CS5A' in 'Subject Code' textbox and you can enter maxNumber upto 100<br/></small>\r\n          <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n       <div v-if=\"subjectDetailsFormGroup.controls.obtainedMarks.errors\">\r\n         <small class=\"form-text text-danger\">{{subjectDetailsFormGroup.controls.obtainedMarks.errors.maxNumber.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Passing Marks</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"subjectDetailsFormGroup.props.passingMarks\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">you can enter MaxNumber upto 50<br/></small>\r\n       <div v-if=\"subjectDetailsFormGroup.controls.passingMarks.errors\">\r\n         <small class=\"form-text text-danger\">{{subjectDetailsFormGroup.controls.passingMarks.errors.maxNumber.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Practical Marks</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"subjectDetailsFormGroup.props.practicalMarks\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">you can enter MaxNumber upto 70<br/></small>\r\n          <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n       <div v-if=\"subjectDetailsFormGroup.controls.practicalMarks.errors\">\r\n         <small class=\"form-text text-danger\">{{subjectDetailsFormGroup.controls.practicalMarks.errors.maxNumber.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Discipline Marks</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"subjectDetailsFormGroup.props.disciplineMarks\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">Shows custom message based on message key<br/></small>\r\n       <div v-if=\"subjectDetailsFormGroup.controls.disciplineMarks.errors\">\r\n         <small class=\"form-text text-danger\">{{subjectDetailsFormGroup.controls.disciplineMarks.errors.maxNumber.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { SubjectDetails } from './subjectDetails.model';\r\n\r\n@Component\r\nexport default class MaxNumberCompleteComponent extends Vue {\r\n subjectDetailsFormGroup: IFormGroup<SubjectDetails>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.subjectDetailsFormGroup = this.formBuilder.formGroup(SubjectDetails) as IFormGroup<SubjectDetails>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  maxNumber,prop, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class SubjectDetails {\r\n\r\n\t@prop()\r\n\tsubjectCode: string;\r\n\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@maxNumber({value:100  ,conditionalExpression:(x,y) => x.subjectCode == \"8CS5A\"  }) \r\n\tmaximumMarks: number;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@maxNumber({value:100  ,conditionalExpression:'x => x.subjectCode == \"8CS5A\"' }) \r\n\tobtainedMarks: number;\r\n\t\r\n\t\r\n\t@maxNumber({value:50 }) \r\n\tpassingMarks: number;\r\n\t\r\n\t\r\n\t@maxNumber({value:70  ,message:'{{0}} exceeds the Maximum marks Limit' }) \r\n\tpracticalMarks: number;\r\n\t\r\n\t\r\n\t@maxNumber({value:50  ,messageKey:'maxNumberMessageKey' }) \r\n\tdisciplineMarks: number;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"value":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Obtained Marks for above subject code</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"subjectDetailsFormGroup.props.obtainedMarks\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">To apply the validation of Max Number on 'Obtained Marks' field, then enter the value '8CS5A' in 'Subject Code' textbox and you can enter maxNumber upto 100<br/></small>\r\n          <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n       <div v-if=\"subjectDetailsFormGroup.controls.obtainedMarks.errors\">\r\n         <small class=\"form-text text-danger\">{{subjectDetailsFormGroup.controls.obtainedMarks.errors.maxNumber.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Maximum Marks for above subject code</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"subjectDetailsFormGroup.props.maximumMarks\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">To apply the validation of Max Number on 'Maximum Marks' field, then enter the value '8CS5A' in 'Subject Code' textbox and you can enter maxNumber upto 100<br/></small>\r\n          <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n       <div v-if=\"subjectDetailsFormGroup.controls.maximumMarks.errors\">\r\n         <small class=\"form-text text-danger\">{{subjectDetailsFormGroup.controls.maximumMarks.errors.maxNumber.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { SubjectDetails } from './subjectDetails.model';\r\n\r\n@Component\r\nexport default class MaxNumberValueComponent extends Vue {\r\n subjectDetailsFormGroup: IFormGroup<SubjectDetails>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.subjectDetailsFormGroup = this.formBuilder.formGroup(SubjectDetails) as IFormGroup<SubjectDetails>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  maxNumber, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class SubjectDetails {\r\n\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@maxNumber({value:100  ,conditionalExpression:'x => x.subjectCode == \"8CS5A\"' }) \r\n\tobtainedMarks: number;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@maxNumber({value:100  ,conditionalExpression:(x,y) => x.subjectCode == \"8CS5A\"  }) \r\n\tmaximumMarks: number;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"conditionalExpression":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Subject Code</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"subjectDetailsFormGroup.props.subjectCode\" type=\"text\" name=\"name\" />\r\n        <div v-if=\"subjectDetailsFormGroup.controls.subjectCode.errors\">\r\n         <small class=\"form-text text-danger\">{{subjectDetailsFormGroup.controls.subjectCode.errors.maxNumber.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Obtained Marks for above subject code</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"subjectDetailsFormGroup.props.obtainedMarks\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">To apply the validation of Max Number on 'Obtained Marks' field, then enter the value '8CS5A' in 'Subject Code' textbox and you can enter maxNumber upto 100<br/></small>\r\n          <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n       <div v-if=\"subjectDetailsFormGroup.controls.obtainedMarks.errors\">\r\n         <small class=\"form-text text-danger\">{{subjectDetailsFormGroup.controls.obtainedMarks.errors.maxNumber.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Maximum Marks for above subject code</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"subjectDetailsFormGroup.props.maximumMarks\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">To apply the validation of Max Number on 'Maximum Marks' field, then enter the value '8CS5A' in 'Subject Code' textbox and you can enter maxNumber upto 100<br/></small>\r\n          <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n       <div v-if=\"subjectDetailsFormGroup.controls.maximumMarks.errors\">\r\n         <small class=\"form-text text-danger\">{{subjectDetailsFormGroup.controls.maximumMarks.errors.maxNumber.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { SubjectDetails } from './subjectDetails.model';\r\n\r\n@Component\r\nexport default class MaxNumberConditionalExpressionComponent extends Vue {\r\n subjectDetailsFormGroup: IFormGroup<SubjectDetails>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.subjectDetailsFormGroup = this.formBuilder.formGroup(SubjectDetails) as IFormGroup<SubjectDetails>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  maxNumber,prop, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class SubjectDetails {\r\n\r\n\t@prop()\r\n\tsubjectCode: string;\r\n\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@maxNumber({value:100  ,conditionalExpression:'x => x.subjectCode == \"8CS5A\"' }) \r\n\tobtainedMarks: number;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@maxNumber({value:100  ,conditionalExpression:(x,y) => x.subjectCode == \"8CS5A\"  }) \r\n\tmaximumMarks: number;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"message":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Practical Marks</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"subjectDetailsFormGroup.props.practicalMarks\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">you can enter MaxNumber upto 70<br/></small>\r\n          <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n       <div v-if=\"subjectDetailsFormGroup.controls.practicalMarks.errors\">\r\n         <small class=\"form-text text-danger\">{{subjectDetailsFormGroup.controls.practicalMarks.errors.maxNumber.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { SubjectDetails } from './subjectDetails.model';\r\n\r\n@Component\r\nexport default class MaxNumberMessageComponent extends Vue {\r\n subjectDetailsFormGroup: IFormGroup<SubjectDetails>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.subjectDetailsFormGroup = this.formBuilder.formGroup(SubjectDetails) as IFormGroup<SubjectDetails>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  maxNumber, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class SubjectDetails {\r\n\r\n\t@maxNumber({value:70  ,message:'{{0}} exceeds the Maximum marks Limit' }) \r\n\tpracticalMarks: number;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"messageKey":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Discipline Marks</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"subjectDetailsFormGroup.props.disciplineMarks\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">Shows custom message based on message key<br/></small>\r\n       <div v-if=\"subjectDetailsFormGroup.controls.disciplineMarks.errors\">\r\n         <small class=\"form-text text-danger\">{{subjectDetailsFormGroup.controls.disciplineMarks.errors.maxNumber.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { SubjectDetails } from './subjectDetails.model';\r\n\r\n@Component\r\nexport default class MaxNumberMessageKeyComponent extends Vue {\r\n subjectDetailsFormGroup: IFormGroup<SubjectDetails>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.subjectDetailsFormGroup = this.formBuilder.formGroup(SubjectDetails) as IFormGroup<SubjectDetails>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  maxNumber, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class SubjectDetails {\r\n\r\n\t@maxNumber({value:50  ,messageKey:'maxNumberMessageKey' }) \r\n\tdisciplineMarks: number;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"add":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Passing Marks</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"subjectDetailsFormGroup.props.passingMarks\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">you can enter MaxNumber upto 50<br/></small>\r\n       <div v-if=\"subjectDetailsFormGroup.controls.passingMarks.errors\">\r\n         <small class=\"form-text text-danger\">{{subjectDetailsFormGroup.controls.passingMarks.errors.maxNumber.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { SubjectDetails } from './subjectDetails.model';\r\n\r\n@Component\r\nexport default class MaxNumberAddComponent extends Vue {\r\n subjectDetailsFormGroup: IFormGroup<SubjectDetails>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.subjectDetailsFormGroup = this.formBuilder.formGroup(SubjectDetails) as IFormGroup<SubjectDetails>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  maxNumber, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class SubjectDetails {\r\n\r\n\t@maxNumber({value:50 }) \r\n\tpassingMarks: number;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"edit":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Passing Marks</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"subjectDetailsFormGroup.props.passingMarks\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">you can enter MaxNumber upto 50<br/></small>\r\n       <div v-if=\"subjectDetailsFormGroup.controls.passingMarks.errors\">\r\n         <small class=\"form-text text-danger\">{{subjectDetailsFormGroup.controls.passingMarks.errors.maxNumber.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { SubjectDetails } from './subjectDetails.model';\r\n\r\n@Component\r\nexport default class MaxNumberEditComponent extends Vue {\r\n subjectDetailsFormGroup: IFormGroup<SubjectDetails>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.subjectDetailsFormGroup = this.formBuilder.formGroup(SubjectDetails) as IFormGroup<SubjectDetails>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  maxNumber, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class SubjectDetails {\r\n\r\n\t@maxNumber({value:50 }) \r\n\tpassingMarks: number;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}}}