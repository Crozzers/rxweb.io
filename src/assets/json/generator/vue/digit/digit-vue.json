{"complete":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Age</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.age\" type=\"text\" name=\"name\" />\r\n        <div v-if=\"userFormGroup.controls.age.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.age.errors.digit.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Phone Number</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.phoneNumber\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Phone Number' then you need to add 'Age' field greater than or equal to '25'.<br/></small>\r\n         <small class=\"form-text text-muted\">If you want to apply conditional expression of type 'function'<br/></small>\r\n       <div v-if=\"userFormGroup.controls.phoneNumber.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.phoneNumber.errors.digit.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Fax Number</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.faxNumber\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Fax Number' then you need to add 'Age' field greater than or equal to '25'.<br/></small>\r\n         <small class=\"form-text text-muted\">If you want to apply conditional expression of type 'string'<br/></small>\r\n       <div v-if=\"userFormGroup.controls.faxNumber.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.faxNumber.errors.digit.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Mobile Number</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.mobileNumber\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n       <div v-if=\"userFormGroup.controls.mobileNumber.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.mobileNumber.errors.digit.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>  Zip Code</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.zipCode\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">custom message based on messageKey<br/></small>\r\n       <div v-if=\"userFormGroup.controls.zipCode.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.zipCode.errors.digit.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component\r\nexport default class DigitCompleteComponent extends Vue {\r\n userFormGroup: IFormGroup<User>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.userFormGroup = this.formBuilder.formGroup(User) as IFormGroup<User>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  digit, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class User {\r\n\r\n\t@digit() \r\n\tage: number;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@digit({conditionalExpression:(x,y) => x.age >= 25  }) \r\n\tphoneNumber: number;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@digit({conditionalExpression:'x => x.age >=25' }) \r\n\tfaxNumber: number;\r\n\t\r\n\t\r\n\t@digit({message:'Please enter only digit.' }) \r\n\tmobileNumber: number;\r\n\t\r\n\t\r\n\t@digit({messageKey:'digitMessageKey' }) \r\n\tzipCode: number;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"conditionalExpression":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Age</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.age\" type=\"text\" name=\"name\" />\r\n        <div v-if=\"userFormGroup.controls.age.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.age.errors.digit.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Fax Number</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.faxNumber\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Fax Number' then you need to add 'Age' field greater than or equal to '25'.<br/></small>\r\n         <small class=\"form-text text-muted\">If you want to apply conditional expression of type 'string'<br/></small>\r\n       <div v-if=\"userFormGroup.controls.faxNumber.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.faxNumber.errors.digit.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Phone Number</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.phoneNumber\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Phone Number' then you need to add 'Age' field greater than or equal to '25'.<br/></small>\r\n         <small class=\"form-text text-muted\">If you want to apply conditional expression of type 'function'<br/></small>\r\n       <div v-if=\"userFormGroup.controls.phoneNumber.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.phoneNumber.errors.digit.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component\r\nexport default class DigitConditionalExpressionComponent extends Vue {\r\n userFormGroup: IFormGroup<User>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.userFormGroup = this.formBuilder.formGroup(User) as IFormGroup<User>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  digit, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class User {\r\n\r\n\t@digit() \r\n\tage: number;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@digit({conditionalExpression:'x => x.age >=25' }) \r\n\tfaxNumber: number;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@digit({conditionalExpression:(x,y) => x.age >= 25  }) \r\n\tphoneNumber: number;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"message":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Mobile Number</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.mobileNumber\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n       <div v-if=\"userFormGroup.controls.mobileNumber.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.mobileNumber.errors.digit.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component\r\nexport default class DigitMessageComponent extends Vue {\r\n userFormGroup: IFormGroup<User>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.userFormGroup = this.formBuilder.formGroup(User) as IFormGroup<User>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  digit, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class User {\r\n\r\n\t@digit({message:'Please enter only digit.' }) \r\n\tmobileNumber: number;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"messageKey":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>  Zip Code</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.zipCode\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">custom message based on messageKey<br/></small>\r\n       <div v-if=\"userFormGroup.controls.zipCode.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.zipCode.errors.digit.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component\r\nexport default class DigitMessageKeyComponent extends Vue {\r\n userFormGroup: IFormGroup<User>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.userFormGroup = this.formBuilder.formGroup(User) as IFormGroup<User>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  digit, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class User {\r\n\r\n\t@digit({messageKey:'digitMessageKey' }) \r\n\tzipCode: number;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"add":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Age</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.age\" type=\"text\" name=\"name\" />\r\n        <div v-if=\"userFormGroup.controls.age.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.age.errors.digit.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component\r\nexport default class DigitAddComponent extends Vue {\r\n userFormGroup: IFormGroup<User>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.userFormGroup = this.formBuilder.formGroup(User) as IFormGroup<User>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  digit, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class User {\r\n\r\n\t@digit() \r\n\tage: number;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"edit":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Age</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.age\" type=\"text\" name=\"name\" />\r\n        <div v-if=\"userFormGroup.controls.age.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.age.errors.digit.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component\r\nexport default class DigitEditComponent extends Vue {\r\n userFormGroup: IFormGroup<User>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.userFormGroup = this.formBuilder.formGroup(User) as IFormGroup<User>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  digit, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class User {\r\n\r\n\t@digit() \r\n\tage: number;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}}}