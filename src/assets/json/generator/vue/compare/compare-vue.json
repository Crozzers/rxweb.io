{"complete":{"notes":null,"component":"\r\n<template>\r\n\r\n<div class=\"container\">\r\n  <div class=\"col-lg-12\">\r\n    <h1>{{ msg }}</h1>\r\n      <form>\r\n           <div class=\"form-group\">\r\n    <label>Country Name</label>\r\n    <input\r\n      class=\"form-control\"\r\n      v-model=\"addressInfoFormGroup.props.countryName\"\r\n      type=\"text\" />\r\n     \r\n        <div v-if=\"addressInfoFormGroup.controls.countryName.errors\">\r\n     <small class=\"form-text text-danger\">{{addressInfoFormGroup.controls.countryName.errors.alpha.message}}<br/></small>\t\r\n    </div>\r\n  </div>\r\n           <div class=\"form-group\">\r\n    <label>Country Code</label>\r\n    <input\r\n      class=\"form-control\"\r\n      v-model=\"addressInfoFormGroup.props.countryCode\"\r\n      type=\"text\" />\r\n     \r\n          <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Country Code' then you need to add 'Country Name' input as 'India'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n    <div v-if=\"addressInfoFormGroup.controls.countryCode.errors\">\r\n     <small class=\"form-text text-danger\">{{addressInfoFormGroup.controls.countryCode.errors.alpha.message}}<br/></small>\t\r\n    </div>\r\n  </div>\r\n           <div class=\"form-group\">\r\n    <label>City</label>\r\n    <input\r\n      class=\"form-control\"\r\n      v-model=\"addressInfoFormGroup.props.cityName\"\r\n      type=\"text\" />\r\n     \r\n          <small class=\"form-text text-muted\">If you want to apply conditional validation on 'City' then you need to add 'Country Name' input as 'India'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n    <div v-if=\"addressInfoFormGroup.controls.cityName.errors\">\r\n     <small class=\"form-text text-danger\">{{addressInfoFormGroup.controls.cityName.errors.alpha.message}}<br/></small>\t\r\n    </div>\r\n  </div>\r\n           <div class=\"form-group\">\r\n    <label>State Name</label>\r\n    <input\r\n      class=\"form-control\"\r\n      v-model=\"addressInfoFormGroup.props.stateName\"\r\n      type=\"text\" />\r\n     \r\n          <small class=\"form-text text-muted\">This allowed whitespace in alpha validation<br/></small>\r\n    <div v-if=\"addressInfoFormGroup.controls.stateName.errors\">\r\n     <small class=\"form-text text-danger\">{{addressInfoFormGroup.controls.stateName.errors.alpha.message}}<br/></small>\t\r\n    </div>\r\n  </div>\r\n           <div class=\"form-group\">\r\n    <label>State Code</label>\r\n    <input\r\n      class=\"form-control\"\r\n      v-model=\"addressInfoFormGroup.props.stateCode\"\r\n      type=\"text\" />\r\n     \r\n          <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n    <div v-if=\"addressInfoFormGroup.controls.stateCode.errors\">\r\n     <small class=\"form-text text-danger\">{{addressInfoFormGroup.controls.stateCode.errors.alpha.message}}<br/></small>\t\r\n    </div>\r\n  </div>\r\n           <div class=\"form-group\">\r\n    <label>City Code</label>\r\n    <input\r\n      class=\"form-control\"\r\n      v-model=\"addressInfoFormGroup.props.cityCode\"\r\n      type=\"text\" />\r\n     \r\n          <small class=\"form-text text-muted\">custom message based on messageKey<br/></small>\r\n    <div v-if=\"addressInfoFormGroup.controls.cityCode.errors\">\r\n     <small class=\"form-text text-danger\">{{addressInfoFormGroup.controls.cityCode.errors.alpha.message}}<br/></small>\t\r\n    </div>\r\n  </div>\r\n             <button class=\"btn btn-primary\">Submit</button>\r\n       </form>\r\n</div>\r\n</div>\r\n\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { AddressInfo } from './addressInfo.model';\r\n\r\n@Component\r\nexport default class AlphaCompleteComponent extends Vue {\r\n @Prop() msg!: string;\r\n addressInfoFormGroup: IFormGroup<AddressInfo>;\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n  constructor() {\r\n  super();\r\n    this.addressInfoFormGroup = this.formBuilder.formGroup(AddressInfo) as IFormGroup<AddressInfo>;\r\n   }\r\n}\r\n\r\n</script> \r\n","html":null,"model":null,"modelName":null,"json":{}},"conditionalExpression":{"notes":null,"component":"\r\n<template>\r\n\r\n<div class=\"container\">\r\n  <div class=\"col-lg-12\">\r\n    <h1>{{ msg }}</h1>\r\n      <form>\r\n           <div class=\"form-group\">\r\n    <label>Country Name</label>\r\n    <input\r\n      class=\"form-control\"\r\n      v-model=\"addressInfoFormGroup.props.countryName\"\r\n      type=\"text\" />\r\n     \r\n        <div v-if=\"addressInfoFormGroup.controls.countryName.errors\">\r\n     <small class=\"form-text text-danger\">{{addressInfoFormGroup.controls.countryName.errors.alpha.message}}<br/></small>\t\r\n    </div>\r\n  </div>\r\n           <div class=\"form-group\">\r\n    <label>City</label>\r\n    <input\r\n      class=\"form-control\"\r\n      v-model=\"addressInfoFormGroup.props.cityName\"\r\n      type=\"text\" />\r\n     \r\n          <small class=\"form-text text-muted\">If you want to apply conditional validation on 'City' then you need to add 'Country Name' input as 'India'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n    <div v-if=\"addressInfoFormGroup.controls.cityName.errors\">\r\n     <small class=\"form-text text-danger\">{{addressInfoFormGroup.controls.cityName.errors.alpha.message}}<br/></small>\t\r\n    </div>\r\n  </div>\r\n           <div class=\"form-group\">\r\n    <label>Country Code</label>\r\n    <input\r\n      class=\"form-control\"\r\n      v-model=\"addressInfoFormGroup.props.countryCode\"\r\n      type=\"text\" />\r\n     \r\n          <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Country Code' then you need to add 'Country Name' input as 'India'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n    <div v-if=\"addressInfoFormGroup.controls.countryCode.errors\">\r\n     <small class=\"form-text text-danger\">{{addressInfoFormGroup.controls.countryCode.errors.alpha.message}}<br/></small>\t\r\n    </div>\r\n  </div>\r\n             <button class=\"btn btn-primary\">Submit</button>\r\n       </form>\r\n</div>\r\n</div>\r\n\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { AddressInfo } from './addressInfo.model';\r\n\r\n@Component\r\nexport default class AlphaConditionalExpressionComponent extends Vue {\r\n @Prop() msg!: string;\r\n addressInfoFormGroup: IFormGroup<AddressInfo>;\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n  constructor() {\r\n  super();\r\n    this.addressInfoFormGroup = this.formBuilder.formGroup(AddressInfo) as IFormGroup<AddressInfo>;\r\n   }\r\n}\r\n\r\n</script> \r\n","html":null,"model":null,"modelName":null,"json":{}},"allowWhiteSpace":{"notes":null,"component":"\r\n<template>\r\n\r\n<div class=\"container\">\r\n  <div class=\"col-lg-12\">\r\n    <h1>{{ msg }}</h1>\r\n      <form>\r\n           <div class=\"form-group\">\r\n    <label>State Name</label>\r\n    <input\r\n      class=\"form-control\"\r\n      v-model=\"addressInfoFormGroup.props.stateName\"\r\n      type=\"text\" />\r\n     \r\n          <small class=\"form-text text-muted\">This allowed whitespace in alpha validation<br/></small>\r\n    <div v-if=\"addressInfoFormGroup.controls.stateName.errors\">\r\n     <small class=\"form-text text-danger\">{{addressInfoFormGroup.controls.stateName.errors.alpha.message}}<br/></small>\t\r\n    </div>\r\n  </div>\r\n             <button class=\"btn btn-primary\">Submit</button>\r\n       </form>\r\n</div>\r\n</div>\r\n\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { AddressInfo } from './addressInfo.model';\r\n\r\n@Component\r\nexport default class AlphaAllowWhiteSpaceComponent extends Vue {\r\n @Prop() msg!: string;\r\n addressInfoFormGroup: IFormGroup<AddressInfo>;\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n  constructor() {\r\n  super();\r\n    this.addressInfoFormGroup = this.formBuilder.formGroup(AddressInfo) as IFormGroup<AddressInfo>;\r\n   }\r\n}\r\n\r\n</script> \r\n","html":null,"model":null,"modelName":null,"json":{}},"message":{"notes":null,"component":"\r\n<template>\r\n\r\n<div class=\"container\">\r\n  <div class=\"col-lg-12\">\r\n    <h1>{{ msg }}</h1>\r\n      <form>\r\n           <div class=\"form-group\">\r\n    <label>State Code</label>\r\n    <input\r\n      class=\"form-control\"\r\n      v-model=\"addressInfoFormGroup.props.stateCode\"\r\n      type=\"text\" />\r\n     \r\n          <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n    <div v-if=\"addressInfoFormGroup.controls.stateCode.errors\">\r\n     <small class=\"form-text text-danger\">{{addressInfoFormGroup.controls.stateCode.errors.alpha.message}}<br/></small>\t\r\n    </div>\r\n  </div>\r\n             <button class=\"btn btn-primary\">Submit</button>\r\n       </form>\r\n</div>\r\n</div>\r\n\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { AddressInfo } from './addressInfo.model';\r\n\r\n@Component\r\nexport default class AlphaMessageComponent extends Vue {\r\n @Prop() msg!: string;\r\n addressInfoFormGroup: IFormGroup<AddressInfo>;\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n  constructor() {\r\n  super();\r\n    this.addressInfoFormGroup = this.formBuilder.formGroup(AddressInfo) as IFormGroup<AddressInfo>;\r\n   }\r\n}\r\n\r\n</script> \r\n","html":null,"model":null,"modelName":null,"json":{}},"messageKey":{"notes":null,"component":"\r\n<template>\r\n\r\n<div class=\"container\">\r\n  <div class=\"col-lg-12\">\r\n    <h1>{{ msg }}</h1>\r\n      <form>\r\n           <div class=\"form-group\">\r\n    <label>City Code</label>\r\n    <input\r\n      class=\"form-control\"\r\n      v-model=\"addressInfoFormGroup.props.cityCode\"\r\n      type=\"text\" />\r\n     \r\n          <small class=\"form-text text-muted\">custom message based on messageKey<br/></small>\r\n    <div v-if=\"addressInfoFormGroup.controls.cityCode.errors\">\r\n     <small class=\"form-text text-danger\">{{addressInfoFormGroup.controls.cityCode.errors.alpha.message}}<br/></small>\t\r\n    </div>\r\n  </div>\r\n             <button class=\"btn btn-primary\">Submit</button>\r\n       </form>\r\n</div>\r\n</div>\r\n\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { AddressInfo } from './addressInfo.model';\r\n\r\n@Component\r\nexport default class AlphaMessageKeyComponent extends Vue {\r\n @Prop() msg!: string;\r\n addressInfoFormGroup: IFormGroup<AddressInfo>;\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n  constructor() {\r\n  super();\r\n    this.addressInfoFormGroup = this.formBuilder.formGroup(AddressInfo) as IFormGroup<AddressInfo>;\r\n   }\r\n}\r\n\r\n</script> \r\n","html":null,"model":null,"modelName":null,"json":{}},"add":{"notes":null,"component":"\r\n<template>\r\n\r\n<div class=\"container\">\r\n  <div class=\"col-lg-12\">\r\n    <h1>{{ msg }}</h1>\r\n      <form>\r\n           <div class=\"form-group\">\r\n    <label>Country Name</label>\r\n    <input\r\n      class=\"form-control\"\r\n      v-model=\"countryFormGroup.props.countryName\"\r\n      type=\"text\" />\r\n     \r\n        <div v-if=\"countryFormGroup.controls.countryName.errors\">\r\n     <small class=\"form-text text-danger\">{{countryFormGroup.controls.countryName.errors.alpha.message}}<br/></small>\t\r\n    </div>\r\n  </div>\r\n             <button class=\"btn btn-primary\">Submit</button>\r\n       </form>\r\n</div>\r\n</div>\r\n\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { Country } from './country.model';\r\n\r\n@Component\r\nexport default class AlphaAddComponent extends Vue {\r\n @Prop() msg!: string;\r\n countryFormGroup: IFormGroup<Country>;\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n  constructor() {\r\n  super();\r\n    this.countryFormGroup = this.formBuilder.formGroup(Country) as IFormGroup<Country>;\r\n   }\r\n}\r\n\r\n</script> \r\n","html":null,"model":null,"modelName":null,"json":{}},"edit":{"notes":null,"component":"\r\n<template>\r\n\r\n<div class=\"container\">\r\n  <div class=\"col-lg-12\">\r\n    <h1>{{ msg }}</h1>\r\n      <form>\r\n           <div class=\"form-group\">\r\n    <label>Country Name</label>\r\n    <input\r\n      class=\"form-control\"\r\n      v-model=\"countryFormGroup.props.countryName\"\r\n      type=\"text\" />\r\n     \r\n        <div v-if=\"countryFormGroup.controls.countryName.errors\">\r\n     <small class=\"form-text text-danger\">{{countryFormGroup.controls.countryName.errors.alpha.message}}<br/></small>\t\r\n    </div>\r\n  </div>\r\n             <button class=\"btn btn-primary\">Submit</button>\r\n       </form>\r\n</div>\r\n</div>\r\n\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { Country } from './country.model';\r\n\r\n@Component\r\nexport default class AlphaEditComponent extends Vue {\r\n @Prop() msg!: string;\r\n countryFormGroup: IFormGroup<Country>;\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n  constructor() {\r\n  super();\r\n    this.countryFormGroup = this.formBuilder.formGroup(Country) as IFormGroup<Country>;\r\n   }\r\n}\r\n\r\n</script> \r\n","html":null,"model":null,"modelName":null,"json":{}},"fieldName":{"notes":null,"component":"\r\n<template>\r\n\r\n<div class=\"container\">\r\n  <div class=\"col-lg-12\">\r\n    <h1>{{ msg }}</h1>\r\n      <form>\r\n           <div class=\"form-group\">\r\n    <label>Email</label>\r\n    <input\r\n      class=\"form-control\"\r\n      v-model=\"userFormGroup.props.email\"\r\n      type=\"text\" />\r\n     \r\n        <div v-if=\"userFormGroup.controls.email.errors\">\r\n     <small class=\"form-text text-danger\">{{userFormGroup.controls.email.errors.compare.message}}<br/></small>\t\r\n    </div>\r\n  </div>\r\n           <div class=\"form-group\">\r\n    <label>Confirm Email</label>\r\n    <input\r\n      class=\"form-control\"\r\n      v-model=\"userFormGroup.props.confirmEmail\"\r\n      type=\"text\" />\r\n     \r\n        <div v-if=\"userFormGroup.controls.confirmEmail.errors\">\r\n     <small class=\"form-text text-danger\">{{userFormGroup.controls.confirmEmail.errors.compare.message}}<br/></small>\t\r\n    </div>\r\n  </div>\r\n             <button class=\"btn btn-primary\">Submit</button>\r\n       </form>\r\n</div>\r\n</div>\r\n\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component\r\nexport default class CompareFieldNameComponent extends Vue {\r\n @Prop() msg!: string;\r\n userFormGroup: IFormGroup<User>;\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n  constructor() {\r\n  super();\r\n    this.userFormGroup = this.formBuilder.formGroup(User) as IFormGroup<User>;\r\n   }\r\n}\r\n\r\n</script> \r\n","html":null,"model":null,"modelName":null,"json":{}}}