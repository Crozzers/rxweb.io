{"complete":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>First Number</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.firstNumber\" type=\"text\" name=\"name\" />\r\n        <div v-if=\"userFormGroup.controls.firstNumber.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.firstNumber.errors.factor.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Fifth Number</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.fifthNumber\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">To apply the validation of factor on 'Fifth Number' field<br/></small>\r\n       <div v-if=\"userFormGroup.controls.fifthNumber.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.fifthNumber.errors.factor.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Second Number</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.secondNumber\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">To apply the validation of factor on 'Second Number' field, then enter the value '25' in 'First Number' textbox<br/></small>\r\n          <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n       <div v-if=\"userFormGroup.controls.secondNumber.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.secondNumber.errors.factor.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Third Number</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.thirdNumber\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">To apply the validation of factor on 'Third Number' field, then enter the value '25' in 'First Number' textbox<br/></small>\r\n          <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n       <div v-if=\"userFormGroup.controls.thirdNumber.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.thirdNumber.errors.factor.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Fourth Number</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.fourthNumber\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">you can enter only factors of 50<br/></small>\r\n          <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n       <div v-if=\"userFormGroup.controls.fourthNumber.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.fourthNumber.errors.factor.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Sixth Number</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.sixthNumber\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">you can enter only factors of 30<br/></small>\r\n          <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n       <div v-if=\"userFormGroup.controls.sixthNumber.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.sixthNumber.errors.factor.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Seventh Number</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.seventhNumber\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">custom message based on messageKey<br/></small>\r\n       <div v-if=\"userFormGroup.controls.seventhNumber.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.seventhNumber.errors.factor.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component\r\nexport default class FactorCompleteComponent extends Vue {\r\n userFormGroup: IFormGroup<User>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.userFormGroup = this.formBuilder.formGroup(User) as IFormGroup<User>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  factor,prop, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class User {\r\n\r\n\t@prop()\r\n\tfirstNumber: number;\r\n\r\n\t@factor({fieldName:'firstNumber' }) \r\n\tfifthNumber: number;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@factor({fieldName:'firstNumber'  ,conditionalExpression:(x,y) =>x.firstNumber == 25  }) \r\n\tsecondNumber: number;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@factor({fieldName:'firstNumber'  ,conditionalExpression:'x => x.firstNumber == 25' }) \r\n\tthirdNumber: number;\r\n\t\r\n\t\r\n\t@factor({dividend:50 }) \r\n\tfourthNumber: number;\r\n\t\r\n\t\r\n\t@factor({dividend:30  ,message:'{{0}} is not a factor of 50' }) \r\n\tsixthNumber: number;\r\n\t\r\n\t\r\n\t@factor({dividend:50  ,messageKey:'factorMessageKey' }) \r\n\tseventhNumber: number;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"fieldName":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>First Number</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.firstNumber\" type=\"text\" name=\"name\" />\r\n        <div v-if=\"userFormGroup.controls.firstNumber.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.firstNumber.errors.factor.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Fifth Number</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.fifthNumber\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">To apply the validation of factor on 'Fifth Number' field<br/></small>\r\n       <div v-if=\"userFormGroup.controls.fifthNumber.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.fifthNumber.errors.factor.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component\r\nexport default class FactorFieldNameComponent extends Vue {\r\n userFormGroup: IFormGroup<User>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.userFormGroup = this.formBuilder.formGroup(User) as IFormGroup<User>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  factor,prop, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class User {\r\n\r\n\t@prop()\r\n\tfirstNumber: number;\r\n\r\n\t@factor({fieldName:'firstNumber' }) \r\n\tfifthNumber: number;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"conditionalExpression":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>First Number</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.firstNumber\" type=\"text\" name=\"name\" />\r\n        <div v-if=\"userFormGroup.controls.firstNumber.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.firstNumber.errors.factor.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Third Number</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.thirdNumber\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">To apply the validation of factor on 'Third Number' field, then enter the value '25' in 'First Number' textbox<br/></small>\r\n          <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n       <div v-if=\"userFormGroup.controls.thirdNumber.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.thirdNumber.errors.factor.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Second Number</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.secondNumber\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">To apply the validation of factor on 'Second Number' field, then enter the value '25' in 'First Number' textbox<br/></small>\r\n          <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n       <div v-if=\"userFormGroup.controls.secondNumber.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.secondNumber.errors.factor.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component\r\nexport default class FactorConditionalExpressionComponent extends Vue {\r\n userFormGroup: IFormGroup<User>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.userFormGroup = this.formBuilder.formGroup(User) as IFormGroup<User>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  factor,prop, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class User {\r\n\r\n\t@prop()\r\n\tfirstNumber: number;\r\n\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@factor({fieldName:'firstNumber'  ,conditionalExpression:'x => x.firstNumber == 25' }) \r\n\tthirdNumber: number;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@factor({fieldName:'firstNumber'  ,conditionalExpression:(x,y) =>x.firstNumber == 25  }) \r\n\tsecondNumber: number;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"dividend":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Fourth Number</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.fourthNumber\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">you can enter only factors of 50<br/></small>\r\n          <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n       <div v-if=\"userFormGroup.controls.fourthNumber.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.fourthNumber.errors.factor.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component\r\nexport default class FactorDividendComponent extends Vue {\r\n userFormGroup: IFormGroup<User>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.userFormGroup = this.formBuilder.formGroup(User) as IFormGroup<User>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  factor, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class User {\r\n\r\n\t@factor({dividend:50 }) \r\n\tfourthNumber: number;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"message":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Sixth Number</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.sixthNumber\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">you can enter only factors of 30<br/></small>\r\n          <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n       <div v-if=\"userFormGroup.controls.sixthNumber.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.sixthNumber.errors.factor.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component\r\nexport default class FactorMessageComponent extends Vue {\r\n userFormGroup: IFormGroup<User>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.userFormGroup = this.formBuilder.formGroup(User) as IFormGroup<User>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  factor, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class User {\r\n\r\n\t@factor({dividend:30  ,message:'{{0}} is not a factor of 50' }) \r\n\tsixthNumber: number;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"messageKey":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Seventh Number</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.seventhNumber\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">custom message based on messageKey<br/></small>\r\n       <div v-if=\"userFormGroup.controls.seventhNumber.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.seventhNumber.errors.factor.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component\r\nexport default class FactorMessageKeyComponent extends Vue {\r\n userFormGroup: IFormGroup<User>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.userFormGroup = this.formBuilder.formGroup(User) as IFormGroup<User>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  factor, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class User {\r\n\r\n\t@factor({dividend:50  ,messageKey:'factorMessageKey' }) \r\n\tseventhNumber: number;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"add":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>First Number</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.firstNumber\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">You can only enter factors of 50<br/></small>\r\n       <div v-if=\"userFormGroup.controls.firstNumber.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.firstNumber.errors.factor.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component\r\nexport default class FactorAddComponent extends Vue {\r\n userFormGroup: IFormGroup<User>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.userFormGroup = this.formBuilder.formGroup(User) as IFormGroup<User>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  factor, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class User {\r\n\r\n\t@factor({dividend:50 }) \r\n\tfirstNumber: Number;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"edit":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>First Number</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.firstNumber\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">You can only enter factors of 50<br/></small>\r\n       <div v-if=\"userFormGroup.controls.firstNumber.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.firstNumber.errors.factor.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component\r\nexport default class FactorEditComponent extends Vue {\r\n userFormGroup: IFormGroup<User>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.userFormGroup = this.formBuilder.formGroup(User) as IFormGroup<User>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  factor, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class User {\r\n\r\n\t@factor({dividend:50 }) \r\n\tfirstNumber: Number;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}}}