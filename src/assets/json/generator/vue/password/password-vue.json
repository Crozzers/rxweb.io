{"complete":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>New Password</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"loginInfoFormGroup.props.newPassword\" type=\"text\" name=\"name\" />\r\n        <div v-if=\"loginInfoFormGroup.controls.newPassword.errors\">\r\n         <small class=\"form-text text-danger\">{{loginInfoFormGroup.controls.newPassword.errors.password.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Old Password</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"loginInfoFormGroup.props.oldPassword\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">Shows Custom Validation Message<br/></small>\r\n       <div v-if=\"loginInfoFormGroup.controls.oldPassword.errors\">\r\n         <small class=\"form-text text-danger\">{{loginInfoFormGroup.controls.oldPassword.errors.password.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Confirm Password</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"loginInfoFormGroup.props.confirmPassword\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">Shows Custom Validation Message using message key<br/></small>\r\n       <div v-if=\"loginInfoFormGroup.controls.confirmPassword.errors\">\r\n         <small class=\"form-text text-danger\">{{loginInfoFormGroup.controls.confirmPassword.errors.password.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { LoginInfo } from './loginInfo.model';\r\n\r\n@Component\r\nexport default class PasswordCompleteComponent extends Vue {\r\n loginInfoFormGroup: IFormGroup<LoginInfo>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.loginInfoFormGroup = this.formBuilder.formGroup(LoginInfo) as IFormGroup<LoginInfo>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  password, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class LoginInfo {\r\n\r\n\t@password({validation:{maxLength: 10,minLength: 5,digit: true,specialCharacter: true} }) \r\n\tnewPassword: string;\r\n\t\r\n\t\r\n\t@password({validation:{maxLength: 10,minLength: 5,digit: true,specialCharacter: true}  ,message:'Password is not valid' }) \r\n\toldPassword: string;\r\n\t\r\n\t\r\n\t@password({validation:{maxLength: 10,minLength: 5,digit: true,specialCharacter: true}  ,messageKey:'passwordMessageKey' }) \r\n\tconfirmPassword: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"validation":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>New Password</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"loginInfoFormGroup.props.newPassword\" type=\"text\" name=\"name\" />\r\n        <div v-if=\"loginInfoFormGroup.controls.newPassword.errors\">\r\n         <small class=\"form-text text-danger\">{{loginInfoFormGroup.controls.newPassword.errors.password.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { LoginInfo } from './loginInfo.model';\r\n\r\n@Component\r\nexport default class PasswordValidationComponent extends Vue {\r\n loginInfoFormGroup: IFormGroup<LoginInfo>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.loginInfoFormGroup = this.formBuilder.formGroup(LoginInfo) as IFormGroup<LoginInfo>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  password, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class LoginInfo {\r\n\r\n\t@password({validation:{maxLength: 10,minLength: 5,digit: true,specialCharacter: true} }) \r\n\tnewPassword: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"message":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Old Password</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"loginInfoFormGroup.props.oldPassword\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">Shows Custom Validation Message<br/></small>\r\n       <div v-if=\"loginInfoFormGroup.controls.oldPassword.errors\">\r\n         <small class=\"form-text text-danger\">{{loginInfoFormGroup.controls.oldPassword.errors.password.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { LoginInfo } from './loginInfo.model';\r\n\r\n@Component\r\nexport default class PasswordMessageComponent extends Vue {\r\n loginInfoFormGroup: IFormGroup<LoginInfo>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.loginInfoFormGroup = this.formBuilder.formGroup(LoginInfo) as IFormGroup<LoginInfo>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  password, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class LoginInfo {\r\n\r\n\t@password({validation:{maxLength: 10,minLength: 5,digit: true,specialCharacter: true}  ,message:'Password is not valid' }) \r\n\toldPassword: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"messageKey":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Confirm Password</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"loginInfoFormGroup.props.confirmPassword\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">Shows Custom Validation Message using message key<br/></small>\r\n       <div v-if=\"loginInfoFormGroup.controls.confirmPassword.errors\">\r\n         <small class=\"form-text text-danger\">{{loginInfoFormGroup.controls.confirmPassword.errors.password.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { LoginInfo } from './loginInfo.model';\r\n\r\n@Component\r\nexport default class PasswordMessageKeyComponent extends Vue {\r\n loginInfoFormGroup: IFormGroup<LoginInfo>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.loginInfoFormGroup = this.formBuilder.formGroup(LoginInfo) as IFormGroup<LoginInfo>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  password, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class LoginInfo {\r\n\r\n\t@password({validation:{maxLength: 10,minLength: 5,digit: true,specialCharacter: true}  ,messageKey:'passwordMessageKey' }) \r\n\tconfirmPassword: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"add":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Password</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"loginInfoFormGroup.props.password\" type=\"text\" name=\"name\" />\r\n        <div v-if=\"loginInfoFormGroup.controls.password.errors\">\r\n         <small class=\"form-text text-danger\">{{loginInfoFormGroup.controls.password.errors.password.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { LoginInfo } from './loginInfo.model';\r\n\r\n@Component\r\nexport default class PasswordAddComponent extends Vue {\r\n loginInfoFormGroup: IFormGroup<LoginInfo>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.loginInfoFormGroup = this.formBuilder.formGroup(LoginInfo) as IFormGroup<LoginInfo>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  password, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class LoginInfo {\r\n\r\n\t@password({validation:{maxLength: 10,minLength: 5,digit: true,specialCharacter: true} }) \r\n\tpassword: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"edit":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Password</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"loginInfoFormGroup.props.password\" type=\"text\" name=\"name\" />\r\n        <div v-if=\"loginInfoFormGroup.controls.password.errors\">\r\n         <small class=\"form-text text-danger\">{{loginInfoFormGroup.controls.password.errors.password.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { LoginInfo } from './loginInfo.model';\r\n\r\n@Component\r\nexport default class PasswordEditComponent extends Vue {\r\n loginInfoFormGroup: IFormGroup<LoginInfo>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.loginInfoFormGroup = this.formBuilder.formGroup(LoginInfo) as IFormGroup<LoginInfo>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  password, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class LoginInfo {\r\n\r\n\t@password({validation:{maxLength: 10,minLength: 5,digit: true,specialCharacter: true} }) \r\n\tpassword: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}}}