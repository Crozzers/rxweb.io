{"complete":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Country Name</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"contactFormGroup.props.countryName\" type=\"text\" name=\"name\" />\r\n        <div v-if=\"contactFormGroup.controls.countryName.errors\">\r\n         <small class=\"form-text text-danger\">{{contactFormGroup.controls.countryName.errors.minLength.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Mobile No.</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"contactFormGroup.props.mobileNo\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">Minimum length upto 10 characters.<br/></small>\r\n          <small class=\"form-text text-muted\">Shows message from ReactiveFormConfig.<br/></small>\r\n       <div v-if=\"contactFormGroup.controls.mobileNo.errors\">\r\n         <small class=\"form-text text-danger\">{{contactFormGroup.controls.mobileNo.errors.minLength.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Land line No</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"contactFormGroup.props.landLineNo\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">Minimum length upto 8 characters.<br/></small>\r\n          <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n       <div v-if=\"contactFormGroup.controls.landLineNo.errors\">\r\n         <small class=\"form-text text-danger\">{{contactFormGroup.controls.landLineNo.errors.minLength.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Country Code</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"contactFormGroup.props.countryCode\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">If you want to apply conditionalExpression on 'Country Code', then enter 'India' in 'Country Name'<br/></small>\r\n          <small class=\"form-text text-muted\">Minimum length upto 3 characters.<br/></small>\r\n          <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n       <div v-if=\"contactFormGroup.controls.countryCode.errors\">\r\n         <small class=\"form-text text-danger\">{{contactFormGroup.controls.countryCode.errors.minLength.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>State Code</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"contactFormGroup.props.stateCode\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">If you want to apply conditionalExpression on 'State Code', then enter 'India' in 'Country Name'<br/></small>\r\n          <small class=\"form-text text-muted\">Minimum length upto 3 characters.<br/></small>\r\n          <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n       <div v-if=\"contactFormGroup.controls.stateCode.errors\">\r\n         <small class=\"form-text text-danger\">{{contactFormGroup.controls.stateCode.errors.minLength.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>State Name</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"contactFormGroup.props.stateName\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">Shows custom message based on message key<br/></small>\r\n       <div v-if=\"contactFormGroup.controls.stateName.errors\">\r\n         <small class=\"form-text text-danger\">{{contactFormGroup.controls.stateName.errors.minLength.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { Contact } from './contact.model';\r\n\r\n@Component\r\nexport default class MinLengthCompleteComponent extends Vue {\r\n contactFormGroup: IFormGroup<Contact>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.contactFormGroup = this.formBuilder.formGroup(Contact) as IFormGroup<Contact>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  minLength,prop, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class Contact {\r\n\r\n\t@prop()\r\n\tcountryName: string;\r\n\r\n\t@minLength({value:10 }) \r\n\tmobileNo: string;\r\n\t\r\n\t\r\n\t@minLength({value:8  ,message:'Minimum 8 characters are allowed' }) \r\n\tlandLineNo: string;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@minLength({value:3  ,conditionalExpression:(x,y)=> x.countryName == \"India\" }) \r\n\tcountryCode: string;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@minLength({value:3  ,conditionalExpression:'x => x.countryName == \"India\"' }) \r\n\tstateCode: string;\r\n\t\r\n\t\r\n\t@minLength({value:3  ,messageKey:'minLengthMessageKey' }) \r\n\tstateName: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"value":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Mobile No.</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"contactFormGroup.props.mobileNo\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">Minimum length upto 10 characters.<br/></small>\r\n          <small class=\"form-text text-muted\">Shows message from ReactiveFormConfig.<br/></small>\r\n       <div v-if=\"contactFormGroup.controls.mobileNo.errors\">\r\n         <small class=\"form-text text-danger\">{{contactFormGroup.controls.mobileNo.errors.minLength.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { Contact } from './contact.model';\r\n\r\n@Component\r\nexport default class MinLengthValueComponent extends Vue {\r\n contactFormGroup: IFormGroup<Contact>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.contactFormGroup = this.formBuilder.formGroup(Contact) as IFormGroup<Contact>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  minLength, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class Contact {\r\n\r\n\t@minLength({value:10 }) \r\n\tmobileNo: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"message":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Land line No</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"contactFormGroup.props.landLineNo\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">Minimum length upto 8 characters.<br/></small>\r\n          <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n       <div v-if=\"contactFormGroup.controls.landLineNo.errors\">\r\n         <small class=\"form-text text-danger\">{{contactFormGroup.controls.landLineNo.errors.minLength.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { Contact } from './contact.model';\r\n\r\n@Component\r\nexport default class MinLengthMessageComponent extends Vue {\r\n contactFormGroup: IFormGroup<Contact>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.contactFormGroup = this.formBuilder.formGroup(Contact) as IFormGroup<Contact>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  minLength, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class Contact {\r\n\r\n\t@minLength({value:8  ,message:'Minimum 8 characters are allowed' }) \r\n\tlandLineNo: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"conditionalExpression":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Country Name</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"contactFormGroup.props.countryName\" type=\"text\" name=\"name\" />\r\n        <div v-if=\"contactFormGroup.controls.countryName.errors\">\r\n         <small class=\"form-text text-danger\">{{contactFormGroup.controls.countryName.errors.minLength.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>State Code</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"contactFormGroup.props.stateCode\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">If you want to apply conditionalExpression on 'State Code', then enter 'India' in 'Country Name'<br/></small>\r\n          <small class=\"form-text text-muted\">Minimum length upto 3 characters.<br/></small>\r\n          <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n       <div v-if=\"contactFormGroup.controls.stateCode.errors\">\r\n         <small class=\"form-text text-danger\">{{contactFormGroup.controls.stateCode.errors.minLength.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Country Code</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"contactFormGroup.props.countryCode\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">If you want to apply conditionalExpression on 'Country Code', then enter 'India' in 'Country Name'<br/></small>\r\n          <small class=\"form-text text-muted\">Minimum length upto 3 characters.<br/></small>\r\n          <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n       <div v-if=\"contactFormGroup.controls.countryCode.errors\">\r\n         <small class=\"form-text text-danger\">{{contactFormGroup.controls.countryCode.errors.minLength.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { Contact } from './contact.model';\r\n\r\n@Component\r\nexport default class MinLengthConditionalExpressionComponent extends Vue {\r\n contactFormGroup: IFormGroup<Contact>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.contactFormGroup = this.formBuilder.formGroup(Contact) as IFormGroup<Contact>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  minLength,prop, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class Contact {\r\n\r\n\t@prop()\r\n\tcountryName: string;\r\n\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@minLength({value:3  ,conditionalExpression:'x => x.countryName == \"India\"' }) \r\n\tstateCode: string;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@minLength({value:3  ,conditionalExpression:(x,y)=> x.countryName == \"India\" }) \r\n\tcountryCode: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"messageKey":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>State Name</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"contactFormGroup.props.stateName\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">Shows custom message based on message key<br/></small>\r\n       <div v-if=\"contactFormGroup.controls.stateName.errors\">\r\n         <small class=\"form-text text-danger\">{{contactFormGroup.controls.stateName.errors.minLength.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { Contact } from './contact.model';\r\n\r\n@Component\r\nexport default class MinLengthMessageKeyComponent extends Vue {\r\n contactFormGroup: IFormGroup<Contact>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.contactFormGroup = this.formBuilder.formGroup(Contact) as IFormGroup<Contact>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  minLength, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class Contact {\r\n\r\n\t@minLength({value:3  ,messageKey:'minLengthMessageKey' }) \r\n\tstateName: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"add":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Country Name</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"contactFormGroup.props.countryName\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">Minimum length upto 3 characters.<br/></small>\r\n       <div v-if=\"contactFormGroup.controls.countryName.errors\">\r\n         <small class=\"form-text text-danger\">{{contactFormGroup.controls.countryName.errors.minLength.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { Contact } from './contact.model';\r\n\r\n@Component\r\nexport default class MinLengthAddComponent extends Vue {\r\n contactFormGroup: IFormGroup<Contact>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.contactFormGroup = this.formBuilder.formGroup(Contact) as IFormGroup<Contact>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  minLength, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class Contact {\r\n\r\n\t@minLength({value:3 }) \r\n\tcountryName: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"edit":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Country Name</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"contactFormGroup.props.countryName\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">Minimum length upto 3 characters.<br/></small>\r\n       <div v-if=\"contactFormGroup.controls.countryName.errors\">\r\n         <small class=\"form-text text-danger\">{{contactFormGroup.controls.countryName.errors.minLength.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { Contact } from './contact.model';\r\n\r\n@Component\r\nexport default class MinLengthEditComponent extends Vue {\r\n contactFormGroup: IFormGroup<Contact>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.contactFormGroup = this.formBuilder.formGroup(Contact) as IFormGroup<Contact>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  minLength, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class Contact {\r\n\r\n\t@minLength({value:3 }) \r\n\tcountryName: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}}}