{"complete":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label> Continent</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"countryFormGroup.props.continent\" type=\"text\" name=\"name\" />\r\n        <div v-if=\"countryFormGroup.controls.continent.errors\">\r\n         <small class=\"form-text text-danger\">{{countryFormGroup.controls.continent.errors.latitude.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Second Country Latitude</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"countryFormGroup.props.secondCountryLatitude\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Second Country Latitude' then you need to add 'Continent' input as 'Asia'.<br/></small>\r\n         <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n       <div v-if=\"countryFormGroup.controls.secondCountryLatitude.errors\">\r\n         <small class=\"form-text text-danger\">{{countryFormGroup.controls.secondCountryLatitude.errors.latitude.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Third Country Latitude</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"countryFormGroup.props.thirdCountryLatitude\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Third Country Latitude' then you need to add 'Continent' input as 'Asia'.<br/></small>\r\n         <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n       <div v-if=\"countryFormGroup.controls.thirdCountryLatitude.errors\">\r\n         <small class=\"form-text text-danger\">{{countryFormGroup.controls.thirdCountryLatitude.errors.latitude.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>First Country Latitude</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"countryFormGroup.props.firstCountryLatitude\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">You can enter only latitude<br/></small>\r\n         <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n       <div v-if=\"countryFormGroup.controls.firstCountryLatitude.errors\">\r\n         <small class=\"form-text text-danger\">{{countryFormGroup.controls.firstCountryLatitude.errors.latitude.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Fourth Country Latitude</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"countryFormGroup.props.fourthCountryLatitude\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">Shows custom message based on message key<br/></small>\r\n       <div v-if=\"countryFormGroup.controls.fourthCountryLatitude.errors\">\r\n         <small class=\"form-text text-danger\">{{countryFormGroup.controls.fourthCountryLatitude.errors.latitude.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { Country } from './country.model';\r\n\r\n@Component\r\nexport default class LatitudeCompleteComponent extends Vue {\r\n countryFormGroup: IFormGroup<Country>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.countryFormGroup = this.formBuilder.formGroup(Country) as IFormGroup<Country>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  latitude,prop, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class Country {\r\n\r\n\t@prop()\r\n\tcontinent: string;\r\n\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@latitude({conditionalExpression:(x,y) => x.continent == \"Asia\"  }) \r\n\tsecondCountryLatitude: string;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@latitude({conditionalExpression:'x => x.continent ==\"Asia\"' }) \r\n\tthirdCountryLatitude: string;\r\n\t\r\n\t\r\n\t@latitude({message:'{{0}} is not a latitude' }) \r\n\tfirstCountryLatitude: string;\r\n\t\r\n\t\r\n\t@latitude({messageKey:'latitudeMessageKey' }) \r\n\tfourthCountryLatitude: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"conditionalExpression":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label> Continent</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"countryFormGroup.props.continent\" type=\"text\" name=\"name\" />\r\n        <div v-if=\"countryFormGroup.controls.continent.errors\">\r\n         <small class=\"form-text text-danger\">{{countryFormGroup.controls.continent.errors.latitude.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Third Country Latitude</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"countryFormGroup.props.thirdCountryLatitude\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Third Country Latitude' then you need to add 'Continent' input as 'Asia'.<br/></small>\r\n         <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n       <div v-if=\"countryFormGroup.controls.thirdCountryLatitude.errors\">\r\n         <small class=\"form-text text-danger\">{{countryFormGroup.controls.thirdCountryLatitude.errors.latitude.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Second Country Latitude</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"countryFormGroup.props.secondCountryLatitude\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Second Country Latitude' then you need to add 'Continent' input as 'Asia'.<br/></small>\r\n         <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n       <div v-if=\"countryFormGroup.controls.secondCountryLatitude.errors\">\r\n         <small class=\"form-text text-danger\">{{countryFormGroup.controls.secondCountryLatitude.errors.latitude.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { Country } from './country.model';\r\n\r\n@Component\r\nexport default class LatitudeConditionalExpressionComponent extends Vue {\r\n countryFormGroup: IFormGroup<Country>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.countryFormGroup = this.formBuilder.formGroup(Country) as IFormGroup<Country>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  latitude,prop, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class Country {\r\n\r\n\t@prop()\r\n\tcontinent: string;\r\n\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@latitude({conditionalExpression:'x => x.continent ==\"Asia\"' }) \r\n\tthirdCountryLatitude: string;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@latitude({conditionalExpression:(x,y) => x.continent == \"Asia\"  }) \r\n\tsecondCountryLatitude: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"message":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>First Country Latitude</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"countryFormGroup.props.firstCountryLatitude\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">You can enter only latitude<br/></small>\r\n         <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n       <div v-if=\"countryFormGroup.controls.firstCountryLatitude.errors\">\r\n         <small class=\"form-text text-danger\">{{countryFormGroup.controls.firstCountryLatitude.errors.latitude.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { Country } from './country.model';\r\n\r\n@Component\r\nexport default class LatitudeMessageComponent extends Vue {\r\n countryFormGroup: IFormGroup<Country>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.countryFormGroup = this.formBuilder.formGroup(Country) as IFormGroup<Country>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  latitude, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class Country {\r\n\r\n\t@latitude({message:'{{0}} is not a latitude' }) \r\n\tfirstCountryLatitude: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"messageKey":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Fourth Country Latitude</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"countryFormGroup.props.fourthCountryLatitude\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">Shows custom message based on message key<br/></small>\r\n       <div v-if=\"countryFormGroup.controls.fourthCountryLatitude.errors\">\r\n         <small class=\"form-text text-danger\">{{countryFormGroup.controls.fourthCountryLatitude.errors.latitude.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { Country } from './country.model';\r\n\r\n@Component\r\nexport default class LatitudeMessageKeyComponent extends Vue {\r\n countryFormGroup: IFormGroup<Country>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.countryFormGroup = this.formBuilder.formGroup(Country) as IFormGroup<Country>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  latitude, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class Country {\r\n\r\n\t@latitude({messageKey:'latitudeMessageKey' }) \r\n\tfourthCountryLatitude: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"add":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>First Country Latitude</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"numberInfoFormGroup.props.firstCountryLatitude\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">You must enter a valid latitude<br/></small>\r\n       <div v-if=\"numberInfoFormGroup.controls.firstCountryLatitude.errors\">\r\n         <small class=\"form-text text-danger\">{{numberInfoFormGroup.controls.firstCountryLatitude.errors.latitude.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { NumberInfo } from './numberInfo.model';\r\n\r\n@Component\r\nexport default class LatitudeAddComponent extends Vue {\r\n numberInfoFormGroup: IFormGroup<NumberInfo>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.numberInfoFormGroup = this.formBuilder.formGroup(NumberInfo) as IFormGroup<NumberInfo>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  latitude, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class NumberInfo {\r\n\r\n\t@latitude() \r\n\tfirstCountryLatitude: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"edit":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>First Country Latitude</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"numberInfoFormGroup.props.firstCountryLatitude\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">You must enter a valid latitude<br/></small>\r\n       <div v-if=\"numberInfoFormGroup.controls.firstCountryLatitude.errors\">\r\n         <small class=\"form-text text-danger\">{{numberInfoFormGroup.controls.firstCountryLatitude.errors.latitude.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { NumberInfo } from './numberInfo.model';\r\n\r\n@Component\r\nexport default class LatitudeEditComponent extends Vue {\r\n numberInfoFormGroup: IFormGroup<NumberInfo>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.numberInfoFormGroup = this.formBuilder.formGroup(NumberInfo) as IFormGroup<NumberInfo>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  latitude, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class NumberInfo {\r\n\r\n\t@latitude() \r\n\tfirstCountryLatitude: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}}}