{"complete":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Name</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.name\" type=\"text\" name=\"name\" />\r\n        <div v-if=\"userFormGroup.controls.name.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.name.errors.leapYear.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Birth Year</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.birthYear\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">To apply the validation of leapYear on 'Birth Year' field, then enter 'Bharat' in 'Name' textbox<br/></small>\r\n         <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n       <div v-if=\"userFormGroup.controls.birthYear.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.birthYear.errors.leapYear.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Admission Year</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.admissionYear\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">To apply the validation of leapYear on 'Admission Year' field, then enter 'Bharat' in 'Name' textbox<br/></small>\r\n         <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n       <div v-if=\"userFormGroup.controls.admissionYear.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.admissionYear.errors.leapYear.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Joining Year</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.joiningYear\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">you can enter only a leap year<br/></small>\r\n         <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n       <div v-if=\"userFormGroup.controls.joiningYear.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.joiningYear.errors.leapYear.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Promotion Year</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.promotionYear\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">Shows custom message based on message key.<br/></small>\r\n       <div v-if=\"userFormGroup.controls.promotionYear.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.promotionYear.errors.leapYear.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component\r\nexport default class LeapYearCompleteComponent extends Vue {\r\n userFormGroup: IFormGroup<User>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.userFormGroup = this.formBuilder.formGroup(User) as IFormGroup<User>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  leapYear,prop, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class User {\r\n\r\n\t@prop()\r\n\tname: string;\r\n\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@leapYear({conditionalExpression:(x,y) => x.name == \"Bharat\"  }) \r\n\tbirthYear: number;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@leapYear({conditionalExpression:'x => x.name == \"Bharat\"' }) \r\n\tadmissionYear: number;\r\n\t\r\n\t\r\n\t@leapYear({message:'{{0}} is not a leap year' }) \r\n\tjoiningYear: number;\r\n\t\r\n\t\r\n\t@leapYear({messageKey:'leapYearMessageKey' }) \r\n\tpromotionYear: number;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"conditionalExpression":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Name</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.name\" type=\"text\" name=\"name\" />\r\n        <div v-if=\"userFormGroup.controls.name.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.name.errors.leapYear.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Admission Year</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.admissionYear\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">To apply the validation of leapYear on 'Admission Year' field, then enter 'Bharat' in 'Name' textbox<br/></small>\r\n         <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n       <div v-if=\"userFormGroup.controls.admissionYear.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.admissionYear.errors.leapYear.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Birth Year</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.birthYear\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">To apply the validation of leapYear on 'Birth Year' field, then enter 'Bharat' in 'Name' textbox<br/></small>\r\n         <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n       <div v-if=\"userFormGroup.controls.birthYear.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.birthYear.errors.leapYear.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component\r\nexport default class LeapYearConditionalExpressionComponent extends Vue {\r\n userFormGroup: IFormGroup<User>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.userFormGroup = this.formBuilder.formGroup(User) as IFormGroup<User>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  leapYear,prop, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class User {\r\n\r\n\t@prop()\r\n\tname: string;\r\n\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@leapYear({conditionalExpression:'x => x.name == \"Bharat\"' }) \r\n\tadmissionYear: number;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@leapYear({conditionalExpression:(x,y) => x.name == \"Bharat\"  }) \r\n\tbirthYear: number;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"message":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Joining Year</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.joiningYear\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">you can enter only a leap year<br/></small>\r\n         <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n       <div v-if=\"userFormGroup.controls.joiningYear.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.joiningYear.errors.leapYear.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component\r\nexport default class LeapYearMessageComponent extends Vue {\r\n userFormGroup: IFormGroup<User>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.userFormGroup = this.formBuilder.formGroup(User) as IFormGroup<User>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  leapYear, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class User {\r\n\r\n\t@leapYear({message:'{{0}} is not a leap year' }) \r\n\tjoiningYear: number;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"messageKey":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Promotion Year</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.promotionYear\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">Shows custom message based on message key.<br/></small>\r\n       <div v-if=\"userFormGroup.controls.promotionYear.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.promotionYear.errors.leapYear.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component\r\nexport default class LeapYearMessageKeyComponent extends Vue {\r\n userFormGroup: IFormGroup<User>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.userFormGroup = this.formBuilder.formGroup(User) as IFormGroup<User>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  leapYear, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class User {\r\n\r\n\t@leapYear({messageKey:'leapYearMessageKey' }) \r\n\tpromotionYear: number;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"add":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Birth Year</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.birthYear\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">you can enter only a leap year<br/></small>\r\n       <div v-if=\"userFormGroup.controls.birthYear.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.birthYear.errors.leapYear.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component\r\nexport default class LeapYearAddComponent extends Vue {\r\n userFormGroup: IFormGroup<User>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.userFormGroup = this.formBuilder.formGroup(User) as IFormGroup<User>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  leapYear, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class User {\r\n\r\n\t@leapYear() \r\n\tbirthYear: number;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"edit":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Birth Year</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.birthYear\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">you can enter only a leap year<br/></small>\r\n       <div v-if=\"userFormGroup.controls.birthYear.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.birthYear.errors.leapYear.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component\r\nexport default class LeapYearEditComponent extends Vue {\r\n userFormGroup: IFormGroup<User>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.userFormGroup = this.formBuilder.formGroup(User) as IFormGroup<User>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  leapYear, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class User {\r\n\r\n\t@leapYear() \r\n\tbirthYear: number;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}}}