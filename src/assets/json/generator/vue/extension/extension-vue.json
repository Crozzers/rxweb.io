{"complete":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>File Type</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userInfoFormGroup.props.fileType\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">Based on selection of file type conditional validation is applied<br/></small>\r\n       <div v-if=\"userInfoFormGroup.controls.fileType.errors\">\r\n         <small class=\"form-text text-danger\">{{userInfoFormGroup.controls.fileType.errors.extension.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Profile Picture</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userInfoFormGroup.props.profilePicture\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">This field only allow file extension as jpg or bmp only.<br/></small>\r\n       <div v-if=\"userInfoFormGroup.controls.profilePicture.errors\">\r\n         <small class=\"form-text text-danger\">{{userInfoFormGroup.controls.profilePicture.errors.extension.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Image File</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userInfoFormGroup.props.imageFile\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Image File' then you need to add 'File Type' input as 'Picture'.<br/></small>\r\n       <div v-if=\"userInfoFormGroup.controls.imageFile.errors\">\r\n         <small class=\"form-text text-danger\">{{userInfoFormGroup.controls.imageFile.errors.extension.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Document File</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userInfoFormGroup.props.documentFile\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Document File' then you need to add 'File Type' input as 'Document'.<br/></small>\r\n          <small class=\"form-text text-muted\">It allow only doc or docx<br/></small>\r\n       <div v-if=\"userInfoFormGroup.controls.documentFile.errors\">\r\n         <small class=\"form-text text-danger\">{{userInfoFormGroup.controls.documentFile.errors.extension.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Contact File</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userInfoFormGroup.props.contactFile\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">This field only allow file extension as .vcf files.<br/></small>\r\n          <small class=\"form-text text-muted\">It shows custom message<br/></small>\r\n       <div v-if=\"userInfoFormGroup.controls.contactFile.errors\">\r\n         <small class=\"form-text text-danger\">{{userInfoFormGroup.controls.contactFile.errors.extension.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Excel File</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userInfoFormGroup.props.excelFile\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">Shows custom message based on message key<br/></small>\r\n       <div v-if=\"userInfoFormGroup.controls.excelFile.errors\">\r\n         <small class=\"form-text text-danger\">{{userInfoFormGroup.controls.excelFile.errors.extension.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { UserInfo } from './userInfo.model';\r\n\r\n@Component\r\nexport default class ExtensionCompleteComponent extends Vue {\r\n userInfoFormGroup: IFormGroup<UserInfo>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.userInfoFormGroup = this.formBuilder.formGroup(UserInfo) as IFormGroup<UserInfo>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  extension,prop, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class UserInfo {\r\n\r\n\t@prop()\r\n\tfileType: string;\r\n\r\n\t@extension({extensions:['jpg','bmp'] }) \r\n\tprofilePicture: string;\r\n\t\r\n\t\r\n\t@extension({extensions:['jpg','bmp']  ,conditionalExpression:'x => x.fileType == \"Picture\"' }) \r\n\timageFile: string;\r\n\t\r\n\t\r\n\t@extension({extensions:['doc','docx']  ,conditionalExpression:'(x,y) => x.fileType == \"Document\"' }) \r\n\tdocumentFile: string;\r\n\t\r\n\t\r\n\t@extension({extensions:['vcf']  ,message:'You can upload only .vcf files.' }) \r\n\tcontactFile: string;\r\n\t\r\n\t\r\n\t@extension({extensions:['xls','xlsx']  ,messageKey:'extensionMessageKey' }) \r\n\texcelFile: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"extensions":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Profile Picture</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userInfoFormGroup.props.profilePicture\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">This field only allow file extension as jpg or bmp only.<br/></small>\r\n       <div v-if=\"userInfoFormGroup.controls.profilePicture.errors\">\r\n         <small class=\"form-text text-danger\">{{userInfoFormGroup.controls.profilePicture.errors.extension.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { UserInfo } from './userInfo.model';\r\n\r\n@Component\r\nexport default class ExtensionExtensionsComponent extends Vue {\r\n userInfoFormGroup: IFormGroup<UserInfo>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.userInfoFormGroup = this.formBuilder.formGroup(UserInfo) as IFormGroup<UserInfo>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  extension, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class UserInfo {\r\n\r\n\t@extension({extensions:['jpg','bmp'] }) \r\n\tprofilePicture: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"conditionalExpression":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>File Type</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userInfoFormGroup.props.fileType\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">Based on selection of file type conditional validation is applied<br/></small>\r\n       <div v-if=\"userInfoFormGroup.controls.fileType.errors\">\r\n         <small class=\"form-text text-danger\">{{userInfoFormGroup.controls.fileType.errors.extension.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Image File</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userInfoFormGroup.props.imageFile\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Image File' then you need to add 'File Type' input as 'Picture'.<br/></small>\r\n       <div v-if=\"userInfoFormGroup.controls.imageFile.errors\">\r\n         <small class=\"form-text text-danger\">{{userInfoFormGroup.controls.imageFile.errors.extension.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Document File</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userInfoFormGroup.props.documentFile\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Document File' then you need to add 'File Type' input as 'Document'.<br/></small>\r\n          <small class=\"form-text text-muted\">It allow only doc or docx<br/></small>\r\n       <div v-if=\"userInfoFormGroup.controls.documentFile.errors\">\r\n         <small class=\"form-text text-danger\">{{userInfoFormGroup.controls.documentFile.errors.extension.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { UserInfo } from './userInfo.model';\r\n\r\n@Component\r\nexport default class ExtensionConditionalExpressionComponent extends Vue {\r\n userInfoFormGroup: IFormGroup<UserInfo>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.userInfoFormGroup = this.formBuilder.formGroup(UserInfo) as IFormGroup<UserInfo>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  extension,prop, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class UserInfo {\r\n\r\n\t@prop()\r\n\tfileType: string;\r\n\r\n\t@extension({extensions:['jpg','bmp']  ,conditionalExpression:'x => x.fileType == \"Picture\"' }) \r\n\timageFile: string;\r\n\t\r\n\t\r\n\t@extension({extensions:['doc','docx']  ,conditionalExpression:'(x,y) => x.fileType == \"Document\"' }) \r\n\tdocumentFile: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"message":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Contact File</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userInfoFormGroup.props.contactFile\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">This field only allow file extension as .vcf files.<br/></small>\r\n          <small class=\"form-text text-muted\">It shows custom message<br/></small>\r\n       <div v-if=\"userInfoFormGroup.controls.contactFile.errors\">\r\n         <small class=\"form-text text-danger\">{{userInfoFormGroup.controls.contactFile.errors.extension.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { UserInfo } from './userInfo.model';\r\n\r\n@Component\r\nexport default class ExtensionMessageComponent extends Vue {\r\n userInfoFormGroup: IFormGroup<UserInfo>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.userInfoFormGroup = this.formBuilder.formGroup(UserInfo) as IFormGroup<UserInfo>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  extension, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class UserInfo {\r\n\r\n\t@extension({extensions:['vcf']  ,message:'You can upload only .vcf files.' }) \r\n\tcontactFile: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"messageKey":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Excel File</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userInfoFormGroup.props.excelFile\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">Shows custom message based on message key<br/></small>\r\n       <div v-if=\"userInfoFormGroup.controls.excelFile.errors\">\r\n         <small class=\"form-text text-danger\">{{userInfoFormGroup.controls.excelFile.errors.extension.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { UserInfo } from './userInfo.model';\r\n\r\n@Component\r\nexport default class ExtensionMessageKeyComponent extends Vue {\r\n userInfoFormGroup: IFormGroup<UserInfo>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.userInfoFormGroup = this.formBuilder.formGroup(UserInfo) as IFormGroup<UserInfo>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  extension, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class UserInfo {\r\n\r\n\t@extension({extensions:['xls','xlsx']  ,messageKey:'extensionMessageKey' }) \r\n\texcelFile: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"add":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Profile Picture</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userInfoFormGroup.props.profilePicture\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">This field only allow file extension as jpg or bmp only.<br/></small>\r\n       <div v-if=\"userInfoFormGroup.controls.profilePicture.errors\">\r\n         <small class=\"form-text text-danger\">{{userInfoFormGroup.controls.profilePicture.errors.extension.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { UserInfo } from './userInfo.model';\r\n\r\n@Component\r\nexport default class ExtensionAddComponent extends Vue {\r\n userInfoFormGroup: IFormGroup<UserInfo>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.userInfoFormGroup = this.formBuilder.formGroup(UserInfo) as IFormGroup<UserInfo>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  extension, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class UserInfo {\r\n\r\n\t@extension({extensions:['jpg','bmp'] }) \r\n\tprofilePicture: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"edit":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Profile Picture</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userInfoFormGroup.props.profilePicture\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">This field only allow file extension as jpg or bmp only.<br/></small>\r\n       <div v-if=\"userInfoFormGroup.controls.profilePicture.errors\">\r\n         <small class=\"form-text text-danger\">{{userInfoFormGroup.controls.profilePicture.errors.extension.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { UserInfo } from './userInfo.model';\r\n\r\n@Component\r\nexport default class ExtensionEditComponent extends Vue {\r\n userInfoFormGroup: IFormGroup<UserInfo>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.userInfoFormGroup = this.formBuilder.formGroup(UserInfo) as IFormGroup<UserInfo>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  extension, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class UserInfo {\r\n\r\n\t@extension({extensions:['jpg','bmp'] }) \r\n\tprofilePicture: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}}}