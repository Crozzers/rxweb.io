{"complete":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Country Name</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"addressInfoFormGroup.props.countryName\" type=\"text\" name=\"name\" />\r\n        <div v-if=\"addressInfoFormGroup.controls.countryName.errors\">\r\n         <small class=\"form-text text-danger\">{{addressInfoFormGroup.controls.countryName.errors.alpha.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Country Code</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"addressInfoFormGroup.props.countryCode\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Country Code' then you need to add 'Country Name' input as 'India'.<br/></small>\r\n          <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n       <div v-if=\"addressInfoFormGroup.controls.countryCode.errors\">\r\n         <small class=\"form-text text-danger\">{{addressInfoFormGroup.controls.countryCode.errors.alpha.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>City</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"addressInfoFormGroup.props.cityName\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">If you want to apply conditional validation on 'City' then you need to add 'Country Name' input as 'India'.<br/></small>\r\n          <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n       <div v-if=\"addressInfoFormGroup.controls.cityName.errors\">\r\n         <small class=\"form-text text-danger\">{{addressInfoFormGroup.controls.cityName.errors.alpha.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>State Name</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"addressInfoFormGroup.props.stateName\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">This allowed whitespace in alpha validation<br/></small>\r\n       <div v-if=\"addressInfoFormGroup.controls.stateName.errors\">\r\n         <small class=\"form-text text-danger\">{{addressInfoFormGroup.controls.stateName.errors.alpha.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>State Code</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"addressInfoFormGroup.props.stateCode\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n       <div v-if=\"addressInfoFormGroup.controls.stateCode.errors\">\r\n         <small class=\"form-text text-danger\">{{addressInfoFormGroup.controls.stateCode.errors.alpha.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>City Code</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"addressInfoFormGroup.props.cityCode\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">custom message based on messageKey<br/></small>\r\n       <div v-if=\"addressInfoFormGroup.controls.cityCode.errors\">\r\n         <small class=\"form-text text-danger\">{{addressInfoFormGroup.controls.cityCode.errors.alpha.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { AddressInfo } from './addressInfo.model';\r\n\r\n@Component\r\nexport default class AlphaCompleteComponent extends Vue {\r\n addressInfoFormGroup: IFormGroup<AddressInfo>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.addressInfoFormGroup = this.formBuilder.formGroup(AddressInfo) as IFormGroup<AddressInfo>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  alpha, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class AddressInfo {\r\n\r\n\t@alpha() \r\n\tcountryName: string;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@alpha({conditionalExpression:(x,y) => x.countryName == \"India\" }) \r\n\tcountryCode: string;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@alpha({conditionalExpression:'x => x.countryName ==\"India\"' }) \r\n\tcityName: string;\r\n\t\r\n\t\r\n\t@alpha({allowWhiteSpace:true }) \r\n\tstateName: string;\r\n\t\r\n\t\r\n\t@alpha({message:'You can enter only alphabets.' }) \r\n\tstateCode: string;\r\n\t\r\n\t\r\n\t@alpha({messageKey:'alphaMessageKey' }) \r\n\tcityCode: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"conditionalExpression":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Country Name</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"addressInfoFormGroup.props.countryName\" type=\"text\" name=\"name\" />\r\n        <div v-if=\"addressInfoFormGroup.controls.countryName.errors\">\r\n         <small class=\"form-text text-danger\">{{addressInfoFormGroup.controls.countryName.errors.alpha.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>City</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"addressInfoFormGroup.props.cityName\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">If you want to apply conditional validation on 'City' then you need to add 'Country Name' input as 'India'.<br/></small>\r\n          <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n       <div v-if=\"addressInfoFormGroup.controls.cityName.errors\">\r\n         <small class=\"form-text text-danger\">{{addressInfoFormGroup.controls.cityName.errors.alpha.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Country Code</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"addressInfoFormGroup.props.countryCode\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Country Code' then you need to add 'Country Name' input as 'India'.<br/></small>\r\n          <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n       <div v-if=\"addressInfoFormGroup.controls.countryCode.errors\">\r\n         <small class=\"form-text text-danger\">{{addressInfoFormGroup.controls.countryCode.errors.alpha.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { AddressInfo } from './addressInfo.model';\r\n\r\n@Component\r\nexport default class AlphaConditionalExpressionComponent extends Vue {\r\n addressInfoFormGroup: IFormGroup<AddressInfo>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.addressInfoFormGroup = this.formBuilder.formGroup(AddressInfo) as IFormGroup<AddressInfo>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  alpha, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class AddressInfo {\r\n\r\n\t@alpha() \r\n\tcountryName: string;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@alpha({conditionalExpression:'x => x.countryName ==\"India\"' }) \r\n\tcityName: string;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@alpha({conditionalExpression:(x,y) => x.countryName == \"India\" }) \r\n\tcountryCode: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"allowWhiteSpace":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>State Name</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"addressInfoFormGroup.props.stateName\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">This allowed whitespace in alpha validation<br/></small>\r\n       <div v-if=\"addressInfoFormGroup.controls.stateName.errors\">\r\n         <small class=\"form-text text-danger\">{{addressInfoFormGroup.controls.stateName.errors.alpha.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { AddressInfo } from './addressInfo.model';\r\n\r\n@Component\r\nexport default class AlphaAllowWhiteSpaceComponent extends Vue {\r\n addressInfoFormGroup: IFormGroup<AddressInfo>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.addressInfoFormGroup = this.formBuilder.formGroup(AddressInfo) as IFormGroup<AddressInfo>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  alpha, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class AddressInfo {\r\n\r\n\t@alpha({allowWhiteSpace:true }) \r\n\tstateName: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"message":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>State Code</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"addressInfoFormGroup.props.stateCode\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n       <div v-if=\"addressInfoFormGroup.controls.stateCode.errors\">\r\n         <small class=\"form-text text-danger\">{{addressInfoFormGroup.controls.stateCode.errors.alpha.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { AddressInfo } from './addressInfo.model';\r\n\r\n@Component\r\nexport default class AlphaMessageComponent extends Vue {\r\n addressInfoFormGroup: IFormGroup<AddressInfo>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.addressInfoFormGroup = this.formBuilder.formGroup(AddressInfo) as IFormGroup<AddressInfo>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  alpha, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class AddressInfo {\r\n\r\n\t@alpha({message:'You can enter only alphabets.' }) \r\n\tstateCode: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"messageKey":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>City Code</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"addressInfoFormGroup.props.cityCode\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">custom message based on messageKey<br/></small>\r\n       <div v-if=\"addressInfoFormGroup.controls.cityCode.errors\">\r\n         <small class=\"form-text text-danger\">{{addressInfoFormGroup.controls.cityCode.errors.alpha.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { AddressInfo } from './addressInfo.model';\r\n\r\n@Component\r\nexport default class AlphaMessageKeyComponent extends Vue {\r\n addressInfoFormGroup: IFormGroup<AddressInfo>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.addressInfoFormGroup = this.formBuilder.formGroup(AddressInfo) as IFormGroup<AddressInfo>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  alpha, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class AddressInfo {\r\n\r\n\t@alpha({messageKey:'alphaMessageKey' }) \r\n\tcityCode: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"add":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Country Name</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"countryFormGroup.props.countryName\" type=\"text\" name=\"name\" />\r\n        <div v-if=\"countryFormGroup.controls.countryName.errors\">\r\n         <small class=\"form-text text-danger\">{{countryFormGroup.controls.countryName.errors.alpha.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { Country } from './country.model';\r\n\r\n@Component\r\nexport default class AlphaAddComponent extends Vue {\r\n countryFormGroup: IFormGroup<Country>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.countryFormGroup = this.formBuilder.formGroup(Country) as IFormGroup<Country>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  alpha, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class Country {\r\n\r\n\t@alpha() \r\n\tcountryName: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"edit":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Country Name</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"countryFormGroup.props.countryName\" type=\"text\" name=\"name\" />\r\n        <div v-if=\"countryFormGroup.controls.countryName.errors\">\r\n         <small class=\"form-text text-danger\">{{countryFormGroup.controls.countryName.errors.alpha.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { Country } from './country.model';\r\n\r\n@Component\r\nexport default class AlphaEditComponent extends Vue {\r\n countryFormGroup: IFormGroup<Country>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.countryFormGroup = this.formBuilder.formGroup(Country) as IFormGroup<Country>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  alpha, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class Country {\r\n\r\n\t@alpha() \r\n\tcountryName: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}}}