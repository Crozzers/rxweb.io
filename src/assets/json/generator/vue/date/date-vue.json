{"complete":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Birth Date</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userInfoFormGroup.props.birthDate\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">You must enter a proper date format.<br/></small>\r\n       <div v-if=\"userInfoFormGroup.controls.birthDate.errors\">\r\n         <small class=\"form-text text-danger\">{{userInfoFormGroup.controls.birthDate.errors.date.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Admission Date</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userInfoFormGroup.props.admissionDate\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Admission Date' then you need to add 'birthDate' input as '16/04/1997'.<br/></small>\r\n         <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n       <div v-if=\"userInfoFormGroup.controls.admissionDate.errors\">\r\n         <small class=\"form-text text-danger\">{{userInfoFormGroup.controls.admissionDate.errors.date.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Enrollment Date</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userInfoFormGroup.props.enrollmentDate\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Enrollment Date' then you need to add 'birthDate' input as '16/04/1997'.<br/></small>\r\n         <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n       <div v-if=\"userInfoFormGroup.controls.enrollmentDate.errors\">\r\n         <small class=\"form-text text-danger\">{{userInfoFormGroup.controls.enrollmentDate.errors.date.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Allocation Date</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userInfoFormGroup.props.allocationDate\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">enter date format only<br/></small>\r\n         <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n       <div v-if=\"userInfoFormGroup.controls.allocationDate.errors\">\r\n         <small class=\"form-text text-danger\">{{userInfoFormGroup.controls.allocationDate.errors.date.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Confirmation Date</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userInfoFormGroup.props.confirmationDate\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">Custom message based on messageKey<br/></small>\r\n       <div v-if=\"userInfoFormGroup.controls.confirmationDate.errors\">\r\n         <small class=\"form-text text-danger\">{{userInfoFormGroup.controls.confirmationDate.errors.date.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { UserInfo } from './userInfo.model';\r\n\r\n@Component\r\nexport default class DateCompleteComponent extends Vue {\r\n userInfoFormGroup: IFormGroup<UserInfo>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.userInfoFormGroup = this.formBuilder.formGroup(UserInfo) as IFormGroup<UserInfo>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  date, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class UserInfo {\r\n\r\n\t@date() \r\n\tbirthDate: string;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@date({conditionalExpression:(x,y) => x.birthDate == \"16/04/1997\"  }) \r\n\tadmissionDate: string;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@date({conditionalExpression:'x => x.birthDate ==\"16/04/1997\"' }) \r\n\tenrollmentDate: string;\r\n\t\r\n\t\r\n\t@date({message:'{{0}} is not a valid date' }) \r\n\tallocationDate: string;\r\n\t\r\n\t\r\n\t@date({messageKey:'dateMessageKey' }) \r\n\tconfirmationDate: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"conditionalExpression":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Birth Date</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userInfoFormGroup.props.birthDate\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">You must enter a proper date format.<br/></small>\r\n       <div v-if=\"userInfoFormGroup.controls.birthDate.errors\">\r\n         <small class=\"form-text text-danger\">{{userInfoFormGroup.controls.birthDate.errors.date.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Enrollment Date</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userInfoFormGroup.props.enrollmentDate\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Enrollment Date' then you need to add 'birthDate' input as '16/04/1997'.<br/></small>\r\n         <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n       <div v-if=\"userInfoFormGroup.controls.enrollmentDate.errors\">\r\n         <small class=\"form-text text-danger\">{{userInfoFormGroup.controls.enrollmentDate.errors.date.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Admission Date</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userInfoFormGroup.props.admissionDate\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Admission Date' then you need to add 'birthDate' input as '16/04/1997'.<br/></small>\r\n         <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n       <div v-if=\"userInfoFormGroup.controls.admissionDate.errors\">\r\n         <small class=\"form-text text-danger\">{{userInfoFormGroup.controls.admissionDate.errors.date.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { UserInfo } from './userInfo.model';\r\n\r\n@Component\r\nexport default class DateConditionalExpressionComponent extends Vue {\r\n userInfoFormGroup: IFormGroup<UserInfo>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.userInfoFormGroup = this.formBuilder.formGroup(UserInfo) as IFormGroup<UserInfo>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  date, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class UserInfo {\r\n\r\n\t@date() \r\n\tbirthDate: string;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@date({conditionalExpression:'x => x.birthDate ==\"16/04/1997\"' }) \r\n\tenrollmentDate: string;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@date({conditionalExpression:(x,y) => x.birthDate == \"16/04/1997\"  }) \r\n\tadmissionDate: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"message":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Allocation Date</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userInfoFormGroup.props.allocationDate\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">enter date format only<br/></small>\r\n         <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n       <div v-if=\"userInfoFormGroup.controls.allocationDate.errors\">\r\n         <small class=\"form-text text-danger\">{{userInfoFormGroup.controls.allocationDate.errors.date.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { UserInfo } from './userInfo.model';\r\n\r\n@Component\r\nexport default class DateMessageComponent extends Vue {\r\n userInfoFormGroup: IFormGroup<UserInfo>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.userInfoFormGroup = this.formBuilder.formGroup(UserInfo) as IFormGroup<UserInfo>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  date, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class UserInfo {\r\n\r\n\t@date({message:'{{0}} is not a valid date' }) \r\n\tallocationDate: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"messageKey":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Confirmation Date</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userInfoFormGroup.props.confirmationDate\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">Custom message based on messageKey<br/></small>\r\n       <div v-if=\"userInfoFormGroup.controls.confirmationDate.errors\">\r\n         <small class=\"form-text text-danger\">{{userInfoFormGroup.controls.confirmationDate.errors.date.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { UserInfo } from './userInfo.model';\r\n\r\n@Component\r\nexport default class DateMessageKeyComponent extends Vue {\r\n userInfoFormGroup: IFormGroup<UserInfo>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.userInfoFormGroup = this.formBuilder.formGroup(UserInfo) as IFormGroup<UserInfo>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  date, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class UserInfo {\r\n\r\n\t@date({messageKey:'dateMessageKey' }) \r\n\tconfirmationDate: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"add":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Birth Date</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userInfoFormGroup.props.birthDate\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">You must enter a valid date only<br/></small>\r\n       <div v-if=\"userInfoFormGroup.controls.birthDate.errors\">\r\n         <small class=\"form-text text-danger\">{{userInfoFormGroup.controls.birthDate.errors.date.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { UserInfo } from './userInfo.model';\r\n\r\n@Component\r\nexport default class DateAddComponent extends Vue {\r\n userInfoFormGroup: IFormGroup<UserInfo>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.userInfoFormGroup = this.formBuilder.formGroup(UserInfo) as IFormGroup<UserInfo>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  date, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class UserInfo {\r\n\r\n\t@date() \r\n\tbirthDate: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"edit":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Birth Date</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userInfoFormGroup.props.birthDate\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">You must enter a valid date only<br/></small>\r\n       <div v-if=\"userInfoFormGroup.controls.birthDate.errors\">\r\n         <small class=\"form-text text-danger\">{{userInfoFormGroup.controls.birthDate.errors.date.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { UserInfo } from './userInfo.model';\r\n\r\n@Component\r\nexport default class DateEditComponent extends Vue {\r\n userInfoFormGroup: IFormGroup<UserInfo>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.userInfoFormGroup = this.formBuilder.formGroup(UserInfo) as IFormGroup<UserInfo>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  date, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class UserInfo {\r\n\r\n\t@date() \r\n\tbirthDate: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}}}