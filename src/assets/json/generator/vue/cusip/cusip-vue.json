{"complete":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Company Name</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"companyInfoFormGroup.props.companyName\" type=\"text\" name=\"name\" />\r\n        <div v-if=\"companyInfoFormGroup.controls.companyName.errors\">\r\n         <small class=\"form-text text-danger\">{{companyInfoFormGroup.controls.companyName.errors.cusip.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Oracle Corporation Cusip Code</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"companyInfoFormGroup.props.oracleCorporationCusipCode\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">You must enter a 9-character alphanumeric cusic code.<br/></small>\r\n       <div v-if=\"companyInfoFormGroup.controls.oracleCorporationCusipCode.errors\">\r\n         <small class=\"form-text text-danger\">{{companyInfoFormGroup.controls.oracleCorporationCusipCode.errors.cusip.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Google Inc. Cusip Code</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"companyInfoFormGroup.props.googleIncCusipCode\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Google Inc. Cusip Code' then you need to add 'Company Name' input as 'Google'.<br/></small>\r\n          <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n       <div v-if=\"companyInfoFormGroup.controls.googleIncCusipCode.errors\">\r\n         <small class=\"form-text text-danger\">{{companyInfoFormGroup.controls.googleIncCusipCode.errors.cusip.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Microsoft Corporation Cusip Code</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"companyInfoFormGroup.props.microsoftCorporationCusipCode\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Microsoft Corporation Cusip Code' then you need to add 'Company Name' input as 'Microsoft'.<br/></small>\r\n          <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n       <div v-if=\"companyInfoFormGroup.controls.microsoftCorporationCusipCode.errors\">\r\n         <small class=\"form-text text-danger\">{{companyInfoFormGroup.controls.microsoftCorporationCusipCode.errors.cusip.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Apple Inc Cusip Code</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"companyInfoFormGroup.props.appleIncCusipCode\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">enter 9-character alphanumeric cusip Code only<br/></small>\r\n          <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n       <div v-if=\"companyInfoFormGroup.controls.appleIncCusipCode.errors\">\r\n         <small class=\"form-text text-danger\">{{companyInfoFormGroup.controls.appleIncCusipCode.errors.cusip.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Amazon Corporation Cusip Code</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"companyInfoFormGroup.props.amazonCorporationCusipCode\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">enter 9-character alphanumeric cusip Code only<br/></small>\r\n          <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n       <div v-if=\"companyInfoFormGroup.controls.amazonCorporationCusipCode.errors\">\r\n         <small class=\"form-text text-danger\">{{companyInfoFormGroup.controls.amazonCorporationCusipCode.errors.cusip.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { CompanyInfo } from './companyInfo.model';\r\n\r\n@Component\r\nexport default class CusipCompleteComponent extends Vue {\r\n companyInfoFormGroup: IFormGroup<CompanyInfo>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.companyInfoFormGroup = this.formBuilder.formGroup(CompanyInfo) as IFormGroup<CompanyInfo>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  cusip,prop, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class CompanyInfo {\r\n\r\n\t@prop()\r\n\tcompanyName: string;\r\n\r\n\t@cusip() \r\n\toracleCorporationCusipCode: string;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@cusip({conditionalExpression:(x,y) => x.companyName == \"Google\"  }) \r\n\tgoogleIncCusipCode: string;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@cusip({conditionalExpression:'x => x.companyName ==\"Microsoft\"' }) \r\n\tmicrosoftCorporationCusipCode: string;\r\n\t\r\n\t\r\n\t@cusip({message:'{{0}} is not a valid cusip Code' }) \r\n\tappleIncCusipCode: string;\r\n\t\r\n\t\r\n\t@cusip({messageKey:'cusipMessageKey' }) \r\n\tamazonCorporationCusipCode: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"conditionalExpression":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Company Name</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"companyInfoFormGroup.props.companyName\" type=\"text\" name=\"name\" />\r\n        <div v-if=\"companyInfoFormGroup.controls.companyName.errors\">\r\n         <small class=\"form-text text-danger\">{{companyInfoFormGroup.controls.companyName.errors.cusip.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Microsoft Corporation Cusip Code</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"companyInfoFormGroup.props.microsoftCorporationCusipCode\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Microsoft Corporation Cusip Code' then you need to add 'Company Name' input as 'Microsoft'.<br/></small>\r\n          <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n       <div v-if=\"companyInfoFormGroup.controls.microsoftCorporationCusipCode.errors\">\r\n         <small class=\"form-text text-danger\">{{companyInfoFormGroup.controls.microsoftCorporationCusipCode.errors.cusip.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Google Inc. Cusip Code</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"companyInfoFormGroup.props.googleIncCusipCode\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Google Inc. Cusip Code' then you need to add 'Company Name' input as 'Google'.<br/></small>\r\n          <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n       <div v-if=\"companyInfoFormGroup.controls.googleIncCusipCode.errors\">\r\n         <small class=\"form-text text-danger\">{{companyInfoFormGroup.controls.googleIncCusipCode.errors.cusip.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { CompanyInfo } from './companyInfo.model';\r\n\r\n@Component\r\nexport default class CusipConditionalExpressionComponent extends Vue {\r\n companyInfoFormGroup: IFormGroup<CompanyInfo>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.companyInfoFormGroup = this.formBuilder.formGroup(CompanyInfo) as IFormGroup<CompanyInfo>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  cusip,prop, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class CompanyInfo {\r\n\r\n\t@prop()\r\n\tcompanyName: string;\r\n\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@cusip({conditionalExpression:'x => x.companyName ==\"Microsoft\"' }) \r\n\tmicrosoftCorporationCusipCode: string;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@cusip({conditionalExpression:(x,y) => x.companyName == \"Google\"  }) \r\n\tgoogleIncCusipCode: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"message":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Apple Inc Cusip Code</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"companyInfoFormGroup.props.appleIncCusipCode\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">enter 9-character alphanumeric cusip Code only<br/></small>\r\n          <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n       <div v-if=\"companyInfoFormGroup.controls.appleIncCusipCode.errors\">\r\n         <small class=\"form-text text-danger\">{{companyInfoFormGroup.controls.appleIncCusipCode.errors.cusip.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { CompanyInfo } from './companyInfo.model';\r\n\r\n@Component\r\nexport default class CusipMessageComponent extends Vue {\r\n companyInfoFormGroup: IFormGroup<CompanyInfo>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.companyInfoFormGroup = this.formBuilder.formGroup(CompanyInfo) as IFormGroup<CompanyInfo>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  cusip, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class CompanyInfo {\r\n\r\n\t@cusip({message:'{{0}} is not a valid cusip Code' }) \r\n\tappleIncCusipCode: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"messageKey":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Amazon Corporation Cusip Code</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"companyInfoFormGroup.props.amazonCorporationCusipCode\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">enter 9-character alphanumeric cusip Code only<br/></small>\r\n          <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n       <div v-if=\"companyInfoFormGroup.controls.amazonCorporationCusipCode.errors\">\r\n         <small class=\"form-text text-danger\">{{companyInfoFormGroup.controls.amazonCorporationCusipCode.errors.cusip.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { CompanyInfo } from './companyInfo.model';\r\n\r\n@Component\r\nexport default class CusipMessageKeyComponent extends Vue {\r\n companyInfoFormGroup: IFormGroup<CompanyInfo>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.companyInfoFormGroup = this.formBuilder.formGroup(CompanyInfo) as IFormGroup<CompanyInfo>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  cusip, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class CompanyInfo {\r\n\r\n\t@cusip({messageKey:'cusipMessageKey' }) \r\n\tamazonCorporationCusipCode: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"add":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Oracle Corporation Cusip Code</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"companyInfoFormGroup.props.oracleCorporationCusipCode\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">You must enter a valid cusip Code only<br/></small>\r\n       <div v-if=\"companyInfoFormGroup.controls.oracleCorporationCusipCode.errors\">\r\n         <small class=\"form-text text-danger\">{{companyInfoFormGroup.controls.oracleCorporationCusipCode.errors.cusip.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { CompanyInfo } from './companyInfo.model';\r\n\r\n@Component\r\nexport default class CusipAddComponent extends Vue {\r\n companyInfoFormGroup: IFormGroup<CompanyInfo>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.companyInfoFormGroup = this.formBuilder.formGroup(CompanyInfo) as IFormGroup<CompanyInfo>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  cusip, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class CompanyInfo {\r\n\r\n\t@cusip() \r\n\toracleCorporationCusipCode: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"edit":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Oracle Corporation Cusip Code</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"companyInfoFormGroup.props.oracleCorporationCusipCode\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">You must enter a valid cusip Code only<br/></small>\r\n       <div v-if=\"companyInfoFormGroup.controls.oracleCorporationCusipCode.errors\">\r\n         <small class=\"form-text text-danger\">{{companyInfoFormGroup.controls.oracleCorporationCusipCode.errors.cusip.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { CompanyInfo } from './companyInfo.model';\r\n\r\n@Component\r\nexport default class CusipEditComponent extends Vue {\r\n companyInfoFormGroup: IFormGroup<CompanyInfo>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.companyInfoFormGroup = this.formBuilder.formGroup(CompanyInfo) as IFormGroup<CompanyInfo>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  cusip, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class CompanyInfo {\r\n\r\n\t@cusip() \r\n\toracleCorporationCusipCode: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}}}