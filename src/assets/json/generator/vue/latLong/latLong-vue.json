{"complete":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Continent</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"countryFormGroup.props.continent\" type=\"text\" name=\"name\" />\r\n        <div v-if=\"countryFormGroup.controls.continent.errors\">\r\n         <small class=\"form-text text-danger\">{{countryFormGroup.controls.continent.errors.latLong.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Second Country</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"countryFormGroup.props.secondCountry\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Second Country' then you need to add 'Continent' input as 'Asia'.<br/></small>\r\n          <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n       <div v-if=\"countryFormGroup.controls.secondCountry.errors\">\r\n         <small class=\"form-text text-danger\">{{countryFormGroup.controls.secondCountry.errors.latLong.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Third Country</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"countryFormGroup.props.thirdCountry\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Third Country' then you need to add 'Continent' input as 'Asia'.<br/></small>\r\n          <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n       <div v-if=\"countryFormGroup.controls.thirdCountry.errors\">\r\n         <small class=\"form-text text-danger\">{{countryFormGroup.controls.thirdCountry.errors.latLong.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>First Country</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"countryFormGroup.props.firstCountry\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">enter latitude or longitude only<br/></small>\r\n          <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n       <div v-if=\"countryFormGroup.controls.firstCountry.errors\">\r\n         <small class=\"form-text text-danger\">{{countryFormGroup.controls.firstCountry.errors.latLong.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Fourth Country</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"countryFormGroup.props.fourthCountry\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">Shows custom message based on message key.<br/></small>\r\n       <div v-if=\"countryFormGroup.controls.fourthCountry.errors\">\r\n         <small class=\"form-text text-danger\">{{countryFormGroup.controls.fourthCountry.errors.latLong.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { Country } from './country.model';\r\n\r\n@Component\r\nexport default class LatLongCompleteComponent extends Vue {\r\n countryFormGroup: IFormGroup<Country>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.countryFormGroup = this.formBuilder.formGroup(Country) as IFormGroup<Country>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  latLong,prop, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class Country {\r\n\r\n\t@prop()\r\n\tcontinent: string;\r\n\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@latLong({conditionalExpression:(x,y) => x.continent == \"Asia\"  }) \r\n\tsecondCountry: string;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@latLong({conditionalExpression:'x => x.continent ==\"Asia\"' }) \r\n\tthirdCountry: string;\r\n\t\r\n\t\r\n\t@latLong({message:'{{0}} is not a proper proper Latitude or Longitude' }) \r\n\tfirstCountry: string;\r\n\t\r\n\t\r\n\t@latLong({messageKey:'latLongMessageKey' }) \r\n\tfourthCountry: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"conditionalExpression":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Continent</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"countryFormGroup.props.continent\" type=\"text\" name=\"name\" />\r\n        <div v-if=\"countryFormGroup.controls.continent.errors\">\r\n         <small class=\"form-text text-danger\">{{countryFormGroup.controls.continent.errors.latLong.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Third Country</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"countryFormGroup.props.thirdCountry\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Third Country' then you need to add 'Continent' input as 'Asia'.<br/></small>\r\n          <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n       <div v-if=\"countryFormGroup.controls.thirdCountry.errors\">\r\n         <small class=\"form-text text-danger\">{{countryFormGroup.controls.thirdCountry.errors.latLong.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Second Country</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"countryFormGroup.props.secondCountry\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Second Country' then you need to add 'Continent' input as 'Asia'.<br/></small>\r\n          <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n       <div v-if=\"countryFormGroup.controls.secondCountry.errors\">\r\n         <small class=\"form-text text-danger\">{{countryFormGroup.controls.secondCountry.errors.latLong.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { Country } from './country.model';\r\n\r\n@Component\r\nexport default class LatLongConditionalExpressionComponent extends Vue {\r\n countryFormGroup: IFormGroup<Country>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.countryFormGroup = this.formBuilder.formGroup(Country) as IFormGroup<Country>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  latLong,prop, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class Country {\r\n\r\n\t@prop()\r\n\tcontinent: string;\r\n\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@latLong({conditionalExpression:'x => x.continent ==\"Asia\"' }) \r\n\tthirdCountry: string;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@latLong({conditionalExpression:(x,y) => x.continent == \"Asia\"  }) \r\n\tsecondCountry: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"message":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>First Country</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"countryFormGroup.props.firstCountry\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">enter latitude or longitude only<br/></small>\r\n          <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n       <div v-if=\"countryFormGroup.controls.firstCountry.errors\">\r\n         <small class=\"form-text text-danger\">{{countryFormGroup.controls.firstCountry.errors.latLong.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { Country } from './country.model';\r\n\r\n@Component\r\nexport default class LatLongMessageComponent extends Vue {\r\n countryFormGroup: IFormGroup<Country>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.countryFormGroup = this.formBuilder.formGroup(Country) as IFormGroup<Country>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  latLong, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class Country {\r\n\r\n\t@latLong({message:'{{0}} is not a proper proper Latitude or Longitude' }) \r\n\tfirstCountry: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"messageKey":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Fourth Country</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"countryFormGroup.props.fourthCountry\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">Shows custom message based on message key.<br/></small>\r\n       <div v-if=\"countryFormGroup.controls.fourthCountry.errors\">\r\n         <small class=\"form-text text-danger\">{{countryFormGroup.controls.fourthCountry.errors.latLong.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { Country } from './country.model';\r\n\r\n@Component\r\nexport default class LatLongMessageKeyComponent extends Vue {\r\n countryFormGroup: IFormGroup<Country>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.countryFormGroup = this.formBuilder.formGroup(Country) as IFormGroup<Country>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  latLong, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class Country {\r\n\r\n\t@latLong({messageKey:'latLongMessageKey' }) \r\n\tfourthCountry: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"add":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>First Country</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"countryFormGroup.props.firstCountry\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">You must enter a proper Latitude or Longitude<br/></small>\r\n       <div v-if=\"countryFormGroup.controls.firstCountry.errors\">\r\n         <small class=\"form-text text-danger\">{{countryFormGroup.controls.firstCountry.errors.latLong.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { Country } from './country.model';\r\n\r\n@Component\r\nexport default class LatLongAddComponent extends Vue {\r\n countryFormGroup: IFormGroup<Country>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.countryFormGroup = this.formBuilder.formGroup(Country) as IFormGroup<Country>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  latLong, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class Country {\r\n\r\n\t@latLong() \r\n\tfirstCountry: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"edit":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>First Country</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"countryFormGroup.props.firstCountry\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">You must enter a proper Latitude or Longitude<br/></small>\r\n       <div v-if=\"countryFormGroup.controls.firstCountry.errors\">\r\n         <small class=\"form-text text-danger\">{{countryFormGroup.controls.firstCountry.errors.latLong.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { Country } from './country.model';\r\n\r\n@Component\r\nexport default class LatLongEditComponent extends Vue {\r\n countryFormGroup: IFormGroup<Country>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.countryFormGroup = this.formBuilder.formGroup(Country) as IFormGroup<Country>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  latLong, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class Country {\r\n\r\n\t@latLong() \r\n\tfirstCountry: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}}}