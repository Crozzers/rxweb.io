{"complete":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label> Continent</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"countryFormGroup.props.continent\" type=\"text\" name=\"name\" />\r\n        <div v-if=\"countryFormGroup.controls.continent.errors\">\r\n         <small class=\"form-text text-danger\">{{countryFormGroup.controls.continent.errors.longitude.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Second Country Longitude</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"countryFormGroup.props.secondCountryLongitude\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Second Country Longitude' then you need to add 'Continent' input as 'Asia'.<br/></small>\r\n         <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n       <div v-if=\"countryFormGroup.controls.secondCountryLongitude.errors\">\r\n         <small class=\"form-text text-danger\">{{countryFormGroup.controls.secondCountryLongitude.errors.longitude.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Third Country Longitude</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"countryFormGroup.props.thirdCountryLongitude\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Third Country Longitude' then you need to add 'Continent' input as 'Asia'.<br/></small>\r\n         <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n       <div v-if=\"countryFormGroup.controls.thirdCountryLongitude.errors\">\r\n         <small class=\"form-text text-danger\">{{countryFormGroup.controls.thirdCountryLongitude.errors.longitude.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>First Country Longitude</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"countryFormGroup.props.firstCountryLongitude\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">You can enter only longitude<br/></small>\r\n         <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n       <div v-if=\"countryFormGroup.controls.firstCountryLongitude.errors\">\r\n         <small class=\"form-text text-danger\">{{countryFormGroup.controls.firstCountryLongitude.errors.longitude.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Fourth Country Longitude</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"countryFormGroup.props.fourthCountryLongitude\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">Shows custom message based on message key<br/></small>\r\n       <div v-if=\"countryFormGroup.controls.fourthCountryLongitude.errors\">\r\n         <small class=\"form-text text-danger\">{{countryFormGroup.controls.fourthCountryLongitude.errors.longitude.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { Country } from './country.model';\r\n\r\n@Component\r\nexport default class LongitudeCompleteComponent extends Vue {\r\n countryFormGroup: IFormGroup<Country>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.countryFormGroup = this.formBuilder.formGroup(Country) as IFormGroup<Country>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  longitude,prop, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class Country {\r\n\r\n\t@prop()\r\n\tcontinent: string;\r\n\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@longitude({conditionalExpression:(x,y) => x.continent == \"Asia\"  }) \r\n\tsecondCountryLongitude: string;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@longitude({conditionalExpression:'x => x.continent ==\"Asia\"' }) \r\n\tthirdCountryLongitude: string;\r\n\t\r\n\t\r\n\t@longitude({message:'{{0}} is not a longitude' }) \r\n\tfirstCountryLongitude: string;\r\n\t\r\n\t\r\n\t@longitude({messageKey:'longitudeMessageKey' }) \r\n\tfourthCountryLongitude: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"conditionalExpression":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label> Continent</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"countryFormGroup.props.continent\" type=\"text\" name=\"name\" />\r\n        <div v-if=\"countryFormGroup.controls.continent.errors\">\r\n         <small class=\"form-text text-danger\">{{countryFormGroup.controls.continent.errors.longitude.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Third Country Longitude</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"countryFormGroup.props.thirdCountryLongitude\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Third Country Longitude' then you need to add 'Continent' input as 'Asia'.<br/></small>\r\n         <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n       <div v-if=\"countryFormGroup.controls.thirdCountryLongitude.errors\">\r\n         <small class=\"form-text text-danger\">{{countryFormGroup.controls.thirdCountryLongitude.errors.longitude.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Second Country Longitude</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"countryFormGroup.props.secondCountryLongitude\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Second Country Longitude' then you need to add 'Continent' input as 'Asia'.<br/></small>\r\n         <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n       <div v-if=\"countryFormGroup.controls.secondCountryLongitude.errors\">\r\n         <small class=\"form-text text-danger\">{{countryFormGroup.controls.secondCountryLongitude.errors.longitude.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { Country } from './country.model';\r\n\r\n@Component\r\nexport default class LongitudeConditionalExpressionComponent extends Vue {\r\n countryFormGroup: IFormGroup<Country>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.countryFormGroup = this.formBuilder.formGroup(Country) as IFormGroup<Country>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  longitude,prop, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class Country {\r\n\r\n\t@prop()\r\n\tcontinent: string;\r\n\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@longitude({conditionalExpression:'x => x.continent ==\"Asia\"' }) \r\n\tthirdCountryLongitude: string;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@longitude({conditionalExpression:(x,y) => x.continent == \"Asia\"  }) \r\n\tsecondCountryLongitude: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"message":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>First Country Longitude</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"countryFormGroup.props.firstCountryLongitude\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">You can enter only longitude<br/></small>\r\n         <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n       <div v-if=\"countryFormGroup.controls.firstCountryLongitude.errors\">\r\n         <small class=\"form-text text-danger\">{{countryFormGroup.controls.firstCountryLongitude.errors.longitude.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { Country } from './country.model';\r\n\r\n@Component\r\nexport default class LongitudeMessageComponent extends Vue {\r\n countryFormGroup: IFormGroup<Country>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.countryFormGroup = this.formBuilder.formGroup(Country) as IFormGroup<Country>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  longitude, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class Country {\r\n\r\n\t@longitude({message:'{{0}} is not a longitude' }) \r\n\tfirstCountryLongitude: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"messageKey":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Fourth Country Longitude</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"countryFormGroup.props.fourthCountryLongitude\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">Shows custom message based on message key<br/></small>\r\n       <div v-if=\"countryFormGroup.controls.fourthCountryLongitude.errors\">\r\n         <small class=\"form-text text-danger\">{{countryFormGroup.controls.fourthCountryLongitude.errors.longitude.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { Country } from './country.model';\r\n\r\n@Component\r\nexport default class LongitudeMessageKeyComponent extends Vue {\r\n countryFormGroup: IFormGroup<Country>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.countryFormGroup = this.formBuilder.formGroup(Country) as IFormGroup<Country>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  longitude, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class Country {\r\n\r\n\t@longitude({messageKey:'longitudeMessageKey' }) \r\n\tfourthCountryLongitude: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"add":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>First Country Longitude</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"numberInfoFormGroup.props.firstCountryLongitude\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">You must enter a valid longitude<br/></small>\r\n       <div v-if=\"numberInfoFormGroup.controls.firstCountryLongitude.errors\">\r\n         <small class=\"form-text text-danger\">{{numberInfoFormGroup.controls.firstCountryLongitude.errors.longitude.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { NumberInfo } from './numberInfo.model';\r\n\r\n@Component\r\nexport default class LongitudeAddComponent extends Vue {\r\n numberInfoFormGroup: IFormGroup<NumberInfo>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.numberInfoFormGroup = this.formBuilder.formGroup(NumberInfo) as IFormGroup<NumberInfo>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  longitude, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class NumberInfo {\r\n\r\n\t@longitude() \r\n\tfirstCountryLongitude: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"edit":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>First Country Longitude</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"numberInfoFormGroup.props.firstCountryLongitude\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">You must enter a valid longitude<br/></small>\r\n       <div v-if=\"numberInfoFormGroup.controls.firstCountryLongitude.errors\">\r\n         <small class=\"form-text text-danger\">{{numberInfoFormGroup.controls.firstCountryLongitude.errors.longitude.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { NumberInfo } from './numberInfo.model';\r\n\r\n@Component\r\nexport default class LongitudeEditComponent extends Vue {\r\n numberInfoFormGroup: IFormGroup<NumberInfo>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.numberInfoFormGroup = this.formBuilder.formGroup(NumberInfo) as IFormGroup<NumberInfo>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  longitude, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class NumberInfo {\r\n\r\n\t@longitude() \r\n\tfirstCountryLongitude: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}}}