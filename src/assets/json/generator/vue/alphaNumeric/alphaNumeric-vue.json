{"complete":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Area Name</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"locationFormGroup.props.areaName\" type=\"text\" name=\"name\" />\r\n        <div v-if=\"locationFormGroup.controls.areaName.errors\">\r\n         <small class=\"form-text text-danger\">{{locationFormGroup.controls.areaName.errors.alphaNumeric.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Flat Address</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"locationFormGroup.props.flatAddress\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">This allowed whitespace in alpha Numeric validation<br/></small>\r\n       <div v-if=\"locationFormGroup.controls.flatAddress.errors\">\r\n         <small class=\"form-text text-danger\">{{locationFormGroup.controls.flatAddress.errors.alphaNumeric.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Postal Address</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"locationFormGroup.props.postalAddress\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n       <div v-if=\"locationFormGroup.controls.postalAddress.errors\">\r\n         <small class=\"form-text text-danger\">{{locationFormGroup.controls.postalAddress.errors.alphaNumeric.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Country Code</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"locationFormGroup.props.countryCode\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">If you want to apply conditional validation on this field then you need to add 'areaName' input as 'Delhi'.<br/></small>\r\n         <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n       <div v-if=\"locationFormGroup.controls.countryCode.errors\">\r\n         <small class=\"form-text text-danger\">{{locationFormGroup.controls.countryCode.errors.alphaNumeric.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>City Code</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"locationFormGroup.props.cityCode\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">If you want to apply conditional validation on this field then you need to add 'areaName' input as 'Delhi'.<br/></small>\r\n         <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n       <div v-if=\"locationFormGroup.controls.cityCode.errors\">\r\n         <small class=\"form-text text-danger\">{{locationFormGroup.controls.cityCode.errors.alphaNumeric.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Colony Name</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"locationFormGroup.props.colonyName\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">custom message based on messageKey<br/></small>\r\n       <div v-if=\"locationFormGroup.controls.colonyName.errors\">\r\n         <small class=\"form-text text-danger\">{{locationFormGroup.controls.colonyName.errors.alphaNumeric.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { Location } from './location.model';\r\n\r\n@Component\r\nexport default class AlphaNumericCompleteComponent extends Vue {\r\n locationFormGroup: IFormGroup<Location>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.locationFormGroup = this.formBuilder.formGroup(Location) as IFormGroup<Location>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  alphaNumeric, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class Location {\r\n\r\n\t@alphaNumeric() \r\n\tareaName: string;\r\n\t\r\n\t\r\n\t@alphaNumeric({allowWhiteSpace:true }) \r\n\tflatAddress: string;\r\n\t\r\n\t\r\n\t//Shows custom message\r\n\t@alphaNumeric({message:'Please enter only alphanumerics, special characters are not allowed.' }) \r\n\tpostalAddress: string;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@alphaNumeric({conditionalExpression:(x,y) => x.areaName == \"Delhi\"  }) \r\n\tcountryCode: string;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@alphaNumeric({conditionalExpression:'x => x.areaName ==\"Delhi\"' }) \r\n\tcityCode: string;\r\n\t\r\n\t\r\n\t@alphaNumeric({messageKey:'alphaNumericMessageKey' }) \r\n\tcolonyName: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"allowWhiteSpace":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Flat Address</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"locationFormGroup.props.flatAddress\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">This allowed whitespace in alpha Numeric validation<br/></small>\r\n       <div v-if=\"locationFormGroup.controls.flatAddress.errors\">\r\n         <small class=\"form-text text-danger\">{{locationFormGroup.controls.flatAddress.errors.alphaNumeric.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { Location } from './location.model';\r\n\r\n@Component\r\nexport default class AlphaNumericAllowWhiteSpaceComponent extends Vue {\r\n locationFormGroup: IFormGroup<Location>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.locationFormGroup = this.formBuilder.formGroup(Location) as IFormGroup<Location>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  alphaNumeric, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class Location {\r\n\r\n\t@alphaNumeric({allowWhiteSpace:true }) \r\n\tflatAddress: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"message":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Postal Address</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"locationFormGroup.props.postalAddress\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n       <div v-if=\"locationFormGroup.controls.postalAddress.errors\">\r\n         <small class=\"form-text text-danger\">{{locationFormGroup.controls.postalAddress.errors.alphaNumeric.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { Location } from './location.model';\r\n\r\n@Component\r\nexport default class AlphaNumericMessageComponent extends Vue {\r\n locationFormGroup: IFormGroup<Location>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.locationFormGroup = this.formBuilder.formGroup(Location) as IFormGroup<Location>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  alphaNumeric, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class Location {\r\n\r\n\t//Shows custom message\r\n\t@alphaNumeric({message:'Please enter only alphanumerics, special characters are not allowed.' }) \r\n\tpostalAddress: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"conditionalExpression":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Area Name</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"locationFormGroup.props.areaName\" type=\"text\" name=\"name\" />\r\n        <div v-if=\"locationFormGroup.controls.areaName.errors\">\r\n         <small class=\"form-text text-danger\">{{locationFormGroup.controls.areaName.errors.alphaNumeric.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>City Code</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"locationFormGroup.props.cityCode\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">If you want to apply conditional validation on this field then you need to add 'areaName' input as 'Delhi'.<br/></small>\r\n         <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n       <div v-if=\"locationFormGroup.controls.cityCode.errors\">\r\n         <small class=\"form-text text-danger\">{{locationFormGroup.controls.cityCode.errors.alphaNumeric.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Country Code</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"locationFormGroup.props.countryCode\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">If you want to apply conditional validation on this field then you need to add 'areaName' input as 'Delhi'.<br/></small>\r\n         <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n       <div v-if=\"locationFormGroup.controls.countryCode.errors\">\r\n         <small class=\"form-text text-danger\">{{locationFormGroup.controls.countryCode.errors.alphaNumeric.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { Location } from './location.model';\r\n\r\n@Component\r\nexport default class AlphaNumericConditionalExpressionComponent extends Vue {\r\n locationFormGroup: IFormGroup<Location>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.locationFormGroup = this.formBuilder.formGroup(Location) as IFormGroup<Location>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  alphaNumeric, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class Location {\r\n\r\n\t@alphaNumeric() \r\n\tareaName: string;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@alphaNumeric({conditionalExpression:'x => x.areaName ==\"Delhi\"' }) \r\n\tcityCode: string;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@alphaNumeric({conditionalExpression:(x,y) => x.areaName == \"Delhi\"  }) \r\n\tcountryCode: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"messageKey":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Colony Name</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"locationFormGroup.props.colonyName\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">custom message based on messageKey<br/></small>\r\n       <div v-if=\"locationFormGroup.controls.colonyName.errors\">\r\n         <small class=\"form-text text-danger\">{{locationFormGroup.controls.colonyName.errors.alphaNumeric.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { Location } from './location.model';\r\n\r\n@Component\r\nexport default class AlphaNumericMessageKeyComponent extends Vue {\r\n locationFormGroup: IFormGroup<Location>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.locationFormGroup = this.formBuilder.formGroup(Location) as IFormGroup<Location>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  alphaNumeric, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class Location {\r\n\r\n\t@alphaNumeric({messageKey:'alphaNumericMessageKey' }) \r\n\tcolonyName: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"add":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Area Name</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"locationFormGroup.props.areaName\" type=\"text\" name=\"name\" />\r\n        <div v-if=\"locationFormGroup.controls.areaName.errors\">\r\n         <small class=\"form-text text-danger\">{{locationFormGroup.controls.areaName.errors.alphaNumeric.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { Location } from './location.model';\r\n\r\n@Component\r\nexport default class AlphaNumericAddComponent extends Vue {\r\n locationFormGroup: IFormGroup<Location>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.locationFormGroup = this.formBuilder.formGroup(Location) as IFormGroup<Location>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  alphaNumeric, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class Location {\r\n\r\n\t@alphaNumeric() \r\n\tareaName: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"edit":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Area Name</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"locationFormGroup.props.areaName\" type=\"text\" name=\"name\" />\r\n        <div v-if=\"locationFormGroup.controls.areaName.errors\">\r\n         <small class=\"form-text text-danger\">{{locationFormGroup.controls.areaName.errors.alphaNumeric.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { Location } from './location.model';\r\n\r\n@Component\r\nexport default class AlphaNumericEditComponent extends Vue {\r\n locationFormGroup: IFormGroup<Location>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.locationFormGroup = this.formBuilder.formGroup(Location) as IFormGroup<Location>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  alphaNumeric, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class Location {\r\n\r\n\t@alphaNumeric() \r\n\tareaName: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}}}