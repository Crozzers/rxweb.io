{"complete":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Country Name</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"locationFormGroup.props.countryName\" type=\"text\" name=\"name\" />\r\n        <div v-if=\"locationFormGroup.controls.countryName.errors\">\r\n         <small class=\"form-text text-danger\">{{locationFormGroup.controls.countryName.errors.upperCase.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>State Name</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"locationFormGroup.props.stateName\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">To apply the validation of upperCase on 'State Name' field, then enter the value of 'INDIA' in 'Country Name' textbox.<br/></small>\r\n         <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n       <div v-if=\"locationFormGroup.controls.stateName.errors\">\r\n         <small class=\"form-text text-danger\">{{locationFormGroup.controls.stateName.errors.upperCase.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>City Name</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"locationFormGroup.props.cityName\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">To apply the validation of upperCase on 'City Name' field, then enter the value of 'INDIA' in 'Country Name' textbox.<br/></small>\r\n         <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n       <div v-if=\"locationFormGroup.controls.cityName.errors\">\r\n         <small class=\"form-text text-danger\">{{locationFormGroup.controls.cityName.errors.upperCase.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Colony Name</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"locationFormGroup.props.colonyName\" type=\"text\" name=\"name\" />\r\n        <div v-if=\"locationFormGroup.controls.colonyName.errors\">\r\n         <small class=\"form-text text-danger\">{{locationFormGroup.controls.colonyName.errors.upperCase.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Street Name</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"locationFormGroup.props.streetName\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">Shows custom message based on message key<br/></small>\r\n       <div v-if=\"locationFormGroup.controls.streetName.errors\">\r\n         <small class=\"form-text text-danger\">{{locationFormGroup.controls.streetName.errors.upperCase.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { Location } from './location.model';\r\n\r\n@Component\r\nexport default class UpperCaseCompleteComponent extends Vue {\r\n locationFormGroup: IFormGroup<Location>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.locationFormGroup = this.formBuilder.formGroup(Location) as IFormGroup<Location>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  upperCase, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class Location {\r\n\r\n\t@upperCase() \r\n\tcountryName: string;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@upperCase({conditionalExpression:(x,y) => x.countryName == \"INDIA\"  }) \r\n\tstateName: string;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@upperCase({conditionalExpression:'x => x.countryName == \"INDIA\"' }) \r\n\tcityName: string;\r\n\t\r\n\t\r\n\t//Shows custom message\r\n\t@upperCase({message:'You can enter only upperCase letters.' }) \r\n\tcolonyName: string;\r\n\t\r\n\t\r\n\t@upperCase({messageKey:'upperCaseMessageKey' }) \r\n\tstreetName: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"conditionalExpression":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Country Name</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"locationFormGroup.props.countryName\" type=\"text\" name=\"name\" />\r\n        <div v-if=\"locationFormGroup.controls.countryName.errors\">\r\n         <small class=\"form-text text-danger\">{{locationFormGroup.controls.countryName.errors.upperCase.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>City Name</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"locationFormGroup.props.cityName\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">To apply the validation of upperCase on 'City Name' field, then enter the value of 'INDIA' in 'Country Name' textbox.<br/></small>\r\n         <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n       <div v-if=\"locationFormGroup.controls.cityName.errors\">\r\n         <small class=\"form-text text-danger\">{{locationFormGroup.controls.cityName.errors.upperCase.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>State Name</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"locationFormGroup.props.stateName\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">To apply the validation of upperCase on 'State Name' field, then enter the value of 'INDIA' in 'Country Name' textbox.<br/></small>\r\n         <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n       <div v-if=\"locationFormGroup.controls.stateName.errors\">\r\n         <small class=\"form-text text-danger\">{{locationFormGroup.controls.stateName.errors.upperCase.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { Location } from './location.model';\r\n\r\n@Component\r\nexport default class UpperCaseConditionalExpressionComponent extends Vue {\r\n locationFormGroup: IFormGroup<Location>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.locationFormGroup = this.formBuilder.formGroup(Location) as IFormGroup<Location>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  upperCase, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class Location {\r\n\r\n\t@upperCase() \r\n\tcountryName: string;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@upperCase({conditionalExpression:'x => x.countryName == \"INDIA\"' }) \r\n\tcityName: string;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@upperCase({conditionalExpression:(x,y) => x.countryName == \"INDIA\"  }) \r\n\tstateName: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"message":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Colony Name</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"locationFormGroup.props.colonyName\" type=\"text\" name=\"name\" />\r\n        <div v-if=\"locationFormGroup.controls.colonyName.errors\">\r\n         <small class=\"form-text text-danger\">{{locationFormGroup.controls.colonyName.errors.upperCase.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { Location } from './location.model';\r\n\r\n@Component\r\nexport default class UpperCaseMessageComponent extends Vue {\r\n locationFormGroup: IFormGroup<Location>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.locationFormGroup = this.formBuilder.formGroup(Location) as IFormGroup<Location>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  upperCase, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class Location {\r\n\r\n\t//Shows custom message\r\n\t@upperCase({message:'You can enter only upperCase letters.' }) \r\n\tcolonyName: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"messageKey":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Street Name</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"locationFormGroup.props.streetName\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">Shows custom message based on message key<br/></small>\r\n       <div v-if=\"locationFormGroup.controls.streetName.errors\">\r\n         <small class=\"form-text text-danger\">{{locationFormGroup.controls.streetName.errors.upperCase.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { Location } from './location.model';\r\n\r\n@Component\r\nexport default class UpperCaseMessageKeyComponent extends Vue {\r\n locationFormGroup: IFormGroup<Location>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.locationFormGroup = this.formBuilder.formGroup(Location) as IFormGroup<Location>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  upperCase, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class Location {\r\n\r\n\t@upperCase({messageKey:'upperCaseMessageKey' }) \r\n\tstreetName: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"add":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Country Name</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"locationFormGroup.props.countryName\" type=\"text\" name=\"name\" />\r\n        <div v-if=\"locationFormGroup.controls.countryName.errors\">\r\n         <small class=\"form-text text-danger\">{{locationFormGroup.controls.countryName.errors.upperCase.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { Location } from './location.model';\r\n\r\n@Component\r\nexport default class UpperCaseAddComponent extends Vue {\r\n locationFormGroup: IFormGroup<Location>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.locationFormGroup = this.formBuilder.formGroup(Location) as IFormGroup<Location>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  upperCase, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class Location {\r\n\r\n\t@upperCase() \r\n\tcountryName: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"edit":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Country Name</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"locationFormGroup.props.countryName\" type=\"text\" name=\"name\" />\r\n        <div v-if=\"locationFormGroup.controls.countryName.errors\">\r\n         <small class=\"form-text text-danger\">{{locationFormGroup.controls.countryName.errors.upperCase.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { Location } from './location.model';\r\n\r\n@Component\r\nexport default class UpperCaseEditComponent extends Vue {\r\n locationFormGroup: IFormGroup<Location>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.locationFormGroup = this.formBuilder.formGroup(Location) as IFormGroup<Location>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  upperCase, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class Location {\r\n\r\n\t@upperCase() \r\n\tcountryName: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}}}