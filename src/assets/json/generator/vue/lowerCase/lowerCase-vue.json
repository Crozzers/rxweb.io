{"complete":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Username</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.username\" type=\"text\" name=\"name\" />\r\n        <div v-if=\"userFormGroup.controls.username.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.username.errors.lowerCase.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>First name</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.firstName\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">To apply the validation of lowerCase on 'First Name' field, then enter the value of 'jonathan.feldman' in username textbox.<br/></small>\r\n          <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n       <div v-if=\"userFormGroup.controls.firstName.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.firstName.errors.lowerCase.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Middle name</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.middleName\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">To apply the validation of lowerCase on 'Middle Name' field, then enter the value of 'jonathan.feldman' in username textbox.<br/></small>\r\n          <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n       <div v-if=\"userFormGroup.controls.middleName.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.middleName.errors.lowerCase.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Last name</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.lastName\" type=\"text\" name=\"name\" />\r\n        <div v-if=\"userFormGroup.controls.lastName.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.lastName.errors.lowerCase.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>State</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.state\" type=\"text\" name=\"name\" />\r\n        <div v-if=\"userFormGroup.controls.state.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.state.errors.lowerCase.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component\r\nexport default class LowerCaseCompleteComponent extends Vue {\r\n userFormGroup: IFormGroup<User>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.userFormGroup = this.formBuilder.formGroup(User) as IFormGroup<User>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  lowerCase, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class User {\r\n\r\n\t@lowerCase() \r\n\tusername: string;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@lowerCase({conditionalExpression:(x,y) =>  x.username == \"jonathan.feldman\"  }) \r\n\tfirstName: string;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@lowerCase({conditionalExpression:'x => x.username == \"jonathan.feldman\"' }) \r\n\tmiddleName: string;\r\n\t\r\n\t\r\n\t//Shows custom message\r\n\t@lowerCase({message:'You can enter only lowerCase letters.' }) \r\n\tlastName: string;\r\n\t\r\n\t\r\n\t//Shows custom message based on message key\r\n\t@lowerCase({messageKey:'lowerCaseMessageKey' }) \r\n\tstate: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"conditionalExpression":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Username</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.username\" type=\"text\" name=\"name\" />\r\n        <div v-if=\"userFormGroup.controls.username.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.username.errors.lowerCase.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Middle name</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.middleName\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">To apply the validation of lowerCase on 'Middle Name' field, then enter the value of 'jonathan.feldman' in username textbox.<br/></small>\r\n          <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n       <div v-if=\"userFormGroup.controls.middleName.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.middleName.errors.lowerCase.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>First name</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.firstName\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">To apply the validation of lowerCase on 'First Name' field, then enter the value of 'jonathan.feldman' in username textbox.<br/></small>\r\n          <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n       <div v-if=\"userFormGroup.controls.firstName.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.firstName.errors.lowerCase.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component\r\nexport default class LowerCaseConditionalExpressionComponent extends Vue {\r\n userFormGroup: IFormGroup<User>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.userFormGroup = this.formBuilder.formGroup(User) as IFormGroup<User>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  lowerCase, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class User {\r\n\r\n\t@lowerCase() \r\n\tusername: string;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@lowerCase({conditionalExpression:'x => x.username == \"jonathan.feldman\"' }) \r\n\tmiddleName: string;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@lowerCase({conditionalExpression:(x,y) =>  x.username == \"jonathan.feldman\"  }) \r\n\tfirstName: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"message":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Last name</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.lastName\" type=\"text\" name=\"name\" />\r\n        <div v-if=\"userFormGroup.controls.lastName.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.lastName.errors.lowerCase.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component\r\nexport default class LowerCaseMessageComponent extends Vue {\r\n userFormGroup: IFormGroup<User>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.userFormGroup = this.formBuilder.formGroup(User) as IFormGroup<User>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  lowerCase, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class User {\r\n\r\n\t//Shows custom message\r\n\t@lowerCase({message:'You can enter only lowerCase letters.' }) \r\n\tlastName: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"messageKey":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>State</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.state\" type=\"text\" name=\"name\" />\r\n        <div v-if=\"userFormGroup.controls.state.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.state.errors.lowerCase.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component\r\nexport default class LowerCaseMessageKeyComponent extends Vue {\r\n userFormGroup: IFormGroup<User>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.userFormGroup = this.formBuilder.formGroup(User) as IFormGroup<User>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  lowerCase, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class User {\r\n\r\n\t//Shows custom message based on message key\r\n\t@lowerCase({messageKey:'lowerCaseMessageKey' }) \r\n\tstate: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"add":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Username</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userInfoFormGroup.props.username\" type=\"text\" name=\"name\" />\r\n        <div v-if=\"userInfoFormGroup.controls.username.errors\">\r\n         <small class=\"form-text text-danger\">{{userInfoFormGroup.controls.username.errors.lowerCase.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { UserInfo } from './userInfo.model';\r\n\r\n@Component\r\nexport default class LowerCaseAddComponent extends Vue {\r\n userInfoFormGroup: IFormGroup<UserInfo>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.userInfoFormGroup = this.formBuilder.formGroup(UserInfo) as IFormGroup<UserInfo>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  lowerCase, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class UserInfo {\r\n\r\n\t@lowerCase() \r\n\tusername: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"edit":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Username</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userInfoFormGroup.props.username\" type=\"text\" name=\"name\" />\r\n        <div v-if=\"userInfoFormGroup.controls.username.errors\">\r\n         <small class=\"form-text text-danger\">{{userInfoFormGroup.controls.username.errors.lowerCase.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { UserInfo } from './userInfo.model';\r\n\r\n@Component\r\nexport default class LowerCaseEditComponent extends Vue {\r\n userInfoFormGroup: IFormGroup<UserInfo>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.userInfoFormGroup = this.formBuilder.formGroup(UserInfo) as IFormGroup<UserInfo>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  lowerCase, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class UserInfo {\r\n\r\n\t@lowerCase() \r\n\tusername: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}}}