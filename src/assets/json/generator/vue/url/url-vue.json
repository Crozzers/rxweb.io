{"complete":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Admin Website Url</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.adminWebsiteUrl\" type=\"text\" name=\"name\" />\r\n        <div v-if=\"userFormGroup.controls.adminWebsiteUrl.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.adminWebsiteUrl.errors.url.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>QA Website Url</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.qaWebsiteUrl\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">If you want to apply conditional validation on 'QA Website Url' then you need to add 'admin Website Url' input as 'https://google.co.in'.<br/></small>\r\n         <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n       <div v-if=\"userFormGroup.controls.qaWebsiteUrl.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.qaWebsiteUrl.errors.url.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Customer Website Url</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.customerWebsiteUrl\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Customer Website Url' then you need to add 'admin Website Url' input as 'https://google.co.in'.<br/></small>\r\n         <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n       <div v-if=\"userFormGroup.controls.customerWebsiteUrl.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.customerWebsiteUrl.errors.url.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Maintenance Website Url</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.maintenanceWebSiteUrl\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">Shows Custom Validation Message.<br/></small>\r\n       <div v-if=\"userFormGroup.controls.maintenanceWebSiteUrl.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.maintenanceWebSiteUrl.errors.url.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Deployed Website Url</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.deployedWebSiteUrl\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">Shows Custom Validation Message based on message key<br/></small>\r\n       <div v-if=\"userFormGroup.controls.deployedWebSiteUrl.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.deployedWebSiteUrl.errors.url.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component\r\nexport default class UrlCompleteComponent extends Vue {\r\n userFormGroup: IFormGroup<User>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.userFormGroup = this.formBuilder.formGroup(User) as IFormGroup<User>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  url, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class User {\r\n\r\n\t@url() \r\n\tadminWebsiteUrl: string;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@url({conditionalExpression:(x,y) => x.adminWebsiteUrl == \"https://google.co.in\"  }) \r\n\tqaWebsiteUrl: string;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@url({conditionalExpression:'x => x.adminWebsiteUrl == \"https://google.co.in\"'  }) \r\n\tcustomerWebsiteUrl: string;\r\n\t\r\n\t\r\n\t@url({message:'{{0}} Is not the correct url pattern.' }) \r\n\tmaintenanceWebSiteUrl: string;\r\n\t\r\n\t\r\n\t@url({messageKey:'urlMessageKey' }) \r\n\tdeployedWebSiteUrl: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"conditionalExpression":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Admin Website Url</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.adminWebsiteUrl\" type=\"text\" name=\"name\" />\r\n        <div v-if=\"userFormGroup.controls.adminWebsiteUrl.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.adminWebsiteUrl.errors.url.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Customer Website Url</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.customerWebsiteUrl\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Customer Website Url' then you need to add 'admin Website Url' input as 'https://google.co.in'.<br/></small>\r\n         <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n       <div v-if=\"userFormGroup.controls.customerWebsiteUrl.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.customerWebsiteUrl.errors.url.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>QA Website Url</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.qaWebsiteUrl\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">If you want to apply conditional validation on 'QA Website Url' then you need to add 'admin Website Url' input as 'https://google.co.in'.<br/></small>\r\n         <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n       <div v-if=\"userFormGroup.controls.qaWebsiteUrl.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.qaWebsiteUrl.errors.url.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component\r\nexport default class UrlConditionalExpressionComponent extends Vue {\r\n userFormGroup: IFormGroup<User>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.userFormGroup = this.formBuilder.formGroup(User) as IFormGroup<User>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  url, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class User {\r\n\r\n\t@url() \r\n\tadminWebsiteUrl: string;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@url({conditionalExpression:'x => x.adminWebsiteUrl == \"https://google.co.in\"'  }) \r\n\tcustomerWebsiteUrl: string;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@url({conditionalExpression:(x,y) => x.adminWebsiteUrl == \"https://google.co.in\"  }) \r\n\tqaWebsiteUrl: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"message":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Maintenance Website Url</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.maintenanceWebSiteUrl\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">Shows Custom Validation Message.<br/></small>\r\n       <div v-if=\"userFormGroup.controls.maintenanceWebSiteUrl.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.maintenanceWebSiteUrl.errors.url.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component\r\nexport default class UrlMessageComponent extends Vue {\r\n userFormGroup: IFormGroup<User>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.userFormGroup = this.formBuilder.formGroup(User) as IFormGroup<User>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  url, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class User {\r\n\r\n\t@url({message:'{{0}} Is not the correct url pattern.' }) \r\n\tmaintenanceWebSiteUrl: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"messageKey":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Deployed Website Url</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.deployedWebSiteUrl\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">Shows Custom Validation Message based on message key<br/></small>\r\n       <div v-if=\"userFormGroup.controls.deployedWebSiteUrl.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.deployedWebSiteUrl.errors.url.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component\r\nexport default class UrlMessageKeyComponent extends Vue {\r\n userFormGroup: IFormGroup<User>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.userFormGroup = this.formBuilder.formGroup(User) as IFormGroup<User>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  url, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class User {\r\n\r\n\t@url({messageKey:'urlMessageKey' }) \r\n\tdeployedWebSiteUrl: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"add":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Admin Website Url</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"webSiteInfoModelFormGroup.props.adminWebsiteUrl\" type=\"text\" name=\"name\" />\r\n        <div v-if=\"webSiteInfoModelFormGroup.controls.adminWebsiteUrl.errors\">\r\n         <small class=\"form-text text-danger\">{{webSiteInfoModelFormGroup.controls.adminWebsiteUrl.errors.url.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { WebSiteInfoModel } from './webSiteInfoModel.model';\r\n\r\n@Component\r\nexport default class UrlAddComponent extends Vue {\r\n webSiteInfoModelFormGroup: IFormGroup<WebSiteInfoModel>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.webSiteInfoModelFormGroup = this.formBuilder.formGroup(WebSiteInfoModel) as IFormGroup<WebSiteInfoModel>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  url, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class WebSiteInfoModel {\r\n\r\n\t@url() \r\n\tadminWebsiteUrl: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"edit":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Admin Website Url</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"webSiteInfoModelFormGroup.props.adminWebsiteUrl\" type=\"text\" name=\"name\" />\r\n        <div v-if=\"webSiteInfoModelFormGroup.controls.adminWebsiteUrl.errors\">\r\n         <small class=\"form-text text-danger\">{{webSiteInfoModelFormGroup.controls.adminWebsiteUrl.errors.url.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { WebSiteInfoModel } from './webSiteInfoModel.model';\r\n\r\n@Component\r\nexport default class UrlEditComponent extends Vue {\r\n webSiteInfoModelFormGroup: IFormGroup<WebSiteInfoModel>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.webSiteInfoModelFormGroup = this.formBuilder.formGroup(WebSiteInfoModel) as IFormGroup<WebSiteInfoModel>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  url, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class WebSiteInfoModel {\r\n\r\n\t@url() \r\n\tadminWebsiteUrl: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}}}