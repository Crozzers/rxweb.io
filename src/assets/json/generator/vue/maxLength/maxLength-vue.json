{"complete":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>First Name</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.firstName\" type=\"text\" name=\"name\" />\r\n        <div v-if=\"userFormGroup.controls.firstName.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.firstName.errors.maxLength.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Middle Name</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.middleName\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">If you want to apply conditionalExpression on 'Middle Name', then enter 'Bharat' in 'First Name'<br/></small>\r\n         <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n       <div v-if=\"userFormGroup.controls.middleName.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.middleName.errors.maxLength.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Last Name</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.lastName\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">If you want to apply conditionalExpression on 'Last Name', then enter 'Bharat' in 'First Name'<br/></small>\r\n         <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n       <div v-if=\"userFormGroup.controls.lastName.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.lastName.errors.maxLength.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>User Name</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.userName\" type=\"text\" name=\"name\" />\r\n        <div v-if=\"userFormGroup.controls.userName.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.userName.errors.maxLength.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Full Name</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.fullName\" type=\"text\" name=\"name\" />\r\n        <div v-if=\"userFormGroup.controls.fullName.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.fullName.errors.maxLength.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component\r\nexport default class MaxLengthCompleteComponent extends Vue {\r\n userFormGroup: IFormGroup<User>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.userFormGroup = this.formBuilder.formGroup(User) as IFormGroup<User>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  maxLength, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class User {\r\n\r\n\t@maxLength({value:16 }) \r\n\tfirstName: string;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@maxLength({value:16  ,conditionalExpression:(x,y)=> x.firstName == \"Bharat\" }) \r\n\tmiddleName: string;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@maxLength({value:16  ,conditionalExpression:'x => x.firstName == \"Bharat\"' }) \r\n\tlastName: string;\r\n\t\r\n\t\r\n\t//Shows custom message\r\n\t@maxLength({value:10  ,message:'Maximum 10 characters are allowed' }) \r\n\tuserName: string;\r\n\t\r\n\t\r\n\t//Shows custom message based on message key\r\n\t@maxLength({value:20  ,messageKey:'maxLengthMessageKey' }) \r\n\tfullName: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"value":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>First Name</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.firstName\" type=\"text\" name=\"name\" />\r\n        <div v-if=\"userFormGroup.controls.firstName.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.firstName.errors.maxLength.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component\r\nexport default class MaxLengthValueComponent extends Vue {\r\n userFormGroup: IFormGroup<User>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.userFormGroup = this.formBuilder.formGroup(User) as IFormGroup<User>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  maxLength, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class User {\r\n\r\n\t@maxLength({value:16 }) \r\n\tfirstName: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"conditionalExpression":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>First Name</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.firstName\" type=\"text\" name=\"name\" />\r\n        <div v-if=\"userFormGroup.controls.firstName.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.firstName.errors.maxLength.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Last Name</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.lastName\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">If you want to apply conditionalExpression on 'Last Name', then enter 'Bharat' in 'First Name'<br/></small>\r\n         <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n       <div v-if=\"userFormGroup.controls.lastName.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.lastName.errors.maxLength.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Middle Name</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.middleName\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">If you want to apply conditionalExpression on 'Middle Name', then enter 'Bharat' in 'First Name'<br/></small>\r\n         <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n       <div v-if=\"userFormGroup.controls.middleName.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.middleName.errors.maxLength.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component\r\nexport default class MaxLengthConditionalExpressionComponent extends Vue {\r\n userFormGroup: IFormGroup<User>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.userFormGroup = this.formBuilder.formGroup(User) as IFormGroup<User>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  maxLength, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class User {\r\n\r\n\t@maxLength({value:16 }) \r\n\tfirstName: string;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@maxLength({value:16  ,conditionalExpression:'x => x.firstName == \"Bharat\"' }) \r\n\tlastName: string;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@maxLength({value:16  ,conditionalExpression:(x,y)=> x.firstName == \"Bharat\" }) \r\n\tmiddleName: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"message":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>User Name</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.userName\" type=\"text\" name=\"name\" />\r\n        <div v-if=\"userFormGroup.controls.userName.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.userName.errors.maxLength.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component\r\nexport default class MaxLengthMessageComponent extends Vue {\r\n userFormGroup: IFormGroup<User>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.userFormGroup = this.formBuilder.formGroup(User) as IFormGroup<User>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  maxLength, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class User {\r\n\r\n\t//Shows custom message\r\n\t@maxLength({value:10  ,message:'Maximum 10 characters are allowed' }) \r\n\tuserName: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"messageKey":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Full Name</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.fullName\" type=\"text\" name=\"name\" />\r\n        <div v-if=\"userFormGroup.controls.fullName.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.fullName.errors.maxLength.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component\r\nexport default class MaxLengthMessageKeyComponent extends Vue {\r\n userFormGroup: IFormGroup<User>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.userFormGroup = this.formBuilder.formGroup(User) as IFormGroup<User>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  maxLength, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class User {\r\n\r\n\t//Shows custom message based on message key\r\n\t@maxLength({value:20  ,messageKey:'maxLengthMessageKey' }) \r\n\tfullName: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"add":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>First Name</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"locationFormGroup.props.firstName\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">Maximum Length Upto 10 characters<br/></small>\r\n       <div v-if=\"locationFormGroup.controls.firstName.errors\">\r\n         <small class=\"form-text text-danger\">{{locationFormGroup.controls.firstName.errors.maxLength.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { Location } from './location.model';\r\n\r\n@Component\r\nexport default class MaxLengthAddComponent extends Vue {\r\n locationFormGroup: IFormGroup<Location>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.locationFormGroup = this.formBuilder.formGroup(Location) as IFormGroup<Location>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  maxLength, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class Location {\r\n\r\n\t@maxLength({value:10 }) \r\n\tfirstName: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"edit":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>First Name</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"locationFormGroup.props.firstName\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">Maximum Length Upto 10 characters<br/></small>\r\n       <div v-if=\"locationFormGroup.controls.firstName.errors\">\r\n         <small class=\"form-text text-danger\">{{locationFormGroup.controls.firstName.errors.maxLength.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { Location } from './location.model';\r\n\r\n@Component\r\nexport default class MaxLengthEditComponent extends Vue {\r\n locationFormGroup: IFormGroup<Location>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.locationFormGroup = this.formBuilder.formGroup(Location) as IFormGroup<Location>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  maxLength, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class Location {\r\n\r\n\t@maxLength({value:10 }) \r\n\tfirstName: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}}}