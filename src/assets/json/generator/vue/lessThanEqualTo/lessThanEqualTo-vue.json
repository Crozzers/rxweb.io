{"complete":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Total Marks</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.totalMarks\" type=\"text\" name=\"name\" />\r\n        <div v-if=\"userFormGroup.controls.totalMarks.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.totalMarks.errors.lessThanEqualTo.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Passing Marks</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.passingMarks\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">Passing Marks less than to Total marks<br/></small>\r\n       <div v-if=\"userFormGroup.controls.passingMarks.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.passingMarks.errors.lessThanEqualTo.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Maximum Age</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.maximumAge\" type=\"text\" name=\"name\" />\r\n        <div v-if=\"userFormGroup.controls.maximumAge.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.maximumAge.errors.lessThanEqualTo.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Obtained Marks</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.obtainedMarks\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">If you want to apply conditional validation of less than equal to validation on 'Obtained Marks' then then Total Marks must be 100.<br/></small>\r\n         <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n       <div v-if=\"userFormGroup.controls.obtainedMarks.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.obtainedMarks.errors.lessThanEqualTo.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Practical Exam Marks</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.practicalExamMarks\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">If you want to apply conditional validation of less than equal to validation on 'Practical Exam Marks' then then Total Marks must be 100.<br/></small>\r\n         <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n       <div v-if=\"userFormGroup.controls.practicalExamMarks.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.practicalExamMarks.errors.lessThanEqualTo.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Other Marks</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.otherMarks\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n       <div v-if=\"userFormGroup.controls.otherMarks.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.otherMarks.errors.lessThanEqualTo.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Discipline Marks</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.disciplineMarks\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">Shows custom message based on message key<br/></small>\r\n       <div v-if=\"userFormGroup.controls.disciplineMarks.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.disciplineMarks.errors.lessThanEqualTo.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component\r\nexport default class LessThanEqualToCompleteComponent extends Vue {\r\n userFormGroup: IFormGroup<User>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.userFormGroup = this.formBuilder.formGroup(User) as IFormGroup<User>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  lessThanEqualTo,prop, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class User {\r\n\r\n\t@prop()\r\n\ttotalMarks: number;\r\n\r\n\t@lessThanEqualTo({fieldName:'totalMarks' }) \r\n\tpassingMarks: number;\r\n\t\r\n\t\r\n\t@lessThanEqualTo({value:60 }) \r\n\tmaximumAge: number;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@lessThanEqualTo({fieldName:'totalMarks'  ,conditionalExpression:(x,y) => x.totalMarks == 100  }) \r\n\tobtainedMarks: number;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@lessThanEqualTo({fieldName:'totalMarks'  ,conditionalExpression:'x => x.totalMarks == 100' }) \r\n\tpracticalExamMarks: number;\r\n\t\r\n\t\r\n\t@lessThanEqualTo({fieldName:'totalMarks'  ,message:'Please enter number less than 100.' }) \r\n\totherMarks: number;\r\n\t\r\n\t\r\n\t@lessThanEqualTo({fieldName:'totalMarks'  ,messageKey:'lessThanEqualToMessageKey' }) \r\n\tdisciplineMarks: number;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"fieldName":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Total Marks</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.totalMarks\" type=\"text\" name=\"name\" />\r\n        <div v-if=\"userFormGroup.controls.totalMarks.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.totalMarks.errors.lessThanEqualTo.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Passing Marks</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.passingMarks\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">Passing Marks less than to Total marks<br/></small>\r\n       <div v-if=\"userFormGroup.controls.passingMarks.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.passingMarks.errors.lessThanEqualTo.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component\r\nexport default class LessThanEqualToFieldNameComponent extends Vue {\r\n userFormGroup: IFormGroup<User>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.userFormGroup = this.formBuilder.formGroup(User) as IFormGroup<User>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  lessThanEqualTo,prop, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class User {\r\n\r\n\t@prop()\r\n\ttotalMarks: number;\r\n\r\n\t@lessThanEqualTo({fieldName:'totalMarks' }) \r\n\tpassingMarks: number;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"value":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Maximum Age</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.maximumAge\" type=\"text\" name=\"name\" />\r\n        <div v-if=\"userFormGroup.controls.maximumAge.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.maximumAge.errors.lessThanEqualTo.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component\r\nexport default class LessThanEqualToValueComponent extends Vue {\r\n userFormGroup: IFormGroup<User>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.userFormGroup = this.formBuilder.formGroup(User) as IFormGroup<User>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  lessThanEqualTo, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class User {\r\n\r\n\t@lessThanEqualTo({value:60 }) \r\n\tmaximumAge: number;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"conditionalExpression":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Total Marks</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.totalMarks\" type=\"text\" name=\"name\" />\r\n        <div v-if=\"userFormGroup.controls.totalMarks.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.totalMarks.errors.lessThanEqualTo.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Practical Exam Marks</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.practicalExamMarks\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">If you want to apply conditional validation of less than equal to validation on 'Practical Exam Marks' then then Total Marks must be 100.<br/></small>\r\n         <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n       <div v-if=\"userFormGroup.controls.practicalExamMarks.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.practicalExamMarks.errors.lessThanEqualTo.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Obtained Marks</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.obtainedMarks\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">If you want to apply conditional validation of less than equal to validation on 'Obtained Marks' then then Total Marks must be 100.<br/></small>\r\n         <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n       <div v-if=\"userFormGroup.controls.obtainedMarks.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.obtainedMarks.errors.lessThanEqualTo.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component\r\nexport default class LessThanEqualToConditionalExpressionComponent extends Vue {\r\n userFormGroup: IFormGroup<User>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.userFormGroup = this.formBuilder.formGroup(User) as IFormGroup<User>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  lessThanEqualTo,prop, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class User {\r\n\r\n\t@prop()\r\n\ttotalMarks: number;\r\n\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@lessThanEqualTo({fieldName:'totalMarks'  ,conditionalExpression:'x => x.totalMarks == 100' }) \r\n\tpracticalExamMarks: number;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@lessThanEqualTo({fieldName:'totalMarks'  ,conditionalExpression:(x,y) => x.totalMarks == 100  }) \r\n\tobtainedMarks: number;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"message":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Other Marks</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.otherMarks\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n       <div v-if=\"userFormGroup.controls.otherMarks.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.otherMarks.errors.lessThanEqualTo.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component\r\nexport default class LessThanEqualToMessageComponent extends Vue {\r\n userFormGroup: IFormGroup<User>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.userFormGroup = this.formBuilder.formGroup(User) as IFormGroup<User>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  lessThanEqualTo, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class User {\r\n\r\n\t@lessThanEqualTo({fieldName:'totalMarks'  ,message:'Please enter number less than 100.' }) \r\n\totherMarks: number;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"messageKey":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Discipline Marks</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.disciplineMarks\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">Shows custom message based on message key<br/></small>\r\n       <div v-if=\"userFormGroup.controls.disciplineMarks.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.disciplineMarks.errors.lessThanEqualTo.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component\r\nexport default class LessThanEqualToMessageKeyComponent extends Vue {\r\n userFormGroup: IFormGroup<User>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.userFormGroup = this.formBuilder.formGroup(User) as IFormGroup<User>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  lessThanEqualTo, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class User {\r\n\r\n\t@lessThanEqualTo({fieldName:'totalMarks'  ,messageKey:'lessThanEqualToMessageKey' }) \r\n\tdisciplineMarks: number;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"add":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Total Marks</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.totalMarks\" type=\"text\" name=\"name\" />\r\n        <div v-if=\"userFormGroup.controls.totalMarks.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.totalMarks.errors.lessThanEqualTo.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Marks</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.marks\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">This is checking less than equal to validation for  Marks must be less than equal to Total Marks.<br/></small>\r\n       <div v-if=\"userFormGroup.controls.marks.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.marks.errors.lessThanEqualTo.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component\r\nexport default class LessThanEqualToAddComponent extends Vue {\r\n userFormGroup: IFormGroup<User>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.userFormGroup = this.formBuilder.formGroup(User) as IFormGroup<User>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  lessThanEqualTo,prop, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class User {\r\n\r\n\t@prop()\r\n\ttotalMarks: number;\r\n\r\n\t@lessThanEqualTo({fieldName:'totalMarks' }) \r\n\tmarks: number;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"edit":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Total Marks</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.totalMarks\" type=\"text\" name=\"name\" />\r\n        <div v-if=\"userFormGroup.controls.totalMarks.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.totalMarks.errors.lessThanEqualTo.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Marks</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.marks\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">This is checking less than equal to validation for  Marks must be less than equal to Total Marks.<br/></small>\r\n       <div v-if=\"userFormGroup.controls.marks.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.marks.errors.lessThanEqualTo.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component\r\nexport default class LessThanEqualToEditComponent extends Vue {\r\n userFormGroup: IFormGroup<User>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.userFormGroup = this.formBuilder.formGroup(User) as IFormGroup<User>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  lessThanEqualTo,prop, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class User {\r\n\r\n\t@prop()\r\n\ttotalMarks: number;\r\n\r\n\t@lessThanEqualTo({fieldName:'totalMarks' }) \r\n\tmarks: number;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}}}