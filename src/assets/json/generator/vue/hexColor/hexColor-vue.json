{"complete":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Color Picker</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"hexcolorInfoFormGroup.props.color\" type=\"text\" name=\"name\" />\r\n        <div v-if=\"hexcolorInfoFormGroup.controls.color.errors\">\r\n         <small class=\"form-text text-danger\">{{hexcolorInfoFormGroup.controls.color.errors.hexColor.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Footer Hexcode</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"hexcolorInfoFormGroup.props.footerHexCode\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">If you want to apply conditional validation of hex color validation on 'Footer Hexcode' then you need to add 'Color Picker' input as '#AFAFAF'<br/></small>\r\n         <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n       <div v-if=\"hexcolorInfoFormGroup.controls.footerHexCode.errors\">\r\n         <small class=\"form-text text-danger\">{{hexcolorInfoFormGroup.controls.footerHexCode.errors.hexColor.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Header Hexcode</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"hexcolorInfoFormGroup.props.headerHexcolorCode\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Header Hexcode' then you need to add 'Color Picker' input as '#AFAFAF'<br/></small>\r\n         <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n       <div v-if=\"hexcolorInfoFormGroup.controls.headerHexcolorCode.errors\">\r\n         <small class=\"form-text text-danger\">{{hexcolorInfoFormGroup.controls.headerHexcolorCode.errors.hexColor.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Body Hexcode</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"hexcolorInfoFormGroup.props.bodyHexcolorCode\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n       <div v-if=\"hexcolorInfoFormGroup.controls.bodyHexcolorCode.errors\">\r\n         <small class=\"form-text text-danger\">{{hexcolorInfoFormGroup.controls.bodyHexcolorCode.errors.hexColor.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Title Hexcode</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"hexcolorInfoFormGroup.props.titleHexcolorCode\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">Custom message based on message key<br/></small>\r\n       <div v-if=\"hexcolorInfoFormGroup.controls.titleHexcolorCode.errors\">\r\n         <small class=\"form-text text-danger\">{{hexcolorInfoFormGroup.controls.titleHexcolorCode.errors.hexColor.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { HexcolorInfo } from './hexcolorInfo.model';\r\n\r\n@Component\r\nexport default class HexColorCompleteComponent extends Vue {\r\n hexcolorInfoFormGroup: IFormGroup<HexcolorInfo>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.hexcolorInfoFormGroup = this.formBuilder.formGroup(HexcolorInfo) as IFormGroup<HexcolorInfo>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  hexColor, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class HexcolorInfo {\r\n\r\n\t@hexColor() \r\n\tcolor: string;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@hexColor({conditionalExpression:(x,y) =>x.color == \"#AFAFAF\" }) \r\n\tfooterHexCode: string;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@hexColor({conditionalExpression:'x => x.color == \"#AFAFAF\"' }) \r\n\theaderHexcolorCode: string;\r\n\t\r\n\t\r\n\t@hexColor({message:'Please enter the right format of hexcode for body like \"#AFAFAF\"' }) \r\n\tbodyHexcolorCode: string;\r\n\t\r\n\t\r\n\t@hexColor({messageKey:'hexColorMessageKey' }) \r\n\ttitleHexcolorCode: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"conditionalExpression":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Color Picker</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"hexcolorInfoFormGroup.props.color\" type=\"text\" name=\"name\" />\r\n        <div v-if=\"hexcolorInfoFormGroup.controls.color.errors\">\r\n         <small class=\"form-text text-danger\">{{hexcolorInfoFormGroup.controls.color.errors.hexColor.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Header Hexcode</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"hexcolorInfoFormGroup.props.headerHexcolorCode\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Header Hexcode' then you need to add 'Color Picker' input as '#AFAFAF'<br/></small>\r\n         <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n       <div v-if=\"hexcolorInfoFormGroup.controls.headerHexcolorCode.errors\">\r\n         <small class=\"form-text text-danger\">{{hexcolorInfoFormGroup.controls.headerHexcolorCode.errors.hexColor.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Footer Hexcode</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"hexcolorInfoFormGroup.props.footerHexCode\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">If you want to apply conditional validation of hex color validation on 'Footer Hexcode' then you need to add 'Color Picker' input as '#AFAFAF'<br/></small>\r\n         <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n       <div v-if=\"hexcolorInfoFormGroup.controls.footerHexCode.errors\">\r\n         <small class=\"form-text text-danger\">{{hexcolorInfoFormGroup.controls.footerHexCode.errors.hexColor.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { HexcolorInfo } from './hexcolorInfo.model';\r\n\r\n@Component\r\nexport default class HexColorConditionalExpressionComponent extends Vue {\r\n hexcolorInfoFormGroup: IFormGroup<HexcolorInfo>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.hexcolorInfoFormGroup = this.formBuilder.formGroup(HexcolorInfo) as IFormGroup<HexcolorInfo>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  hexColor, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class HexcolorInfo {\r\n\r\n\t@hexColor() \r\n\tcolor: string;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@hexColor({conditionalExpression:'x => x.color == \"#AFAFAF\"' }) \r\n\theaderHexcolorCode: string;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@hexColor({conditionalExpression:(x,y) =>x.color == \"#AFAFAF\" }) \r\n\tfooterHexCode: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"message":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Body Hexcode</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"hexcolorInfoFormGroup.props.bodyHexcolorCode\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n       <div v-if=\"hexcolorInfoFormGroup.controls.bodyHexcolorCode.errors\">\r\n         <small class=\"form-text text-danger\">{{hexcolorInfoFormGroup.controls.bodyHexcolorCode.errors.hexColor.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { HexcolorInfo } from './hexcolorInfo.model';\r\n\r\n@Component\r\nexport default class HexColorMessageComponent extends Vue {\r\n hexcolorInfoFormGroup: IFormGroup<HexcolorInfo>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.hexcolorInfoFormGroup = this.formBuilder.formGroup(HexcolorInfo) as IFormGroup<HexcolorInfo>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  hexColor, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class HexcolorInfo {\r\n\r\n\t@hexColor({message:'Please enter the right format of hexcode for body like \"#AFAFAF\"' }) \r\n\tbodyHexcolorCode: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"messageKey":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Title Hexcode</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"hexcolorInfoFormGroup.props.titleHexcolorCode\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">Custom message based on message key<br/></small>\r\n       <div v-if=\"hexcolorInfoFormGroup.controls.titleHexcolorCode.errors\">\r\n         <small class=\"form-text text-danger\">{{hexcolorInfoFormGroup.controls.titleHexcolorCode.errors.hexColor.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { HexcolorInfo } from './hexcolorInfo.model';\r\n\r\n@Component\r\nexport default class HexColorMessageKeyComponent extends Vue {\r\n hexcolorInfoFormGroup: IFormGroup<HexcolorInfo>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.hexcolorInfoFormGroup = this.formBuilder.formGroup(HexcolorInfo) as IFormGroup<HexcolorInfo>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  hexColor, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class HexcolorInfo {\r\n\r\n\t@hexColor({messageKey:'hexColorMessageKey' }) \r\n\ttitleHexcolorCode: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"add":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Color Picker</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.color\" type=\"text\" name=\"name\" />\r\n        <div v-if=\"userFormGroup.controls.color.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.color.errors.hexColor.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component\r\nexport default class HexColorAddComponent extends Vue {\r\n userFormGroup: IFormGroup<User>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.userFormGroup = this.formBuilder.formGroup(User) as IFormGroup<User>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  hexColor, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class User {\r\n\r\n\t@hexColor() \r\n\tcolor: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"edit":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Color Picker</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.color\" type=\"text\" name=\"name\" />\r\n        <div v-if=\"userFormGroup.controls.color.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.color.errors.hexColor.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component\r\nexport default class HexColorEditComponent extends Vue {\r\n userFormGroup: IFormGroup<User>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.userFormGroup = this.formBuilder.formGroup(User) as IFormGroup<User>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  hexColor, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class User {\r\n\r\n\t@hexColor() \r\n\tcolor: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}}}