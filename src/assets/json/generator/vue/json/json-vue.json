{"complete":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Location</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"jsonInfoFormGroup.props.location\" type=\"text\" name=\"name\" />\r\n        <div v-if=\"jsonInfoFormGroup.controls.location.errors\">\r\n         <small class=\"form-text text-danger\">{{jsonInfoFormGroup.controls.location.errors.json.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Address Json</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"jsonInfoFormGroup.props.addressJson\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Address Json' then you need to add 'Location' input as &#123;CountryName:India&#125;.<br/></small>\r\n         <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n       <div v-if=\"jsonInfoFormGroup.controls.addressJson.errors\">\r\n         <small class=\"form-text text-danger\">{{jsonInfoFormGroup.controls.addressJson.errors.json.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Location Json</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"jsonInfoFormGroup.props.locationJson\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Location Json' then you need to add 'Location' input as &#123;CountryName:India&#125;.<br/></small>\r\n         <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n       <div v-if=\"jsonInfoFormGroup.controls.locationJson.errors\">\r\n         <small class=\"form-text text-danger\">{{jsonInfoFormGroup.controls.locationJson.errors.json.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Contact Json</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"jsonInfoFormGroup.props.contactJson\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n       <div v-if=\"jsonInfoFormGroup.controls.contactJson.errors\">\r\n         <small class=\"form-text text-danger\">{{jsonInfoFormGroup.controls.contactJson.errors.json.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Country Json</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"jsonInfoFormGroup.props.countryJson\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">Shows custom message based on Message Key<br/></small>\r\n       <div v-if=\"jsonInfoFormGroup.controls.countryJson.errors\">\r\n         <small class=\"form-text text-danger\">{{jsonInfoFormGroup.controls.countryJson.errors.json.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { JsonInfo } from './jsonInfo.model';\r\n\r\n@Component\r\nexport default class JsonCompleteComponent extends Vue {\r\n jsonInfoFormGroup: IFormGroup<JsonInfo>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.jsonInfoFormGroup = this.formBuilder.formGroup(JsonInfo) as IFormGroup<JsonInfo>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  json,prop, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class JsonInfo {\r\n\r\n\t@prop()\r\n\tlocation: string;\r\n\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@json({conditionalExpression:(x,y)=> x.location == \"{CountryName:India}\"  }) \r\n\taddressJson: string;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@json({conditionalExpression:'x => x.location == \"{CountryName:India}\"'  ,message:'Enter the text in JSON format --> {key:value}' }) \r\n\tlocationJson: string;\r\n\t\r\n\t\r\n\t@json({message:'Enter only JSON type data' }) \r\n\tcontactJson: string;\r\n\t\r\n\t\r\n\t@json({messageKey:'jsonMessageKey' }) \r\n\tcountryJson: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"message":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Location</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"jsonInfoFormGroup.props.location\" type=\"text\" name=\"name\" />\r\n        <div v-if=\"jsonInfoFormGroup.controls.location.errors\">\r\n         <small class=\"form-text text-danger\">{{jsonInfoFormGroup.controls.location.errors.json.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { JsonInfo } from './jsonInfo.model';\r\n\r\n@Component\r\nexport default class JsonMessageComponent extends Vue {\r\n jsonInfoFormGroup: IFormGroup<JsonInfo>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.jsonInfoFormGroup = this.formBuilder.formGroup(JsonInfo) as IFormGroup<JsonInfo>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  json,prop, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class JsonInfo {\r\n\r\n\t@prop()\r\n\tlocation: string;\r\n\r\n}\r\n","modelName":null,"json":{}},"conditionalExpression":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Location</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"jsonInfoFormGroup.props.location\" type=\"text\" name=\"name\" />\r\n        <div v-if=\"jsonInfoFormGroup.controls.location.errors\">\r\n         <small class=\"form-text text-danger\">{{jsonInfoFormGroup.controls.location.errors.json.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Location Json</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"jsonInfoFormGroup.props.locationJson\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Location Json' then you need to add 'Location' input as &#123;CountryName:India&#125;.<br/></small>\r\n         <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n       <div v-if=\"jsonInfoFormGroup.controls.locationJson.errors\">\r\n         <small class=\"form-text text-danger\">{{jsonInfoFormGroup.controls.locationJson.errors.json.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Address Json</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"jsonInfoFormGroup.props.addressJson\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Address Json' then you need to add 'Location' input as &#123;CountryName:India&#125;.<br/></small>\r\n         <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n       <div v-if=\"jsonInfoFormGroup.controls.addressJson.errors\">\r\n         <small class=\"form-text text-danger\">{{jsonInfoFormGroup.controls.addressJson.errors.json.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { JsonInfo } from './jsonInfo.model';\r\n\r\n@Component\r\nexport default class JsonConditionalExpressionComponent extends Vue {\r\n jsonInfoFormGroup: IFormGroup<JsonInfo>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.jsonInfoFormGroup = this.formBuilder.formGroup(JsonInfo) as IFormGroup<JsonInfo>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  json,prop, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class JsonInfo {\r\n\r\n\t@prop()\r\n\tlocation: string;\r\n\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@json({conditionalExpression:'x => x.location == \"{CountryName:India}\"'  ,message:'Enter the text in JSON format --> {key:value}' }) \r\n\tlocationJson: string;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@json({conditionalExpression:(x,y)=> x.location == \"{CountryName:India}\"  }) \r\n\taddressJson: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"messageKey":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Country Json</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"jsonInfoFormGroup.props.countryJson\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">Shows custom message based on Message Key<br/></small>\r\n       <div v-if=\"jsonInfoFormGroup.controls.countryJson.errors\">\r\n         <small class=\"form-text text-danger\">{{jsonInfoFormGroup.controls.countryJson.errors.json.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { JsonInfo } from './jsonInfo.model';\r\n\r\n@Component\r\nexport default class JsonMessageKeyComponent extends Vue {\r\n jsonInfoFormGroup: IFormGroup<JsonInfo>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.jsonInfoFormGroup = this.formBuilder.formGroup(JsonInfo) as IFormGroup<JsonInfo>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  json, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class JsonInfo {\r\n\r\n\t@json({messageKey:'jsonMessageKey' }) \r\n\tcountryJson: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"add":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Location Json</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"jsonInfoFormGroup.props.locationJson\" type=\"text\" name=\"name\" />\r\n        <div v-if=\"jsonInfoFormGroup.controls.locationJson.errors\">\r\n         <small class=\"form-text text-danger\">{{jsonInfoFormGroup.controls.locationJson.errors.json.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { JsonInfo } from './jsonInfo.model';\r\n\r\n@Component\r\nexport default class JsonAddComponent extends Vue {\r\n jsonInfoFormGroup: IFormGroup<JsonInfo>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.jsonInfoFormGroup = this.formBuilder.formGroup(JsonInfo) as IFormGroup<JsonInfo>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  json, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class JsonInfo {\r\n\r\n\t@json() \r\n\tlocationJson: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"edit":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Location Json</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"jsonInfoFormGroup.props.locationJson\" type=\"text\" name=\"name\" />\r\n        <div v-if=\"jsonInfoFormGroup.controls.locationJson.errors\">\r\n         <small class=\"form-text text-danger\">{{jsonInfoFormGroup.controls.locationJson.errors.json.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { JsonInfo } from './jsonInfo.model';\r\n\r\n@Component\r\nexport default class JsonEditComponent extends Vue {\r\n jsonInfoFormGroup: IFormGroup<JsonInfo>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.jsonInfoFormGroup = this.formBuilder.formGroup(JsonInfo) as IFormGroup<JsonInfo>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  json, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class JsonInfo {\r\n\r\n\t@json() \r\n\tlocationJson: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}}}