{"complete":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Number Type</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"numberInfoFormGroup.props.numberType\" type=\"text\" name=\"name\" />\r\n        <div v-if=\"numberInfoFormGroup.controls.numberType.errors\">\r\n         <small class=\"form-text text-danger\">{{numberInfoFormGroup.controls.numberType.errors.primeNumber.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Second Number</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"numberInfoFormGroup.props.secondNumber\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Second Number' then you need to add 'Number Type' input as 'Prime'.<br/></small>\r\n         <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n       <div v-if=\"numberInfoFormGroup.controls.secondNumber.errors\">\r\n         <small class=\"form-text text-danger\">{{numberInfoFormGroup.controls.secondNumber.errors.primeNumber.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Third Number</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"numberInfoFormGroup.props.thirdNumber\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Third Number' then you need to add 'Number Type' input as 'Prime'.<br/></small>\r\n         <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n       <div v-if=\"numberInfoFormGroup.controls.thirdNumber.errors\">\r\n         <small class=\"form-text text-danger\">{{numberInfoFormGroup.controls.thirdNumber.errors.primeNumber.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>First Number</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"numberInfoFormGroup.props.firstNumber\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">You can enter only prime number<br/></small>\r\n         <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n       <div v-if=\"numberInfoFormGroup.controls.firstNumber.errors\">\r\n         <small class=\"form-text text-danger\">{{numberInfoFormGroup.controls.firstNumber.errors.primeNumber.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Fourth Number</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"numberInfoFormGroup.props.fourthNumber\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">Shows custom message using messageKey<br/></small>\r\n       <div v-if=\"numberInfoFormGroup.controls.fourthNumber.errors\">\r\n         <small class=\"form-text text-danger\">{{numberInfoFormGroup.controls.fourthNumber.errors.primeNumber.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { NumberInfo } from './numberInfo.model';\r\n\r\n@Component\r\nexport default class PrimeNumberCompleteComponent extends Vue {\r\n numberInfoFormGroup: IFormGroup<NumberInfo>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.numberInfoFormGroup = this.formBuilder.formGroup(NumberInfo) as IFormGroup<NumberInfo>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  primeNumber,prop, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class NumberInfo {\r\n\r\n\t@prop()\r\n\tnumberType: string;\r\n\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@primeNumber({conditionalExpression:(x,y) => x.numberType == \"Prime\"  }) \r\n\tsecondNumber: string;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@primeNumber({conditionalExpression:'x => x.numberType ==\"Prime\"' }) \r\n\tthirdNumber: string;\r\n\t\r\n\t\r\n\t@primeNumber({message:'{{0}} is not a prime number' }) \r\n\tfirstNumber: string;\r\n\t\r\n\t\r\n\t@primeNumber({messageKey:'primeNumberMessageKey' }) \r\n\tfourthNumber: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"conditionalExpression":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Number Type</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"numberInfoFormGroup.props.numberType\" type=\"text\" name=\"name\" />\r\n        <div v-if=\"numberInfoFormGroup.controls.numberType.errors\">\r\n         <small class=\"form-text text-danger\">{{numberInfoFormGroup.controls.numberType.errors.primeNumber.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Third Number</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"numberInfoFormGroup.props.thirdNumber\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Third Number' then you need to add 'Number Type' input as 'Prime'.<br/></small>\r\n         <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n       <div v-if=\"numberInfoFormGroup.controls.thirdNumber.errors\">\r\n         <small class=\"form-text text-danger\">{{numberInfoFormGroup.controls.thirdNumber.errors.primeNumber.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Second Number</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"numberInfoFormGroup.props.secondNumber\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Second Number' then you need to add 'Number Type' input as 'Prime'.<br/></small>\r\n         <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n       <div v-if=\"numberInfoFormGroup.controls.secondNumber.errors\">\r\n         <small class=\"form-text text-danger\">{{numberInfoFormGroup.controls.secondNumber.errors.primeNumber.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { NumberInfo } from './numberInfo.model';\r\n\r\n@Component\r\nexport default class PrimeNumberConditionalExpressionComponent extends Vue {\r\n numberInfoFormGroup: IFormGroup<NumberInfo>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.numberInfoFormGroup = this.formBuilder.formGroup(NumberInfo) as IFormGroup<NumberInfo>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  primeNumber,prop, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class NumberInfo {\r\n\r\n\t@prop()\r\n\tnumberType: string;\r\n\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@primeNumber({conditionalExpression:'x => x.numberType ==\"Prime\"' }) \r\n\tthirdNumber: string;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@primeNumber({conditionalExpression:(x,y) => x.numberType == \"Prime\"  }) \r\n\tsecondNumber: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"message":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>First Number</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"numberInfoFormGroup.props.firstNumber\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">You can enter only prime number<br/></small>\r\n         <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n       <div v-if=\"numberInfoFormGroup.controls.firstNumber.errors\">\r\n         <small class=\"form-text text-danger\">{{numberInfoFormGroup.controls.firstNumber.errors.primeNumber.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { NumberInfo } from './numberInfo.model';\r\n\r\n@Component\r\nexport default class PrimeNumberMessageComponent extends Vue {\r\n numberInfoFormGroup: IFormGroup<NumberInfo>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.numberInfoFormGroup = this.formBuilder.formGroup(NumberInfo) as IFormGroup<NumberInfo>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  primeNumber, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class NumberInfo {\r\n\r\n\t@primeNumber({message:'{{0}} is not a prime number' }) \r\n\tfirstNumber: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"messageKey":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Fourth Number</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"numberInfoFormGroup.props.fourthNumber\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">Shows custom message using messageKey<br/></small>\r\n       <div v-if=\"numberInfoFormGroup.controls.fourthNumber.errors\">\r\n         <small class=\"form-text text-danger\">{{numberInfoFormGroup.controls.fourthNumber.errors.primeNumber.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { NumberInfo } from './numberInfo.model';\r\n\r\n@Component\r\nexport default class PrimeNumberMessageKeyComponent extends Vue {\r\n numberInfoFormGroup: IFormGroup<NumberInfo>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.numberInfoFormGroup = this.formBuilder.formGroup(NumberInfo) as IFormGroup<NumberInfo>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  primeNumber, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class NumberInfo {\r\n\r\n\t@primeNumber({messageKey:'primeNumberMessageKey' }) \r\n\tfourthNumber: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"add":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>First Number</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"numberInfoFormGroup.props.firstNumber\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">You must enter a proper prime number<br/></small>\r\n       <div v-if=\"numberInfoFormGroup.controls.firstNumber.errors\">\r\n         <small class=\"form-text text-danger\">{{numberInfoFormGroup.controls.firstNumber.errors.primeNumber.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { NumberInfo } from './numberInfo.model';\r\n\r\n@Component\r\nexport default class PrimeNumberAddComponent extends Vue {\r\n numberInfoFormGroup: IFormGroup<NumberInfo>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.numberInfoFormGroup = this.formBuilder.formGroup(NumberInfo) as IFormGroup<NumberInfo>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  primeNumber, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class NumberInfo {\r\n\r\n\t@primeNumber() \r\n\tfirstNumber: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"edit":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>First Number</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"numberInfoFormGroup.props.firstNumber\" type=\"text\" name=\"name\" />\r\n          <small class=\"form-text text-muted\">You must enter a proper prime number<br/></small>\r\n       <div v-if=\"numberInfoFormGroup.controls.firstNumber.errors\">\r\n         <small class=\"form-text text-danger\">{{numberInfoFormGroup.controls.firstNumber.errors.primeNumber.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\n\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { NumberInfo } from './numberInfo.model';\r\n\r\n@Component\r\nexport default class PrimeNumberEditComponent extends Vue {\r\n numberInfoFormGroup: IFormGroup<NumberInfo>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.numberInfoFormGroup = this.formBuilder.formGroup(NumberInfo) as IFormGroup<NumberInfo>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  primeNumber, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class NumberInfo {\r\n\r\n\t@primeNumber() \r\n\tfirstNumber: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}}}