{"complete":{"notes":null,"component":"\r\n<template>\r\n\r\n<div class=\"container\">\r\n  <div class=\"col-lg-12\">\r\n    <h1>{{ msg }}</h1>\r\n      <form>\r\n           <div class=\"form-group\">\r\n    <label>Country Name</label>\r\n    <input\r\n      class=\"form-control\"\r\n      v-model=\"addressInfoFormGroup.props.countryName\"\r\n      type=\"text\" />\r\n     \r\n        <div v-if=\"addressInfoFormGroup.controls.countryName.errors\">\r\n     <small class=\"form-text text-danger\">{{addressInfoFormGroup.controls.countryName.errors.alpha.message}}<br/></small>\t\r\n    </div>\r\n  </div>\r\n           <div class=\"form-group\">\r\n    <label>Country Code</label>\r\n    <input\r\n      class=\"form-control\"\r\n      v-model=\"addressInfoFormGroup.props.countryCode\"\r\n      type=\"text\" />\r\n     \r\n          <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Country Code' then you need to add 'Country Name' input as 'India'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n    <div v-if=\"addressInfoFormGroup.controls.countryCode.errors\">\r\n     <small class=\"form-text text-danger\">{{addressInfoFormGroup.controls.countryCode.errors.alpha.message}}<br/></small>\t\r\n    </div>\r\n  </div>\r\n           <div class=\"form-group\">\r\n    <label>City</label>\r\n    <input\r\n      class=\"form-control\"\r\n      v-model=\"addressInfoFormGroup.props.cityName\"\r\n      type=\"text\" />\r\n     \r\n          <small class=\"form-text text-muted\">If you want to apply conditional validation on 'City' then you need to add 'Country Name' input as 'India'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n    <div v-if=\"addressInfoFormGroup.controls.cityName.errors\">\r\n     <small class=\"form-text text-danger\">{{addressInfoFormGroup.controls.cityName.errors.alpha.message}}<br/></small>\t\r\n    </div>\r\n  </div>\r\n           <div class=\"form-group\">\r\n    <label>State Name</label>\r\n    <input\r\n      class=\"form-control\"\r\n      v-model=\"addressInfoFormGroup.props.stateName\"\r\n      type=\"text\" />\r\n     \r\n          <small class=\"form-text text-muted\">This allowed whitespace in alpha validation<br/></small>\r\n    <div v-if=\"addressInfoFormGroup.controls.stateName.errors\">\r\n     <small class=\"form-text text-danger\">{{addressInfoFormGroup.controls.stateName.errors.alpha.message}}<br/></small>\t\r\n    </div>\r\n  </div>\r\n           <div class=\"form-group\">\r\n    <label>State Code</label>\r\n    <input\r\n      class=\"form-control\"\r\n      v-model=\"addressInfoFormGroup.props.stateCode\"\r\n      type=\"text\" />\r\n     \r\n          <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n    <div v-if=\"addressInfoFormGroup.controls.stateCode.errors\">\r\n     <small class=\"form-text text-danger\">{{addressInfoFormGroup.controls.stateCode.errors.alpha.message}}<br/></small>\t\r\n    </div>\r\n  </div>\r\n           <div class=\"form-group\">\r\n    <label>City Code</label>\r\n    <input\r\n      class=\"form-control\"\r\n      v-model=\"addressInfoFormGroup.props.cityCode\"\r\n      type=\"text\" />\r\n     \r\n          <small class=\"form-text text-muted\">custom message based on messageKey<br/></small>\r\n    <div v-if=\"addressInfoFormGroup.controls.cityCode.errors\">\r\n     <small class=\"form-text text-danger\">{{addressInfoFormGroup.controls.cityCode.errors.alpha.message}}<br/></small>\t\r\n    </div>\r\n  </div>\r\n             <button class=\"btn btn-primary\">Submit</button>\r\n       </form>\r\n</div>\r\n</div>\r\n\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { AddressInfo } from './addressInfo.model';\r\n\r\n@Component\r\nexport default class AlphaCompleteComponent extends Vue {\r\n @Prop() msg!: string;\r\n addressInfoFormGroup: IFormGroup<AddressInfo>;\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n  constructor() {\r\n  super();\r\n    this.addressInfoFormGroup = this.formBuilder.formGroup(AddressInfo) as IFormGroup<AddressInfo>;\r\n   }\r\n}\r\n\r\n</script> \r\n","html":null,"model":null,"modelName":null,"json":{}},"conditionalExpression":{"notes":null,"component":"\r\n<template>\r\n\r\n<div class=\"container\">\r\n  <div class=\"col-lg-12\">\r\n    <h1>{{ msg }}</h1>\r\n      <form>\r\n           <div class=\"form-group\">\r\n    <label>Country Name</label>\r\n    <input\r\n      class=\"form-control\"\r\n      v-model=\"addressInfoFormGroup.props.countryName\"\r\n      type=\"text\" />\r\n     \r\n        <div v-if=\"addressInfoFormGroup.controls.countryName.errors\">\r\n     <small class=\"form-text text-danger\">{{addressInfoFormGroup.controls.countryName.errors.alpha.message}}<br/></small>\t\r\n    </div>\r\n  </div>\r\n           <div class=\"form-group\">\r\n    <label>City</label>\r\n    <input\r\n      class=\"form-control\"\r\n      v-model=\"addressInfoFormGroup.props.cityName\"\r\n      type=\"text\" />\r\n     \r\n          <small class=\"form-text text-muted\">If you want to apply conditional validation on 'City' then you need to add 'Country Name' input as 'India'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n    <div v-if=\"addressInfoFormGroup.controls.cityName.errors\">\r\n     <small class=\"form-text text-danger\">{{addressInfoFormGroup.controls.cityName.errors.alpha.message}}<br/></small>\t\r\n    </div>\r\n  </div>\r\n           <div class=\"form-group\">\r\n    <label>Country Code</label>\r\n    <input\r\n      class=\"form-control\"\r\n      v-model=\"addressInfoFormGroup.props.countryCode\"\r\n      type=\"text\" />\r\n     \r\n          <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Country Code' then you need to add 'Country Name' input as 'India'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n    <div v-if=\"addressInfoFormGroup.controls.countryCode.errors\">\r\n     <small class=\"form-text text-danger\">{{addressInfoFormGroup.controls.countryCode.errors.alpha.message}}<br/></small>\t\r\n    </div>\r\n  </div>\r\n             <button class=\"btn btn-primary\">Submit</button>\r\n       </form>\r\n</div>\r\n</div>\r\n\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { AddressInfo } from './addressInfo.model';\r\n\r\n@Component\r\nexport default class AlphaConditionalExpressionComponent extends Vue {\r\n @Prop() msg!: string;\r\n addressInfoFormGroup: IFormGroup<AddressInfo>;\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n  constructor() {\r\n  super();\r\n    this.addressInfoFormGroup = this.formBuilder.formGroup(AddressInfo) as IFormGroup<AddressInfo>;\r\n   }\r\n}\r\n\r\n</script> \r\n","html":null,"model":null,"modelName":null,"json":{}},"allowWhiteSpace":{"notes":null,"component":"\r\n<template>\r\n\r\n<div class=\"container\">\r\n  <div class=\"col-lg-12\">\r\n    <h1>{{ msg }}</h1>\r\n      <form>\r\n           <div class=\"form-group\">\r\n    <label>State Name</label>\r\n    <input\r\n      class=\"form-control\"\r\n      v-model=\"addressInfoFormGroup.props.stateName\"\r\n      type=\"text\" />\r\n     \r\n          <small class=\"form-text text-muted\">This allowed whitespace in alpha validation<br/></small>\r\n    <div v-if=\"addressInfoFormGroup.controls.stateName.errors\">\r\n     <small class=\"form-text text-danger\">{{addressInfoFormGroup.controls.stateName.errors.alpha.message}}<br/></small>\t\r\n    </div>\r\n  </div>\r\n             <button class=\"btn btn-primary\">Submit</button>\r\n       </form>\r\n</div>\r\n</div>\r\n\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { AddressInfo } from './addressInfo.model';\r\n\r\n@Component\r\nexport default class AlphaAllowWhiteSpaceComponent extends Vue {\r\n @Prop() msg!: string;\r\n addressInfoFormGroup: IFormGroup<AddressInfo>;\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n  constructor() {\r\n  super();\r\n    this.addressInfoFormGroup = this.formBuilder.formGroup(AddressInfo) as IFormGroup<AddressInfo>;\r\n   }\r\n}\r\n\r\n</script> \r\n","html":null,"model":null,"modelName":null,"json":{}},"message":{"notes":null,"component":"\r\n<template>\r\n\r\n<div class=\"container\">\r\n  <div class=\"col-lg-12\">\r\n    <h1>{{ msg }}</h1>\r\n      <form>\r\n           <div class=\"form-group\">\r\n    <label>State Code</label>\r\n    <input\r\n      class=\"form-control\"\r\n      v-model=\"addressInfoFormGroup.props.stateCode\"\r\n      type=\"text\" />\r\n     \r\n          <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n    <div v-if=\"addressInfoFormGroup.controls.stateCode.errors\">\r\n     <small class=\"form-text text-danger\">{{addressInfoFormGroup.controls.stateCode.errors.alpha.message}}<br/></small>\t\r\n    </div>\r\n  </div>\r\n             <button class=\"btn btn-primary\">Submit</button>\r\n       </form>\r\n</div>\r\n</div>\r\n\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { AddressInfo } from './addressInfo.model';\r\n\r\n@Component\r\nexport default class AlphaMessageComponent extends Vue {\r\n @Prop() msg!: string;\r\n addressInfoFormGroup: IFormGroup<AddressInfo>;\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n  constructor() {\r\n  super();\r\n    this.addressInfoFormGroup = this.formBuilder.formGroup(AddressInfo) as IFormGroup<AddressInfo>;\r\n   }\r\n}\r\n\r\n</script> \r\n","html":null,"model":null,"modelName":null,"json":{}},"messageKey":{"notes":null,"component":"\r\n<template>\r\n\r\n<div class=\"container\">\r\n  <div class=\"col-lg-12\">\r\n    <h1>{{ msg }}</h1>\r\n      <form>\r\n           <div class=\"form-group\">\r\n    <label>City Code</label>\r\n    <input\r\n      class=\"form-control\"\r\n      v-model=\"addressInfoFormGroup.props.cityCode\"\r\n      type=\"text\" />\r\n     \r\n          <small class=\"form-text text-muted\">custom message based on messageKey<br/></small>\r\n    <div v-if=\"addressInfoFormGroup.controls.cityCode.errors\">\r\n     <small class=\"form-text text-danger\">{{addressInfoFormGroup.controls.cityCode.errors.alpha.message}}<br/></small>\t\r\n    </div>\r\n  </div>\r\n             <button class=\"btn btn-primary\">Submit</button>\r\n       </form>\r\n</div>\r\n</div>\r\n\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { AddressInfo } from './addressInfo.model';\r\n\r\n@Component\r\nexport default class AlphaMessageKeyComponent extends Vue {\r\n @Prop() msg!: string;\r\n addressInfoFormGroup: IFormGroup<AddressInfo>;\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n  constructor() {\r\n  super();\r\n    this.addressInfoFormGroup = this.formBuilder.formGroup(AddressInfo) as IFormGroup<AddressInfo>;\r\n   }\r\n}\r\n\r\n</script> \r\n","html":null,"model":null,"modelName":null,"json":{}},"add":{"notes":null,"component":"\r\n<template>\r\n\r\n<div class=\"container\">\r\n  <div class=\"col-lg-12\">\r\n    <h1>{{ msg }}</h1>\r\n      <form>\r\n           <div class=\"form-group\">\r\n    <label>Country Name</label>\r\n    <input\r\n      class=\"form-control\"\r\n      v-model=\"countryFormGroup.props.countryName\"\r\n      type=\"text\" />\r\n     \r\n        <div v-if=\"countryFormGroup.controls.countryName.errors\">\r\n     <small class=\"form-text text-danger\">{{countryFormGroup.controls.countryName.errors.alpha.message}}<br/></small>\t\r\n    </div>\r\n  </div>\r\n             <button class=\"btn btn-primary\">Submit</button>\r\n       </form>\r\n</div>\r\n</div>\r\n\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { Country } from './country.model';\r\n\r\n@Component\r\nexport default class AlphaAddComponent extends Vue {\r\n @Prop() msg!: string;\r\n countryFormGroup: IFormGroup<Country>;\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n  constructor() {\r\n  super();\r\n    this.countryFormGroup = this.formBuilder.formGroup(Country) as IFormGroup<Country>;\r\n   }\r\n}\r\n\r\n</script> \r\n","html":null,"model":null,"modelName":null,"json":{}},"edit":{"notes":null,"component":"\r\n<template>\r\n\r\n<div class=\"container\">\r\n  <div class=\"col-lg-12\">\r\n    <h1>{{ msg }}</h1>\r\n      <form>\r\n           <div class=\"form-group\">\r\n    <label>Country Name</label>\r\n    <input\r\n      class=\"form-control\"\r\n      v-model=\"countryFormGroup.props.countryName\"\r\n      type=\"text\" />\r\n     \r\n        <div v-if=\"countryFormGroup.controls.countryName.errors\">\r\n     <small class=\"form-text text-danger\">{{countryFormGroup.controls.countryName.errors.alpha.message}}<br/></small>\t\r\n    </div>\r\n  </div>\r\n             <button class=\"btn btn-primary\">Submit</button>\r\n       </form>\r\n</div>\r\n</div>\r\n\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { Country } from './country.model';\r\n\r\n@Component\r\nexport default class AlphaEditComponent extends Vue {\r\n @Prop() msg!: string;\r\n countryFormGroup: IFormGroup<Country>;\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n  constructor() {\r\n  super();\r\n    this.countryFormGroup = this.formBuilder.formGroup(Country) as IFormGroup<Country>;\r\n   }\r\n}\r\n\r\n</script> \r\n","html":null,"model":null,"modelName":null,"json":{}},"fieldName":{"notes":null,"component":"\r\n<template>\r\n\r\n<div class=\"container\">\r\n  <div class=\"col-lg-12\">\r\n    <h1>{{ msg }}</h1>\r\n      <form>\r\n           <div class=\"form-group\">\r\n    <label>Email</label>\r\n    <input\r\n      class=\"form-control\"\r\n      v-model=\"userFormGroup.props.email\"\r\n      type=\"text\" />\r\n     \r\n        <div v-if=\"userFormGroup.controls.email.errors\">\r\n     <small class=\"form-text text-danger\">{{userFormGroup.controls.email.errors.compare.message}}<br/></small>\t\r\n    </div>\r\n  </div>\r\n           <div class=\"form-group\">\r\n    <label>Confirm Email</label>\r\n    <input\r\n      class=\"form-control\"\r\n      v-model=\"userFormGroup.props.confirmEmail\"\r\n      type=\"text\" />\r\n     \r\n        <div v-if=\"userFormGroup.controls.confirmEmail.errors\">\r\n     <small class=\"form-text text-danger\">{{userFormGroup.controls.confirmEmail.errors.compare.message}}<br/></small>\t\r\n    </div>\r\n  </div>\r\n             <button class=\"btn btn-primary\">Submit</button>\r\n       </form>\r\n</div>\r\n</div>\r\n\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component\r\nexport default class CompareFieldNameComponent extends Vue {\r\n @Prop() msg!: string;\r\n userFormGroup: IFormGroup<User>;\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n  constructor() {\r\n  super();\r\n    this.userFormGroup = this.formBuilder.formGroup(User) as IFormGroup<User>;\r\n   }\r\n}\r\n\r\n</script> \r\n","html":null,"model":null,"modelName":null,"json":{}},"value":{"notes":null,"component":"\r\n<template>\r\n\r\n<div class=\"container\">\r\n  <div class=\"col-lg-12\">\r\n    <h1>{{ msg }}</h1>\r\n      <form>\r\n           <div class=\"form-group\">\r\n    <label>Email Address</label>\r\n    <input\r\n      class=\"form-control\"\r\n      v-model=\"userFormGroup.props.emailAddress\"\r\n      type=\"text\" />\r\n     \r\n        <div v-if=\"userFormGroup.controls.emailAddress.errors\">\r\n     <small class=\"form-text text-danger\">{{userFormGroup.controls.emailAddress.errors.contains.message}}<br/></small>\t\r\n    </div>\r\n  </div>\r\n             <button class=\"btn btn-primary\">Submit</button>\r\n       </form>\r\n</div>\r\n</div>\r\n\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component\r\nexport default class ContainsValueComponent extends Vue {\r\n @Prop() msg!: string;\r\n userFormGroup: IFormGroup<User>;\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n  constructor() {\r\n  super();\r\n    this.userFormGroup = this.formBuilder.formGroup(User) as IFormGroup<User>;\r\n   }\r\n}\r\n\r\n</script> \r\n","html":null,"model":null,"modelName":null,"json":{}},"expression":{"notes":null,"component":"\r\n<template>\r\n\r\n<div class=\"container\">\r\n  <div class=\"col-lg-12\">\r\n    <h1>{{ msg }}</h1>\r\n      <form>\r\n           <div class=\"form-group\">\r\n    <label>User Name</label>\r\n    <input\r\n      class=\"form-control\"\r\n      v-model=\"userFormGroup.props.userName\"\r\n      type=\"text\" />\r\n     \r\n          <small class=\"form-text text-muted\">It checked that username match alpha regex or not<br/></small>\r\n    <div v-if=\"userFormGroup.controls.userName.errors\">\r\n     <small class=\"form-text text-danger\">{{userFormGroup.controls.userName.errors.pattern.message}}<br/></small>\t\r\n    </div>\r\n  </div>\r\n             <button class=\"btn btn-primary\">Submit</button>\r\n       </form>\r\n</div>\r\n</div>\r\n\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component\r\nexport default class PatternExpressionComponent extends Vue {\r\n @Prop() msg!: string;\r\n userFormGroup: IFormGroup<User>;\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n  constructor() {\r\n  super();\r\n    this.userFormGroup = this.formBuilder.formGroup(User) as IFormGroup<User>;\r\n   }\r\n}\r\n\r\n</script> \r\n","html":null,"model":null,"modelName":null,"json":{}},"validation":{"notes":null,"component":"\r\n<template>\r\n\r\n<div class=\"container\">\r\n  <div class=\"col-lg-12\">\r\n    <h1>{{ msg }}</h1>\r\n      <form>\r\n           <div class=\"form-group\">\r\n    <label>New Password</label>\r\n    <input\r\n      class=\"form-control\"\r\n      v-model=\"loginInfoFormGroup.props.newPassword\"\r\n      type=\"text\" />\r\n     \r\n        <div v-if=\"loginInfoFormGroup.controls.newPassword.errors\">\r\n     <small class=\"form-text text-danger\">{{loginInfoFormGroup.controls.newPassword.errors.password.message}}<br/></small>\t\r\n    </div>\r\n  </div>\r\n             <button class=\"btn btn-primary\">Submit</button>\r\n       </form>\r\n</div>\r\n</div>\r\n\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { LoginInfo } from './loginInfo.model';\r\n\r\n@Component\r\nexport default class PasswordValidationComponent extends Vue {\r\n @Prop() msg!: string;\r\n loginInfoFormGroup: IFormGroup<LoginInfo>;\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n  constructor() {\r\n  super();\r\n    this.loginInfoFormGroup = this.formBuilder.formGroup(LoginInfo) as IFormGroup<LoginInfo>;\r\n   }\r\n}\r\n\r\n</script> \r\n","html":null,"model":null,"modelName":null,"json":{}},"minimumNumber":{"notes":null,"component":"\r\n<template>\r\n\r\n<div class=\"container\">\r\n  <div class=\"col-lg-12\">\r\n    <h1>{{ msg }}</h1>\r\n      <form>\r\n           <div class=\"form-group\">\r\n    <label>Employee Age</label>\r\n    <input\r\n      class=\"form-control\"\r\n      v-model=\"employeeInfoFormGroup.props.age\"\r\n      type=\"text\" />\r\n     \r\n          <small class=\"form-text text-muted\">Age Should be between 18 to 60.<br/></small>\r\n    <div v-if=\"employeeInfoFormGroup.controls.age.errors\">\r\n     <small class=\"form-text text-danger\">{{employeeInfoFormGroup.controls.age.errors.range.message}}<br/></small>\t\r\n    </div>\r\n  </div>\r\n             <button class=\"btn btn-primary\">Submit</button>\r\n       </form>\r\n</div>\r\n</div>\r\n\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { EmployeeInfo } from './employeeInfo.model';\r\n\r\n@Component\r\nexport default class RangeMinimumNumberComponent extends Vue {\r\n @Prop() msg!: string;\r\n employeeInfoFormGroup: IFormGroup<EmployeeInfo>;\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n  constructor() {\r\n  super();\r\n    this.employeeInfoFormGroup = this.formBuilder.formGroup(EmployeeInfo) as IFormGroup<EmployeeInfo>;\r\n   }\r\n}\r\n\r\n</script> \r\n","html":null,"model":null,"modelName":null,"json":{}},"maximumNumber":{"notes":null,"component":"\r\n<template>\r\n\r\n<div class=\"container\">\r\n  <div class=\"col-lg-12\">\r\n    <h1>{{ msg }}</h1>\r\n      <form>\r\n           <div class=\"form-group\">\r\n    <label>Employee Age</label>\r\n    <input\r\n      class=\"form-control\"\r\n      v-model=\"employeeInfoFormGroup.props.age\"\r\n      type=\"text\" />\r\n     \r\n          <small class=\"form-text text-muted\">Age Should be between 18 to 60.<br/></small>\r\n    <div v-if=\"employeeInfoFormGroup.controls.age.errors\">\r\n     <small class=\"form-text text-danger\">{{employeeInfoFormGroup.controls.age.errors.range.message}}<br/></small>\t\r\n    </div>\r\n  </div>\r\n             <button class=\"btn btn-primary\">Submit</button>\r\n       </form>\r\n</div>\r\n</div>\r\n\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { EmployeeInfo } from './employeeInfo.model';\r\n\r\n@Component\r\nexport default class RangeMaximumNumberComponent extends Vue {\r\n @Prop() msg!: string;\r\n employeeInfoFormGroup: IFormGroup<EmployeeInfo>;\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n  constructor() {\r\n  super();\r\n    this.employeeInfoFormGroup = this.formBuilder.formGroup(EmployeeInfo) as IFormGroup<EmployeeInfo>;\r\n   }\r\n}\r\n\r\n</script> \r\n","html":null,"model":null,"modelName":null,"json":{}},"allowSeconds":{"notes":null,"component":"\r\n<template>\r\n\r\n<div class=\"container\">\r\n  <div class=\"col-lg-12\">\r\n    <h1>{{ msg }}</h1>\r\n      <form>\r\n           <div class=\"form-group\">\r\n    <label>Total Time Out</label>\r\n    <input\r\n      class=\"form-control\"\r\n      v-model=\"attandanceDetailFormGroup.props.totalOutTime\"\r\n      type=\"text\" />\r\n     \r\n          <small class=\"form-text text-muted\">Allow seconds.<br/></small>\r\n    <div v-if=\"attandanceDetailFormGroup.controls.totalOutTime.errors\">\r\n     <small class=\"form-text text-danger\">{{attandanceDetailFormGroup.controls.totalOutTime.errors.time.message}}<br/></small>\t\r\n    </div>\r\n  </div>\r\n             <button class=\"btn btn-primary\">Submit</button>\r\n       </form>\r\n</div>\r\n</div>\r\n\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { AttandanceDetail } from './attandanceDetail.model';\r\n\r\n@Component\r\nexport default class TimeAllowSecondsComponent extends Vue {\r\n @Prop() msg!: string;\r\n attandanceDetailFormGroup: IFormGroup<AttandanceDetail>;\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n  constructor() {\r\n  super();\r\n    this.attandanceDetailFormGroup = this.formBuilder.formGroup(AttandanceDetail) as IFormGroup<AttandanceDetail>;\r\n   }\r\n}\r\n\r\n</script> \r\n","html":null,"model":null,"modelName":null,"json":{}},"operator":{"notes":null,"component":"\r\n<template>\r\n\r\n<div class=\"container\">\r\n  <div class=\"col-lg-12\">\r\n    <h1>{{ msg }}</h1>\r\n      <form>\r\n           <div class=\"form-group\">\r\n    <label>Break Hours</label>\r\n    <input\r\n      class=\"form-control\"\r\n      v-model=\"attandanceDetailFormGroup.props.breakHours\"\r\n      type=\"text\" />\r\n     \r\n          <small class=\"form-text text-muted\">Value should be less than 00:10<br/></small>\r\n    <div v-if=\"attandanceDetailFormGroup.controls.breakHours.errors\">\r\n     <small class=\"form-text text-danger\">{{attandanceDetailFormGroup.controls.breakHours.errors.maxTime.message}}<br/></small>\t\r\n    </div>\r\n  </div>\r\n             <button class=\"btn btn-primary\">Submit</button>\r\n       </form>\r\n</div>\r\n</div>\r\n\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { AttandanceDetail } from './attandanceDetail.model';\r\n\r\n@Component\r\nexport default class MaxTimeOperatorComponent extends Vue {\r\n @Prop() msg!: string;\r\n attandanceDetailFormGroup: IFormGroup<AttandanceDetail>;\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n  constructor() {\r\n  super();\r\n    this.attandanceDetailFormGroup = this.formBuilder.formGroup(AttandanceDetail) as IFormGroup<AttandanceDetail>;\r\n   }\r\n}\r\n\r\n</script> \r\n","html":null,"model":null,"modelName":null,"json":{}},"dividend":{"notes":null,"component":"\r\n<template>\r\n\r\n<div class=\"container\">\r\n  <div class=\"col-lg-12\">\r\n    <h1>{{ msg }}</h1>\r\n      <form>\r\n           <div class=\"form-group\">\r\n    <label>Fourth Number</label>\r\n    <input\r\n      class=\"form-control\"\r\n      v-model=\"userFormGroup.props.fourthNumber\"\r\n      type=\"text\" />\r\n     \r\n          <small class=\"form-text text-muted\">you can enter only factors of 50<br/></small>\r\n      <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n    <div v-if=\"userFormGroup.controls.fourthNumber.errors\">\r\n     <small class=\"form-text text-danger\">{{userFormGroup.controls.fourthNumber.errors.factor.message}}<br/></small>\t\r\n    </div>\r\n  </div>\r\n             <button class=\"btn btn-primary\">Submit</button>\r\n       </form>\r\n</div>\r\n</div>\r\n\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component\r\nexport default class FactorDividendComponent extends Vue {\r\n @Prop() msg!: string;\r\n userFormGroup: IFormGroup<User>;\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n  constructor() {\r\n  super();\r\n    this.userFormGroup = this.formBuilder.formGroup(User) as IFormGroup<User>;\r\n   }\r\n}\r\n\r\n</script> \r\n","html":null,"model":null,"modelName":null,"json":{}},"acceptValue":{"notes":null,"component":"\r\n<template>\r\n\r\n<div class=\"container\">\r\n  <div class=\"col-lg-12\">\r\n    <h1>{{ msg }}</h1>\r\n      <form>\r\n           <div class=\"form-group\">\r\n    <label>Negative Number</label>\r\n    <input\r\n      class=\"form-control\"\r\n      v-model=\"userInfoFormGroup.props.negativeNumber\"\r\n      type=\"text\" />\r\n     \r\n          <small class=\"form-text text-muted\">you can enter only a negative number<br/></small>\r\n    <div v-if=\"userInfoFormGroup.controls.negativeNumber.errors\">\r\n     <small class=\"form-text text-danger\">{{userInfoFormGroup.controls.negativeNumber.errors.numeric.message}}<br/></small>\t\r\n    </div>\r\n  </div>\r\n             <button class=\"btn btn-primary\">Submit</button>\r\n       </form>\r\n</div>\r\n</div>\r\n\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { UserInfo } from './userInfo.model';\r\n\r\n@Component\r\nexport default class NumericAcceptValueComponent extends Vue {\r\n @Prop() msg!: string;\r\n userInfoFormGroup: IFormGroup<UserInfo>;\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n  constructor() {\r\n  super();\r\n    this.userInfoFormGroup = this.formBuilder.formGroup(UserInfo) as IFormGroup<UserInfo>;\r\n   }\r\n}\r\n\r\n</script> \r\n","html":null,"model":null,"modelName":null,"json":{}},"isFormat":{"notes":null,"component":"\r\n<template>\r\n\r\n<div class=\"container\">\r\n  <div class=\"col-lg-12\">\r\n    <h1>{{ msg }}</h1>\r\n      <form>\r\n           <div class=\"form-group\">\r\n    <label>Total Amount</label>\r\n    <input\r\n      class=\"form-control\"\r\n      v-model=\"userInfoFormGroup.props.totalAmount\"\r\n      type=\"text\" />\r\n     \r\n        <div v-if=\"userInfoFormGroup.controls.totalAmount.errors\">\r\n     <small class=\"form-text text-danger\">{{userInfoFormGroup.controls.totalAmount.errors.numeric.message}}<br/></small>\t\r\n    </div>\r\n  </div>\r\n             <button class=\"btn btn-primary\">Submit</button>\r\n       </form>\r\n</div>\r\n</div>\r\n\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { UserInfo } from './userInfo.model';\r\n\r\n@Component\r\nexport default class NumericIsFormatComponent extends Vue {\r\n @Prop() msg!: string;\r\n userInfoFormGroup: IFormGroup<UserInfo>;\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n  constructor() {\r\n  super();\r\n    this.userInfoFormGroup = this.formBuilder.formGroup(UserInfo) as IFormGroup<UserInfo>;\r\n   }\r\n}\r\n\r\n</script> \r\n","html":null,"model":null,"modelName":null,"json":{}},"allowDecimal":{"notes":null,"component":"\r\n<template>\r\n\r\n<div class=\"container\">\r\n  <div class=\"col-lg-12\">\r\n    <h1>{{ msg }}</h1>\r\n      <form>\r\n           <div class=\"form-group\">\r\n    <label>Decimal Number</label>\r\n    <input\r\n      class=\"form-control\"\r\n      v-model=\"userInfoFormGroup.props.decimalNumber\"\r\n      type=\"text\" />\r\n     \r\n          <small class=\"form-text text-muted\">you can enter only a positive decimal number<br/></small>\r\n    <div v-if=\"userInfoFormGroup.controls.decimalNumber.errors\">\r\n     <small class=\"form-text text-danger\">{{userInfoFormGroup.controls.decimalNumber.errors.numeric.message}}<br/></small>\t\r\n    </div>\r\n  </div>\r\n             <button class=\"btn btn-primary\">Submit</button>\r\n       </form>\r\n</div>\r\n</div>\r\n\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { UserInfo } from './userInfo.model';\r\n\r\n@Component\r\nexport default class NumericAllowDecimalComponent extends Vue {\r\n @Prop() msg!: string;\r\n userInfoFormGroup: IFormGroup<UserInfo>;\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n  constructor() {\r\n  super();\r\n    this.userInfoFormGroup = this.formBuilder.formGroup(UserInfo) as IFormGroup<UserInfo>;\r\n   }\r\n}\r\n\r\n</script> \r\n","html":null,"model":null,"modelName":null,"json":{}},"maxSize":{"notes":null,"component":"\r\n<template>\r\n\r\n<div class=\"container\">\r\n  <div class=\"col-lg-12\">\r\n    <h1>{{ msg }}</h1>\r\n      <form>\r\n           <div class=\"form-group\">\r\n    <label>Video File</label>\r\n    <input\r\n      class=\"form-control\"\r\n      v-model=\"userInfoFormGroup.props.videoFile\"\r\n      type=\"text\" />\r\n     \r\n        <div v-if=\"userInfoFormGroup.controls.videoFile.errors\">\r\n     <small class=\"form-text text-danger\">{{userInfoFormGroup.controls.videoFile.errors.fileSize.message}}<br/></small>\t\r\n    </div>\r\n  </div>\r\n             <button class=\"btn btn-primary\">Submit</button>\r\n       </form>\r\n</div>\r\n</div>\r\n\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { UserInfo } from './userInfo.model';\r\n\r\n@Component\r\nexport default class FileSizeMaxSizeComponent extends Vue {\r\n @Prop() msg!: string;\r\n userInfoFormGroup: IFormGroup<UserInfo>;\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n  constructor() {\r\n  super();\r\n    this.userInfoFormGroup = this.formBuilder.formGroup(UserInfo) as IFormGroup<UserInfo>;\r\n   }\r\n}\r\n\r\n</script> \r\n","html":null,"model":null,"modelName":null,"json":{}},"minSize":{"notes":null,"component":"\r\n<template>\r\n\r\n<div class=\"container\">\r\n  <div class=\"col-lg-12\">\r\n    <h1>{{ msg }}</h1>\r\n      <form>\r\n           <div class=\"form-group\">\r\n    <label>Audio File</label>\r\n    <input\r\n      class=\"form-control\"\r\n      v-model=\"userInfoFormGroup.props.audioFile\"\r\n      type=\"text\" />\r\n     \r\n        <div v-if=\"userInfoFormGroup.controls.audioFile.errors\">\r\n     <small class=\"form-text text-danger\">{{userInfoFormGroup.controls.audioFile.errors.fileSize.message}}<br/></small>\t\r\n    </div>\r\n  </div>\r\n             <button class=\"btn btn-primary\">Submit</button>\r\n       </form>\r\n</div>\r\n</div>\r\n\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { UserInfo } from './userInfo.model';\r\n\r\n@Component\r\nexport default class FileSizeMinSizeComponent extends Vue {\r\n @Prop() msg!: string;\r\n userInfoFormGroup: IFormGroup<UserInfo>;\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n  constructor() {\r\n  super();\r\n    this.userInfoFormGroup = this.formBuilder.formGroup(UserInfo) as IFormGroup<UserInfo>;\r\n   }\r\n}\r\n\r\n</script> \r\n","html":null,"model":null,"modelName":null,"json":{}},"extensions":{"notes":null,"component":"\r\n<template>\r\n\r\n<div class=\"container\">\r\n  <div class=\"col-lg-12\">\r\n    <h1>{{ msg }}</h1>\r\n      <form>\r\n           <div class=\"form-group\">\r\n    <label>Profile Picture</label>\r\n    <input\r\n      class=\"form-control\"\r\n      v-model=\"userInfoFormGroup.props.profilePicture\"\r\n      type=\"text\" />\r\n     \r\n          <small class=\"form-text text-muted\">This field only allow file extension as jpg or bmp only.<br/></small>\r\n    <div v-if=\"userInfoFormGroup.controls.profilePicture.errors\">\r\n     <small class=\"form-text text-danger\">{{userInfoFormGroup.controls.profilePicture.errors.extension.message}}<br/></small>\t\r\n    </div>\r\n  </div>\r\n             <button class=\"btn btn-primary\">Submit</button>\r\n       </form>\r\n</div>\r\n</div>\r\n\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { UserInfo } from './userInfo.model';\r\n\r\n@Component\r\nexport default class ExtensionExtensionsComponent extends Vue {\r\n @Prop() msg!: string;\r\n userInfoFormGroup: IFormGroup<UserInfo>;\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n  constructor() {\r\n  super();\r\n    this.userInfoFormGroup = this.formBuilder.formGroup(UserInfo) as IFormGroup<UserInfo>;\r\n   }\r\n}\r\n\r\n</script> \r\n","html":null,"model":null,"modelName":null,"json":{}},"maxFiles":{"notes":null,"component":"\r\n<template>\r\n\r\n<div class=\"container\">\r\n  <div class=\"col-lg-12\">\r\n    <h1>{{ msg }}</h1>\r\n      <form>\r\n           <div class=\"form-group\">\r\n    <label>Total Image Files</label>\r\n    <input\r\n      class=\"form-control\"\r\n      v-model=\"userInfoFormGroup.props.totalImageFiles\"\r\n      type=\"text\" />\r\n     \r\n          <small class=\"form-text text-muted\">This field allow upto 5 files.<br/></small>\r\n    <div v-if=\"userInfoFormGroup.controls.totalImageFiles.errors\">\r\n     <small class=\"form-text text-danger\">{{userInfoFormGroup.controls.totalImageFiles.errors.file.message}}<br/></small>\t\r\n    </div>\r\n  </div>\r\n             <button class=\"btn btn-primary\">Submit</button>\r\n       </form>\r\n</div>\r\n</div>\r\n\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { UserInfo } from './userInfo.model';\r\n\r\n@Component\r\nexport default class FileMaxFilesComponent extends Vue {\r\n @Prop() msg!: string;\r\n userInfoFormGroup: IFormGroup<UserInfo>;\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n  constructor() {\r\n  super();\r\n    this.userInfoFormGroup = this.formBuilder.formGroup(UserInfo) as IFormGroup<UserInfo>;\r\n   }\r\n}\r\n\r\n</script> \r\n","html":null,"model":null,"modelName":null,"json":{}},"minFiles":{"notes":null,"component":"\r\n<template>\r\n\r\n<div class=\"container\">\r\n  <div class=\"col-lg-12\">\r\n    <h1>{{ msg }}</h1>\r\n      <form>\r\n           <div class=\"form-group\">\r\n    <label>Total Document Files</label>\r\n    <input\r\n      class=\"form-control\"\r\n      v-model=\"userInfoFormGroup.props.totalDocumentFiles\"\r\n      type=\"text\" />\r\n     \r\n          <small class=\"form-text text-muted\">This field allow minmum 5 files.<br/></small>\r\n    <div v-if=\"userInfoFormGroup.controls.totalDocumentFiles.errors\">\r\n     <small class=\"form-text text-danger\">{{userInfoFormGroup.controls.totalDocumentFiles.errors.file.message}}<br/></small>\t\r\n    </div>\r\n  </div>\r\n             <button class=\"btn btn-primary\">Submit</button>\r\n       </form>\r\n</div>\r\n</div>\r\n\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { UserInfo } from './userInfo.model';\r\n\r\n@Component\r\nexport default class FileMinFilesComponent extends Vue {\r\n @Prop() msg!: string;\r\n userInfoFormGroup: IFormGroup<UserInfo>;\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n  constructor() {\r\n  super();\r\n    this.userInfoFormGroup = this.formBuilder.formGroup(UserInfo) as IFormGroup<UserInfo>;\r\n   }\r\n}\r\n\r\n</script> \r\n","html":null,"model":null,"modelName":null,"json":{}},"maxHeight":{"notes":null,"component":"\r\n<template>\r\n\r\n<div class=\"container\">\r\n  <div class=\"col-lg-12\">\r\n    <h1>{{ msg }}</h1>\r\n      <form>\r\n           <div class=\"form-group\">\r\n    <label>Profile Photo</label>\r\n    <input\r\n      class=\"form-control\"\r\n      v-model=\"userInfoFormGroup.props.profilePhoto\"\r\n      type=\"text\" />\r\n     \r\n        <div v-if=\"userInfoFormGroup.controls.profilePhoto.errors\">\r\n     <small class=\"form-text text-danger\">{{userInfoFormGroup.controls.profilePhoto.errors.image.message}}<br/></small>\t\r\n    </div>\r\n  </div>\r\n             <button class=\"btn btn-primary\">Submit</button>\r\n       </form>\r\n</div>\r\n</div>\r\n\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { UserInfo } from './userInfo.model';\r\n\r\n@Component\r\nexport default class ImageMaxHeightComponent extends Vue {\r\n @Prop() msg!: string;\r\n userInfoFormGroup: IFormGroup<UserInfo>;\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n  constructor() {\r\n  super();\r\n    this.userInfoFormGroup = this.formBuilder.formGroup(UserInfo) as IFormGroup<UserInfo>;\r\n   }\r\n}\r\n\r\n</script> \r\n","html":null,"model":null,"modelName":null,"json":{}},"maxWidth":{"notes":null,"component":"\r\n<template>\r\n\r\n<div class=\"container\">\r\n  <div class=\"col-lg-12\">\r\n    <h1>{{ msg }}</h1>\r\n      <form>\r\n           <div class=\"form-group\">\r\n    <label>Profile Photo</label>\r\n    <input\r\n      class=\"form-control\"\r\n      v-model=\"userInfoFormGroup.props.profilePhoto\"\r\n      type=\"text\" />\r\n     \r\n        <div v-if=\"userInfoFormGroup.controls.profilePhoto.errors\">\r\n     <small class=\"form-text text-danger\">{{userInfoFormGroup.controls.profilePhoto.errors.image.message}}<br/></small>\t\r\n    </div>\r\n  </div>\r\n             <button class=\"btn btn-primary\">Submit</button>\r\n       </form>\r\n</div>\r\n</div>\r\n\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { UserInfo } from './userInfo.model';\r\n\r\n@Component\r\nexport default class ImageMaxWidthComponent extends Vue {\r\n @Prop() msg!: string;\r\n userInfoFormGroup: IFormGroup<UserInfo>;\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n  constructor() {\r\n  super();\r\n    this.userInfoFormGroup = this.formBuilder.formGroup(UserInfo) as IFormGroup<UserInfo>;\r\n   }\r\n}\r\n\r\n</script> \r\n","html":null,"model":null,"modelName":null,"json":{}},"minHeight":{"notes":null,"component":"\r\n<template>\r\n\r\n<div class=\"container\">\r\n  <div class=\"col-lg-12\">\r\n    <h1>{{ msg }}</h1>\r\n      <form>\r\n           <div class=\"form-group\">\r\n    <label>Voter Id</label>\r\n    <input\r\n      class=\"form-control\"\r\n      v-model=\"userInfoFormGroup.props.voterId\"\r\n      type=\"text\" />\r\n     \r\n        <div v-if=\"userInfoFormGroup.controls.voterId.errors\">\r\n     <small class=\"form-text text-danger\">{{userInfoFormGroup.controls.voterId.errors.image.message}}<br/></small>\t\r\n    </div>\r\n  </div>\r\n             <button class=\"btn btn-primary\">Submit</button>\r\n       </form>\r\n</div>\r\n</div>\r\n\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { UserInfo } from './userInfo.model';\r\n\r\n@Component\r\nexport default class ImageMinHeightComponent extends Vue {\r\n @Prop() msg!: string;\r\n userInfoFormGroup: IFormGroup<UserInfo>;\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n  constructor() {\r\n  super();\r\n    this.userInfoFormGroup = this.formBuilder.formGroup(UserInfo) as IFormGroup<UserInfo>;\r\n   }\r\n}\r\n\r\n</script> \r\n","html":null,"model":null,"modelName":null,"json":{}},"minWidth":{"notes":null,"component":"\r\n<template>\r\n\r\n<div class=\"container\">\r\n  <div class=\"col-lg-12\">\r\n    <h1>{{ msg }}</h1>\r\n      <form>\r\n           <div class=\"form-group\">\r\n    <label>Voter Id</label>\r\n    <input\r\n      class=\"form-control\"\r\n      v-model=\"userInfoFormGroup.props.voterId\"\r\n      type=\"text\" />\r\n     \r\n        <div v-if=\"userInfoFormGroup.controls.voterId.errors\">\r\n     <small class=\"form-text text-danger\">{{userInfoFormGroup.controls.voterId.errors.image.message}}<br/></small>\t\r\n    </div>\r\n  </div>\r\n             <button class=\"btn btn-primary\">Submit</button>\r\n       </form>\r\n</div>\r\n</div>\r\n\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { UserInfo } from './userInfo.model';\r\n\r\n@Component\r\nexport default class ImageMinWidthComponent extends Vue {\r\n @Prop() msg!: string;\r\n userInfoFormGroup: IFormGroup<UserInfo>;\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n  constructor() {\r\n  super();\r\n    this.userInfoFormGroup = this.formBuilder.formGroup(UserInfo) as IFormGroup<UserInfo>;\r\n   }\r\n}\r\n\r\n</script> \r\n","html":null,"model":null,"modelName":null,"json":{}},"strict":{"notes":null,"component":"\r\n<template>\r\n\r\n<div class=\"container\">\r\n  <div class=\"col-lg-12\">\r\n    <h1>{{ msg }}</h1>\r\n      <form>\r\n           <div class=\"form-group\">\r\n    <label>Strict Active</label>\r\n    <input\r\n      class=\"form-control\"\r\n      v-model=\"userFormGroup.props.strictActive\"\r\n      type=\"text\" />\r\n     \r\n        <div v-if=\"userFormGroup.controls.strictActive.errors\">\r\n     <small class=\"form-text text-danger\">{{userFormGroup.controls.strictActive.errors.toBoolean.message}}<br/></small>\t\r\n    </div>\r\n  </div>\r\n             <button class=\"btn btn-primary\">Submit</button>\r\n       </form>\r\n</div>\r\n</div>\r\n\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component\r\nexport default class ToBooleanStrictComponent extends Vue {\r\n @Prop() msg!: string;\r\n userFormGroup: IFormGroup<User>;\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n  constructor() {\r\n  super();\r\n    this.userFormGroup = this.formBuilder.formGroup(User) as IFormGroup<User>;\r\n   }\r\n}\r\n\r\n</script> \r\n","html":null,"model":null,"modelName":null,"json":{}},"radix":{"notes":null,"component":"\r\n<template>\r\n\r\n<div class=\"container\">\r\n  <div class=\"col-lg-12\">\r\n    <h1>{{ msg }}</h1>\r\n      <form>\r\n           <div class=\"form-group\">\r\n    <label>Total Amount</label>\r\n    <input\r\n      class=\"form-control\"\r\n      v-model=\"userFormGroup.props.totalAmount\"\r\n      type=\"text\" />\r\n     \r\n        <div v-if=\"userFormGroup.controls.totalAmount.errors\">\r\n     <small class=\"form-text text-danger\">{{userFormGroup.controls.totalAmount.errors.toInt.message}}<br/></small>\t\r\n    </div>\r\n  </div>\r\n             <button class=\"btn btn-primary\">Submit</button>\r\n       </form>\r\n</div>\r\n</div>\r\n\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component\r\nexport default class ToIntRadixComponent extends Vue {\r\n @Prop() msg!: string;\r\n userFormGroup: IFormGroup<User>;\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n  constructor() {\r\n  super();\r\n    this.userFormGroup = this.formBuilder.formGroup(User) as IFormGroup<User>;\r\n   }\r\n}\r\n\r\n</script> \r\n","html":null,"model":null,"modelName":null,"json":{}}}