{"complete":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Name</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.name\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">It should ends with 't'<br/></small>\r\n       <div v-if=\"userFormGroup.controls.name.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.name.errors.endsWith.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Profession</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.profession\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">You can enter value which ends with 'r'<br/></small>\r\n          <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Profession' then you need to add 'name' input as 'Bharat'.<br/></small>\r\n          <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n       <div v-if=\"userFormGroup.controls.profession.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.profession.errors.endsWith.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Task Id</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.taskId\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">You can enter value which ends with '1'<br/></small>\r\n          <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Task Id' then you need to add 'name' input as 'Bharat'.<br/></small>\r\n          <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n       <div v-if=\"userFormGroup.controls.taskId.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.taskId.errors.endsWith.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Company</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.company\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">Input should endsWith `b`<br/></small>\r\n          <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n       <div v-if=\"userFormGroup.controls.company.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.company.errors.endsWith.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Skill</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.skill\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">custom message based on messageKey<br/></small>\r\n       <div v-if=\"userFormGroup.controls.skill.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.skill.errors.endsWith.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component\r\nexport default class EndsWithCompleteComponent extends Vue {\r\n userFormGroup: IFormGroup<User>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.userFormGroup = this.formBuilder.formGroup(User) as IFormGroup<User>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  endsWith, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class User {\r\n\r\n\t@endsWith({value:'t' }) \r\n\tname: string;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@endsWith({value:'r'  ,conditionalExpression:(x,y) => x.name == \"Bharat\"  }) \r\n\tprofession: string;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@endsWith({value:'1'  ,conditionalExpression:'x => x.name ==\"Bharat\"' }) \r\n\ttaskId: string;\r\n\t\r\n\t\r\n\t@endsWith({value:'b'  ,message:'{{0}} does not ends with `b`' }) \r\n\tcompany: string;\r\n\t\r\n\t\r\n\t@endsWith({value:'r'  ,messageKey:'endsWithMessageKey' }) \r\n\tskill: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"value":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Name</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.name\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">It should ends with 't'<br/></small>\r\n       <div v-if=\"userFormGroup.controls.name.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.name.errors.endsWith.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component\r\nexport default class EndsWithValueComponent extends Vue {\r\n userFormGroup: IFormGroup<User>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.userFormGroup = this.formBuilder.formGroup(User) as IFormGroup<User>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  endsWith, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class User {\r\n\r\n\t@endsWith({value:'t' }) \r\n\tname: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"conditionalExpression":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Name</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.name\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">It should ends with 't'<br/></small>\r\n       <div v-if=\"userFormGroup.controls.name.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.name.errors.endsWith.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Task Id</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.taskId\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">You can enter value which ends with '1'<br/></small>\r\n          <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Task Id' then you need to add 'name' input as 'Bharat'.<br/></small>\r\n          <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n       <div v-if=\"userFormGroup.controls.taskId.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.taskId.errors.endsWith.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n    <div class=\"form-group\">\r\n        <label>Profession</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.profession\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">You can enter value which ends with 'r'<br/></small>\r\n          <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Profession' then you need to add 'name' input as 'Bharat'.<br/></small>\r\n          <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n       <div v-if=\"userFormGroup.controls.profession.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.profession.errors.endsWith.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component\r\nexport default class EndsWithConditionalExpressionComponent extends Vue {\r\n userFormGroup: IFormGroup<User>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.userFormGroup = this.formBuilder.formGroup(User) as IFormGroup<User>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  endsWith, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class User {\r\n\r\n\t@endsWith({value:'t' }) \r\n\tname: string;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@endsWith({value:'1'  ,conditionalExpression:'x => x.name ==\"Bharat\"' }) \r\n\ttaskId: string;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@endsWith({value:'r'  ,conditionalExpression:(x,y) => x.name == \"Bharat\"  }) \r\n\tprofession: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"message":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Company</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.company\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">Input should endsWith `b`<br/></small>\r\n          <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n       <div v-if=\"userFormGroup.controls.company.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.company.errors.endsWith.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component\r\nexport default class EndsWithMessageComponent extends Vue {\r\n userFormGroup: IFormGroup<User>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.userFormGroup = this.formBuilder.formGroup(User) as IFormGroup<User>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  endsWith, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class User {\r\n\r\n\t@endsWith({value:'b'  ,message:'{{0}} does not ends with `b`' }) \r\n\tcompany: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"messageKey":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Skill</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.skill\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">custom message based on messageKey<br/></small>\r\n       <div v-if=\"userFormGroup.controls.skill.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.skill.errors.endsWith.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component\r\nexport default class EndsWithMessageKeyComponent extends Vue {\r\n userFormGroup: IFormGroup<User>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.userFormGroup = this.formBuilder.formGroup(User) as IFormGroup<User>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  endsWith, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class User {\r\n\r\n\t@endsWith({value:'r'  ,messageKey:'endsWithMessageKey' }) \r\n\tskill: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"add":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Name</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.name\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">You can enter value which ends with 't'<br/></small>\r\n       <div v-if=\"userFormGroup.controls.name.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.name.errors.endsWith.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component\r\nexport default class EndsWithAddComponent extends Vue {\r\n userFormGroup: IFormGroup<User>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.userFormGroup = this.formBuilder.formGroup(User) as IFormGroup<User>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  endsWith, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class User {\r\n\r\n\t@endsWith({value:'t' }) \r\n\tname: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}},"edit":{"notes":null,"component":"\r\n<template>\r\n  <div class=\"col-lg-12\">\r\n     <form>\r\n       <div class=\"form-group\">\r\n        <label>Name</label>\r\n        <input id=\"name\" class=\"form-control\" v-model=\"userFormGroup.props.name\" type=\"text\" name=\"name\" />\r\n           <small class=\"form-text text-muted\">You can enter value which ends with 't'<br/></small>\r\n       <div v-if=\"userFormGroup.controls.name.errors\">\r\n         <small class=\"form-text text-danger\">{{userFormGroup.controls.name.errors.endsWith.message}}<br/></small>\t\r\n       </div>\r\n      </div>  \r\n       <button class=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from 'vue-property-decorator';\r\nimport { required,RxFormBuilder,IFormGroup } from \"@rxweb/reactive-forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component\r\nexport default class EndsWithEditComponent extends Vue {\r\n userFormGroup: IFormGroup<User>;\r\n\r\n formBuilder: RxFormBuilder = new RxFormBuilder();\r\n\r\n  constructor() {\r\n    super();\r\n    this.userFormGroup = this.formBuilder.formGroup(User) as IFormGroup<User>;\r\n   }\r\n}\r\n</script> \r\n","html":null,"model":"import {  endsWith, } from   \"@rxweb/reactive-forms\"   \r\n\r\nexport class User {\r\n\r\n\t@endsWith({value:'t' }) \r\n\tname: string;\r\n\t\r\n\t\r\n}\r\n","modelName":null,"json":{}}}