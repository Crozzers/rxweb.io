{"rightSidebarLinks":[{"id":"example","title":"Example","subLink":[]}],"title":"Strongly Typed Reactive Form","description":"","validatorType":"template-driven","validationTypeTitle":"Template Driven Decorator","type":"tabs","gitDocPath":"https://github.com/rxweb/rxweb.io/edit/master/docs/angular/reactive-forms/how-to/stronglyType.md","category":"how-to","subCategory":null,"linkTitle":"stronglyType","tabArray":{},"innerHtml":null,"htmlContent":"<p class='showHideElement' >While developing complex forms then respective FormControls should be strongly typed with the model.</p>\r\n<p class='showHideElement' >That can be achieved through 'IFormGroup' interface.</p>\r\n<p class='showHideElement' >Let's see how it works.</p>\r\n<div class='row page-section' id= 'example'>\r\n<div class='col-lg-12'>\r\n<h2>Example<a title='Link to this heading' class='link-header' href='/how-to/stronglyType/template-driven/decorators#example'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >First, we create a User model and define the property of fullName.</p>\r\n<div component=\"app-code\" key=\"stronglyType-complete-model\"></div> \r\n<p class='showHideElement' >Now we create a FormGroup, but our FormGroup object type is IFormGroup<User>. IFormGroup is an interface which is inherited with the FormGroup class so that you can access the privileges of FormGroup as well as additional methods of RxFormGroup.</p>\r\n<div component=\"app-code\" key=\"stronglyType-complete-component\"></div> \r\n<p class='showHideElement' >Next, we need to write html code.</p>\r\n<div component=\"app-code\" key=\"stronglyType-complete-html\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-stronglyType-complete\"></div>\r\n</div></div>\r\n"}