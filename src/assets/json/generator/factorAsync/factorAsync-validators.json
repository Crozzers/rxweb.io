{"complete":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-factorAsync-complete-validator',\r\n    templateUrl: './factor-async-complete.component.html'\r\n})\r\nexport class FactorAsyncCompleteValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n            firstNumber:['',], \r\n            fifthNumber:['', RxwebValidators.factorAsync({fieldName:'firstNumber' })], \r\n            fourthNumber:['', RxwebValidators.factorAsync({dividend:50 })], \r\n            sixthNumber:['', RxwebValidators.factorAsync({dividend:30  ,message:'{{0}} is not a factor of 50' })], \r\n            seventhNumber:['', RxwebValidators.factorAsync({dividend:50  ,messageKey:'factorMessageKey' })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>First Number</label>\r\n      <input type=\"text\" formControlName=\"firstNumber\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.firstNumber.errors\">{{userFormGroup.controls.firstNumber.errors.factorAsync.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Fifth Number</label>\r\n      <input type=\"text\" formControlName=\"fifthNumber\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">To apply the validation of factor on 'Fifth Number' field<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.fifthNumber.errors\">{{userFormGroup.controls.fifthNumber.errors.factorAsync.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Fourth Number</label>\r\n      <input type=\"text\" formControlName=\"fourthNumber\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">you can enter only factors of 50<br/></small>\r\n      <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.fourthNumber.errors\">{{userFormGroup.controls.fourthNumber.errors.factorAsync.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Sixth Number</label>\r\n      <input type=\"text\" formControlName=\"sixthNumber\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">you can enter only factors of 30<br/></small>\r\n      <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.sixthNumber.errors\">{{userFormGroup.controls.sixthNumber.errors.factorAsync.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Seventh Number</label>\r\n      <input type=\"text\" formControlName=\"seventhNumber\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">custom message based on messageKey<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.seventhNumber.errors\">{{userFormGroup.controls.seventhNumber.errors.factorMessageKey.message}}<br/></small>\t\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"json":{}},"fieldNameExample":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.factorAsync({fieldName:'firstNumber' });\r\n","modelName":null,"json":{}},"fieldName":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-factorAsync-fieldName-validator',\r\n    templateUrl: './factor-async-field-name.component.html'\r\n})\r\nexport class FactorAsyncFieldNameValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n            firstNumber:['',], \r\n            fifthNumber:['', RxwebValidators.factorAsync({fieldName:'firstNumber' })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>First Number</label>\r\n      <input type=\"text\" formControlName=\"firstNumber\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.firstNumber.errors\">{{userFormGroup.controls.firstNumber.errors.factorAsync.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Fifth Number</label>\r\n      <input type=\"text\" formControlName=\"fifthNumber\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">To apply the validation of factor on 'Fifth Number' field<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.fifthNumber.errors\">{{userFormGroup.controls.fifthNumber.errors.factorAsync.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"json":{}},"dividendExample":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.factorAsync({dividend:50 });\r\n","modelName":null,"json":{}},"dividend":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-factorAsync-dividend-validator',\r\n    templateUrl: './factor-async-dividend.component.html'\r\n})\r\nexport class FactorAsyncDividendValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n            fourthNumber:['', RxwebValidators.factorAsync({dividend:50 })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Fourth Number</label>\r\n      <input type=\"text\" formControlName=\"fourthNumber\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">you can enter only factors of 50<br/></small>\r\n      <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.fourthNumber.errors\">{{userFormGroup.controls.fourthNumber.errors.factorAsync.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"json":{}},"messageExample":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.factorAsync({dividend:30  ,message:'{{0}} is not a factor of 50' });\r\n","modelName":null,"json":{}},"message":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-factorAsync-message-validator',\r\n    templateUrl: './factor-async-message.component.html'\r\n})\r\nexport class FactorAsyncMessageValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n            sixthNumber:['', RxwebValidators.factorAsync({dividend:30  ,message:'{{0}} is not a factor of 50' })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Sixth Number</label>\r\n      <input type=\"text\" formControlName=\"sixthNumber\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">you can enter only factors of 30<br/></small>\r\n      <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.sixthNumber.errors\">{{userFormGroup.controls.sixthNumber.errors.factorAsync.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"json":{}},"messageKeyExample":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.factorAsync({dividend:50  ,messageKey:'factorMessageKey' });\r\n","modelName":null,"json":{}},"messageKey":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-factorAsync-messageKey-validator',\r\n    templateUrl: './factor-async-message-key.component.html'\r\n})\r\nexport class FactorAsyncMessageKeyValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n            seventhNumber:['', RxwebValidators.factorAsync({dividend:50  ,messageKey:'factorMessageKey' })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Seventh Number</label>\r\n      <input type=\"text\" formControlName=\"seventhNumber\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">custom message based on messageKey<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.seventhNumber.errors\">{{userFormGroup.controls.seventhNumber.errors.factorMessageKey.message}}<br/></small>\t\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"json":{}},"dynamic":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormBuilderConfiguration,RxFormBuilder} from '@rxweb/reactive-form-validators';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n    selector: 'app-factorAsync-dynamic-validator',\r\n    templateUrl: './factor-async-dynamic.component.html'\r\n})\r\nexport class FactorAsyncDynamicValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: RxFormBuilder , private http: HttpClient )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n\t\tlet formBuilderConfiguration = new FormBuilderConfiguration();\r\n\t\tthis.http.get('assets/examples/reactive-form-validators/validators/factorAsync/dynamic/dynamic.json?v='+environment.appVersion).subscribe(dynamic => {\r\n\t\t\tformBuilderConfiguration.dynamicValidation = JSON.parse(JSON.stringify(dynamic));\r\n\t\t\tvar user = { firstNumber:'', fifthNumber:'', fourthNumber:'', sixthNumber:'', seventhNumber:'',  }\r\n\t\t\tthis.userFormGroup = this.formBuilder.group(user,formBuilderConfiguration);\r\n\t\t})\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  *ngIf=\"userFormGroup\"  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>First Number</label>\r\n      <input type=\"text\" formControlName=\"firstNumber\" class=\"form-control\"   />\r\n      <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.firstNumber.errors\">{{userFormGroup.controls.firstNumber.errors.factorAsync.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Fifth Number</label>\r\n      <input type=\"text\" formControlName=\"fifthNumber\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">To apply the validation of factor on 'Fifth Number' field<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.fifthNumber.errors\">{{userFormGroup.controls.fifthNumber.errors.factorAsync.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Fourth Number</label>\r\n      <input type=\"text\" formControlName=\"fourthNumber\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">you can enter only factors of 50<br/></small>\r\n      <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.fourthNumber.errors\">{{userFormGroup.controls.fourthNumber.errors.factorAsync.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Sixth Number</label>\r\n      <input type=\"text\" formControlName=\"sixthNumber\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">you can enter only factors of 30<br/></small>\r\n      <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.sixthNumber.errors\">{{userFormGroup.controls.sixthNumber.errors.factorAsync.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Seventh Number</label>\r\n      <input type=\"text\" formControlName=\"seventhNumber\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">custom message based on messageKey<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.seventhNumber.errors\">{{userFormGroup.controls.seventhNumber.errors.factorMessageKey.message}}<br/></small>\t\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"json":{"dynamic.json":"{\"firstNumber\":{},\"fifthNumber\":{\"factorAsync\":{\"fieldName\":\"firstNumber\"}},\"fourthNumber\":{\"factorAsync\":{\"dividend\":\"50\"}},\"sixthNumber\":{\"factorAsync\":{\"dividend\":\"30\",\"message\":\"{{0}} is not a factor of 50\"}},\"seventhNumber\":{\"factorAsync\":{\"dividend\":\"50\",\"messageKey\":\"factorMessageKey\"}}}"}},"add":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-factorAsync-add-validator',\r\n    templateUrl: './factor-async-add.component.html'\r\n})\r\nexport class FactorAsyncAddValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n            firstNumber:['', RxwebValidators.factorAsync({dividend:50 })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>First Number</label>\r\n      <input type=\"text\" formControlName=\"firstNumber\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">You can only enter factors of 50<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.firstNumber.errors\">{{userFormGroup.controls.firstNumber.errors.factorAsync.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"json":{}}}