{"complete":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-factorAsync-complete-template-driven-validation-directives',\r\n    templateUrl: './factor-async-complete.component.html'\r\n})\r\nexport class FactorAsyncCompleteTemplateDrivenValidationDirectivesComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\" [rxwebForm]=\"userForm\" [model]=\"user\">\r\n    <div class=\"form-group\">\r\n      <label>First Number</label>\r\n\t    <input type=\"text\" name=\"firstNumber\" [(ngModel)]=\"user.firstNumber\"  class=\"form-control\" />\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.firstNumber?.errors\">{{userForm.controls?.firstNumber?.errors?.factorAsync.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Fifth Number</label>\r\n\t    <input type=\"text\" name=\"fifthNumber\" [(ngModel)]=\"user.fifthNumber\"  class=\"form-control\" [rxfactorAsync]=\"{'fieldName':'firstNumber'}\"/>\r\n\r\n      <small class=\"form-text text-muted\">To apply the validation of factor on 'Fifth Number' field<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.fifthNumber?.errors\">{{userForm.controls?.fifthNumber?.errors?.factorAsync.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Fourth Number</label>\r\n\t    <input type=\"text\" name=\"fourthNumber\" [(ngModel)]=\"user.fourthNumber\"  class=\"form-control\" [rxfactorAsync]=\"{'dividend':50}\"/>\r\n\r\n      <small class=\"form-text text-muted\">you can enter only factors of 50<br/></small>\r\n      <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.fourthNumber?.errors\">{{userForm.controls?.fourthNumber?.errors?.factorAsync.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Sixth Number</label>\r\n\t    <input type=\"text\" name=\"sixthNumber\" [(ngModel)]=\"user.sixthNumber\"  class=\"form-control\" [rxfactorAsync]=\"{'dividend':30,'message':'Sixth Number is not a factor of 50'}\"/>\r\n\r\n      <small class=\"form-text text-muted\">you can enter only factors of 30<br/></small>\r\n      <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.sixthNumber?.errors\">{{userForm.controls?.sixthNumber?.errors?.factorAsync.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Seventh Number</label>\r\n\t    <input type=\"text\" name=\"seventhNumber\" [(ngModel)]=\"user.seventhNumber\"  class=\"form-control\" [rxfactorAsync]=\"{'dividend':50,'messageKey':'factorMessageKey'}\"/>\r\n\r\n      <small class=\"form-text text-muted\">custom message based on messageKey<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.seventhNumber?.errors\">{{userForm.controls?.seventhNumber?.errors?.factorAsync.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class User {\r\n\r\n\tfirstNumber: number;\r\n\r\n\tfifthNumber: number;\r\n\t\r\n\t\r\n\tfourthNumber: number;\r\n\t\r\n\t\r\n\tsixthNumber: number;\r\n\t\r\n\t\r\n\tseventhNumber: number;\r\n\t\r\n\t\r\n}\r\n","modelName":"user.model.ts","json":{}},"fieldNameExample":{"notes":null,"component":null,"html":null,"model":"[factorAsync]=\"{'fieldName':'firstNumber'}\"","modelName":null,"json":{}},"fieldName":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-factorAsync-fieldName-template-driven-validation-directives',\r\n    templateUrl: './factor-async-field-name.component.html'\r\n})\r\nexport class FactorAsyncFieldNameTemplateDrivenValidationDirectivesComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\" [rxwebForm]=\"userForm\" [model]=\"user\">\r\n    <div class=\"form-group\">\r\n      <label>First Number</label>\r\n\t    <input type=\"text\" name=\"firstNumber\" [(ngModel)]=\"user.firstNumber\"  class=\"form-control\" />\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.firstNumber?.errors\">{{userForm.controls?.firstNumber?.errors?.factorAsync.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Fifth Number</label>\r\n\t    <input type=\"text\" name=\"fifthNumber\" [(ngModel)]=\"user.fifthNumber\"  class=\"form-control\" [rxfactorAsync]=\"{'fieldName':'firstNumber'}\"/>\r\n\r\n      <small class=\"form-text text-muted\">To apply the validation of factor on 'Fifth Number' field<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.fifthNumber?.errors\">{{userForm.controls?.fifthNumber?.errors?.factorAsync.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class User {\r\n\r\n\tfirstNumber: number;\r\n\r\n\tfifthNumber: number;\r\n\t\r\n\t\r\n}\r\n","modelName":"user.model.ts","json":{}},"dividendExample":{"notes":null,"component":null,"html":null,"model":"[factorAsync]=\"{'dividend':50}\"","modelName":null,"json":{}},"dividend":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-factorAsync-dividend-template-driven-validation-directives',\r\n    templateUrl: './factor-async-dividend.component.html'\r\n})\r\nexport class FactorAsyncDividendTemplateDrivenValidationDirectivesComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\" [rxwebForm]=\"userForm\" [model]=\"user\">\r\n    <div class=\"form-group\">\r\n      <label>Fourth Number</label>\r\n\t    <input type=\"text\" name=\"fourthNumber\" [(ngModel)]=\"user.fourthNumber\"  class=\"form-control\" [rxfactorAsync]=\"{'dividend':50}\"/>\r\n\r\n      <small class=\"form-text text-muted\">you can enter only factors of 50<br/></small>\r\n      <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.fourthNumber?.errors\">{{userForm.controls?.fourthNumber?.errors?.factorAsync.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class User {\r\n\r\n\tfourthNumber: number;\r\n\t\r\n\t\r\n}\r\n","modelName":"user.model.ts","json":{}},"messageExample":{"notes":null,"component":null,"html":null,"model":"[factorAsync]=\"{'dividend':30,'message':'Sixth Number is not a factor of 50'}\"","modelName":null,"json":{}},"message":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-factorAsync-message-template-driven-validation-directives',\r\n    templateUrl: './factor-async-message.component.html'\r\n})\r\nexport class FactorAsyncMessageTemplateDrivenValidationDirectivesComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\" [rxwebForm]=\"userForm\" [model]=\"user\">\r\n    <div class=\"form-group\">\r\n      <label>Sixth Number</label>\r\n\t    <input type=\"text\" name=\"sixthNumber\" [(ngModel)]=\"user.sixthNumber\"  class=\"form-control\" [rxfactorAsync]=\"{'dividend':30,'message':'Sixth Number is not a factor of 50'}\"/>\r\n\r\n      <small class=\"form-text text-muted\">you can enter only factors of 30<br/></small>\r\n      <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.sixthNumber?.errors\">{{userForm.controls?.sixthNumber?.errors?.factorAsync.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class User {\r\n\r\n\tsixthNumber: number;\r\n\t\r\n\t\r\n}\r\n","modelName":"user.model.ts","json":{}},"messageKeyExample":{"notes":null,"component":null,"html":null,"model":"[factorAsync]=\"{'dividend':50,'messageKey':'factorMessageKey'}\"","modelName":null,"json":{}},"messageKey":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-factorAsync-messageKey-template-driven-validation-directives',\r\n    templateUrl: './factor-async-message-key.component.html'\r\n})\r\nexport class FactorAsyncMessageKeyTemplateDrivenValidationDirectivesComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\" [rxwebForm]=\"userForm\" [model]=\"user\">\r\n    <div class=\"form-group\">\r\n      <label>Seventh Number</label>\r\n\t    <input type=\"text\" name=\"seventhNumber\" [(ngModel)]=\"user.seventhNumber\"  class=\"form-control\" [rxfactorAsync]=\"{'dividend':50,'messageKey':'factorMessageKey'}\"/>\r\n\r\n      <small class=\"form-text text-muted\">custom message based on messageKey<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.seventhNumber?.errors\">{{userForm.controls?.seventhNumber?.errors?.factorAsync.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class User {\r\n\r\n\tseventhNumber: number;\r\n\t\r\n\t\r\n}\r\n","modelName":"user.model.ts","json":{}},"add":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-factorAsync-add-template-driven-validation-directives',\r\n    templateUrl: './factor-async-add.component.html'\r\n})\r\nexport class FactorAsyncAddTemplateDrivenValidationDirectivesComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\" [rxwebForm]=\"userForm\" [model]=\"user\">\r\n    <div class=\"form-group\">\r\n      <label>First Number</label>\r\n\t    <input type=\"text\" name=\"firstNumber\" [(ngModel)]=\"user.firstNumber\"  class=\"form-control\" [rxfactorAsync]=\"{'dividend':50}\"/>\r\n\r\n      <small class=\"form-text text-muted\">You can only enter factors of 50<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.firstNumber?.errors\">{{userForm.controls?.firstNumber?.errors?.factorAsync.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class User {\r\n\r\n\tfirstNumber: Number;\r\n\t\r\n\t\r\n}\r\n","modelName":"user.model.ts","json":{}}}