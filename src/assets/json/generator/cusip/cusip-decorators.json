{"complete":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { CompanyInfo } from './company-info.model';\r\n\r\n@Component({\r\n    selector: 'app-cusip-complete',\r\n    templateUrl: './cusip-complete.component.html'\r\n})\r\nexport class CusipCompleteComponent implements OnInit {\r\n    companyInfoFormGroup: FormGroup\r\n\t\t\t\tcompanyNames = [ \"Google\", \"Microsoft\",];\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let companyInfo = new CompanyInfo();\r\n        this.companyInfoFormGroup = this.formBuilder.formGroup(companyInfo);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"companyInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Company Name</label>\r\n      <select formControlName=\"companyName\" class=\"form-control\">\r\n\t\t<option [value]=\"item\" *ngFor=\"let item of companyNames\">{{item}}</option>\r\n      </select>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"companyInfoFormGroup.controls.companyName.errors\">{{companyInfoFormGroup.controls.companyName.errors.cusip.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Oracle Corporation Cusip Code</label>\r\n      <input type=\"text\" formControlName=\"oracleCorporationCusipCode\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">You must enter a 9-character alphanumeric cusic code.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"companyInfoFormGroup.controls.oracleCorporationCusipCode.errors\">{{companyInfoFormGroup.controls.oracleCorporationCusipCode.errors.cusip.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Google Inc. Cusip Code</label>\r\n      <input type=\"text\" formControlName=\"googleIncCusipCode\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Google Inc. Cusip Code' then you need to add 'Company Name' input as 'Google'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"companyInfoFormGroup.controls.googleIncCusipCode.errors\">{{companyInfoFormGroup.controls.googleIncCusipCode.errors.cusip.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Microsoft Corporation Cusip Code</label>\r\n      <input type=\"text\" formControlName=\"microsoftCorporationCusipCode\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Microsoft Corporation Cusip Code' then you need to add 'Company Name' input as 'Microsoft'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"companyInfoFormGroup.controls.microsoftCorporationCusipCode.errors\">{{companyInfoFormGroup.controls.microsoftCorporationCusipCode.errors.cusip.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Apple Inc Cusip Code</label>\r\n      <input type=\"text\" formControlName=\"appleIncCusipCode\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">enter 9-character alphanumeric cusip Code only<br/></small>\r\n      <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"companyInfoFormGroup.controls.appleIncCusipCode.errors\">{{companyInfoFormGroup.controls.appleIncCusipCode.errors.cusip.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!companyInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  cusip,prop, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class CompanyInfo {\r\n\r\n\t@prop()\r\n\tcompanyName: string;\r\n\r\n\t@cusip() \r\n\toracleCorporationCusipCode: string;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@cusip({conditionalExpression:(x,y) => x.companyName == \"Google\"  }) \r\n\tgoogleIncCusipCode: string;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@cusip({conditionalExpression:'x => x.companyName ==\"Microsoft\"' }) \r\n\tmicrosoftCorporationCusipCode: string;\r\n\t\r\n\t\r\n\t@cusip({message:'{{0}} is not a valid cusip Code' }) \r\n\tappleIncCusipCode: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"company-info.model.ts","json":{}},"conditionalExpressionExampleFunction":{"notes":null,"component":null,"html":null,"model":"@cusip({conditionalExpression:(x,y) => x.companyName == \"Google\"  }) \r\ngoogleIncCusipCode: string;\r\n","modelName":null,"json":{}},"conditionalExpression":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { CompanyInfo } from './company-info.model';\r\n\r\n@Component({\r\n    selector: 'app-cusip-conditionalExpression',\r\n    templateUrl: './cusip-conditional-expression.component.html'\r\n})\r\nexport class CusipConditionalExpressionComponent implements OnInit {\r\n    companyInfoFormGroup: FormGroup\r\n\t\t\t\tcompanyNames = [ \"Google\", \"Microsoft\",];\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let companyInfo = new CompanyInfo();\r\n        this.companyInfoFormGroup = this.formBuilder.formGroup(companyInfo);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"companyInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Company Name</label>\r\n      <select formControlName=\"companyName\" class=\"form-control\">\r\n\t\t<option [value]=\"item\" *ngFor=\"let item of companyNames\">{{item}}</option>\r\n      </select>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"companyInfoFormGroup.controls.companyName.errors\">{{companyInfoFormGroup.controls.companyName.errors.cusip.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Microsoft Corporation Cusip Code</label>\r\n      <input type=\"text\" formControlName=\"microsoftCorporationCusipCode\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Microsoft Corporation Cusip Code' then you need to add 'Company Name' input as 'Microsoft'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"companyInfoFormGroup.controls.microsoftCorporationCusipCode.errors\">{{companyInfoFormGroup.controls.microsoftCorporationCusipCode.errors.cusip.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Google Inc. Cusip Code</label>\r\n      <input type=\"text\" formControlName=\"googleIncCusipCode\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Google Inc. Cusip Code' then you need to add 'Company Name' input as 'Google'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"companyInfoFormGroup.controls.googleIncCusipCode.errors\">{{companyInfoFormGroup.controls.googleIncCusipCode.errors.cusip.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!companyInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  cusip,prop, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class CompanyInfo {\r\n\r\n\t@prop()\r\n\tcompanyName: string;\r\n\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@cusip({conditionalExpression:'x => x.companyName ==\"Microsoft\"' }) \r\n\tmicrosoftCorporationCusipCode: string;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@cusip({conditionalExpression:(x,y) => x.companyName == \"Google\"  }) \r\n\tgoogleIncCusipCode: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"company-info.model.ts","json":{}},"conditionalExpressionExampleString":{"notes":null,"component":null,"html":null,"model":"@cusip({conditionalExpression:'x => x.companyName ==\"Microsoft\"' }) \r\nmicrosoftCorporationCusipCode: string;\r\n","modelName":null,"json":{}},"messageExample":{"notes":null,"component":null,"html":null,"model":"@cusip({message:'{{0}} is not a valid cusip Code' }) \r\nappleIncCusipCode: string;\r\n","modelName":null,"json":{}},"message":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { CompanyInfo } from './company-info.model';\r\n\r\n@Component({\r\n    selector: 'app-cusip-message',\r\n    templateUrl: './cusip-message.component.html'\r\n})\r\nexport class CusipMessageComponent implements OnInit {\r\n    companyInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let companyInfo = new CompanyInfo();\r\n        this.companyInfoFormGroup = this.formBuilder.formGroup(companyInfo);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"companyInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Apple Inc Cusip Code</label>\r\n      <input type=\"text\" formControlName=\"appleIncCusipCode\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">enter 9-character alphanumeric cusip Code only<br/></small>\r\n      <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"companyInfoFormGroup.controls.appleIncCusipCode.errors\">{{companyInfoFormGroup.controls.appleIncCusipCode.errors.cusip.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!companyInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  cusip, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class CompanyInfo {\r\n\r\n\t@cusip({message:'{{0}} is not a valid cusip Code' }) \r\n\tappleIncCusipCode: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"company-info.model.ts","json":{}},"dynamic":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\nimport { FormBuilderConfiguration,} from '@rxweb/reactive-form-validators';\r\n\r\nimport { CompanyInfo } from './company-info.model';\r\n\r\n@Component({\r\n    selector: 'app-cusip-dynamic',\r\n    templateUrl: './cusip-dynamic.component.html'\r\n})\r\nexport class CusipDynamicComponent implements OnInit {\r\n    companyInfoFormGroup: FormGroup\r\n\t\t\t\tcompanyNames = [ \"Google\", \"Microsoft\",];\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder,private http: HttpClient    ) { }\r\n\r\n    ngOnInit() {\r\n        let companyInfo = new CompanyInfo();\r\n        let formBuilderConfiguration = new FormBuilderConfiguration();\r\n\t\tthis.http.get('assets/examples/reactive-form-validators/decorators/cusip/dynamic/dynamic.json?v=' + environment.appVersion).subscribe(dynamic => {\r\n            formBuilderConfiguration.dynamicValidation = JSON.parse(JSON.stringify(dynamic));\r\n\t\t\tthis.companyInfoFormGroup = this.formBuilder.formGroup(companyInfo,formBuilderConfiguration);\r\n        })\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  *ngIf=\"companyInfoFormGroup\"  [formGroup]=\"companyInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Company Name</label>\r\n      <select formControlName=\"companyName\" class=\"form-control\">\r\n\t\t<option [value]=\"item\" *ngFor=\"let item of companyNames\">{{item}}</option>\r\n      </select>\r\n      <small class=\"form-text text-danger\" *ngIf=\"companyInfoFormGroup.controls.companyName.errors\">{{companyInfoFormGroup.controls.companyName.errors.cusip.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Oracle Corporation Cusip Code</label>\r\n      <input type=\"text\" formControlName=\"oracleCorporationCusipCode\" class=\"form-control\"   />\r\n      <small class=\"form-text text-muted\">You must enter a 9-character alphanumeric cusic code.<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"companyInfoFormGroup.controls.oracleCorporationCusipCode.errors\">{{companyInfoFormGroup.controls.oracleCorporationCusipCode.errors.cusip.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Microsoft Corporation Cusip Code</label>\r\n      <input type=\"text\" formControlName=\"microsoftCorporationCusipCode\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Microsoft Corporation Cusip Code' then you need to add 'Company Name' input as 'Microsoft'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"companyInfoFormGroup.controls.microsoftCorporationCusipCode.errors\">{{companyInfoFormGroup.controls.microsoftCorporationCusipCode.errors.cusip.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Apple Inc Cusip Code</label>\r\n      <input type=\"text\" formControlName=\"appleIncCusipCode\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">enter 9-character alphanumeric cusip Code only<br/></small>\r\n      <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"companyInfoFormGroup.controls.appleIncCusipCode.errors\">{{companyInfoFormGroup.controls.appleIncCusipCode.errors.cusip.message}}<br/></small>\r\n    </div>\r\n    <button [disabled]=\"!companyInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  cusip,prop, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class CompanyInfo {\r\n\r\n\t@prop()\r\n\tcompanyName: string;\r\n\r\n\t@prop()\r\n\toracleCorporationCusipCode: string;\r\n\r\n\t@prop()\r\n\tmicrosoftCorporationCusipCode: string;\r\n\r\n\t@prop()\r\n\tappleIncCusipCode: string;\r\n\r\n}\r\n","modelName":"company-info.model.ts","json":{"dynamic.json":"{\"companyName\":{},\"oracleCorporationCusipCode\":{\"cusip\":true},\"microsoftCorporationCusipCode\":{\"cusip\":{\"conditionalExpression\":\"x => x.companyName ==\\\"Microsoft\\\"\"}},\"appleIncCusipCode\":{\"cusip\":{\"message\":\"{{0}} is not a valid cusip Code\"}}}"}},"add":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { CompanyInfo } from './company-info.model';\r\n\r\n@Component({\r\n    selector: 'app-cusip-add',\r\n    templateUrl: './cusip-add.component.html'\r\n})\r\nexport class CusipAddComponent implements OnInit {\r\n    companyInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let companyInfo = new CompanyInfo();\r\n        this.companyInfoFormGroup = this.formBuilder.formGroup(companyInfo);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"companyInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Oracle Corporation Cusip Code</label>\r\n      <input type=\"text\" formControlName=\"oracleCorporationCusipCode\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">You must enter a valid cusip Code only<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"companyInfoFormGroup.controls.oracleCorporationCusipCode.errors\">{{companyInfoFormGroup.controls.oracleCorporationCusipCode.errors.cusip.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!companyInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  cusip, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class CompanyInfo {\r\n\r\n\t@cusip() \r\n\toracleCorporationCusipCode: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"company-info.model.ts","json":{}},"edit":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { CompanyInfo } from './company-info.model';\r\n\r\n@Component({\r\n    selector: 'app-cusip-edit',\r\n    templateUrl: './cusip-edit.component.html'\r\n})\r\nexport class CusipEditComponent implements OnInit {\r\n    companyInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder,private http: HttpClient    ) { }\r\n\r\n    ngOnInit() {\r\n        this.http.get('assets/examples/reactive-form-validators/decorators/cusip/edit/company-info-data.json?v=' + environment.appVersion).subscribe(companyInfo => {\r\n            this.companyInfoFormGroup = this.formBuilder.formGroup<CompanyInfo>(CompanyInfo,companyInfo);\r\n        })\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  *ngIf=\"companyInfoFormGroup\"  [formGroup]=\"companyInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Oracle Corporation Cusip Code</label>\r\n      <input type=\"text\" formControlName=\"oracleCorporationCusipCode\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">You must enter a valid cusip Code only<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"companyInfoFormGroup.controls.oracleCorporationCusipCode.errors\">{{companyInfoFormGroup.controls.oracleCorporationCusipCode.errors.cusip.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!companyInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  cusip, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class CompanyInfo {\r\n\r\n\t@cusip() \r\n\toracleCorporationCusipCode: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"company-info.model.ts","json":{"company-info-data.json":"{\"oracleCorporationCusipCode\":\"594918104\"}"}}}