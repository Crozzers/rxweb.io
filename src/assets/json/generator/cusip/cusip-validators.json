{"complete":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-cusip-complete-validator',\r\n    templateUrl: './cusip-complete.component.html'\r\n})\r\nexport class CusipCompleteValidatorComponent implements OnInit {\r\n    companyInfoFormGroup: FormGroup\r\n\r\n\t\t\t\tcompanyNames = [ \"Google\", \"Microsoft\",];\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.companyInfoFormGroup = this.formBuilder.group({\r\n            companyName:['',], \r\n            oracleCorporationCusipCode:['', RxwebValidators.cusip()], \r\n            googleIncCusipCode:['', RxwebValidators.cusip({conditionalExpression:(x,y) => x.companyName == \"Google\"  })], \r\n            microsoftCorporationCusipCode:['', RxwebValidators.cusip({conditionalExpression:'x => x.companyName ==\"Microsoft\"' })], \r\n            appleIncCusipCode:['', RxwebValidators.cusip({message:'{{0}} is not a valid cusip Code' })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"companyInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Company Name</label>\r\n      <select formControlName=\"companyName\" class=\"form-control\">\r\n\t\t<option [value]=\"item\" *ngFor=\"let item of companyNames\">{{item}}</option>\r\n      </select>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"companyInfoFormGroup.controls.companyName.errors\">{{companyInfoFormGroup.controls.companyName.errors.cusip.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Oracle Corporation Cusip Code</label>\r\n      <input type=\"text\" formControlName=\"oracleCorporationCusipCode\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">You must enter a 9-character alphanumeric cusic code.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"companyInfoFormGroup.controls.oracleCorporationCusipCode.errors\">{{companyInfoFormGroup.controls.oracleCorporationCusipCode.errors.cusip.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Google Inc. Cusip Code</label>\r\n      <input type=\"text\" formControlName=\"googleIncCusipCode\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Google Inc. Cusip Code' then you need to add 'Company Name' input as 'Google'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"companyInfoFormGroup.controls.googleIncCusipCode.errors\">{{companyInfoFormGroup.controls.googleIncCusipCode.errors.cusip.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Microsoft Corporation Cusip Code</label>\r\n      <input type=\"text\" formControlName=\"microsoftCorporationCusipCode\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Microsoft Corporation Cusip Code' then you need to add 'Company Name' input as 'Microsoft'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"companyInfoFormGroup.controls.microsoftCorporationCusipCode.errors\">{{companyInfoFormGroup.controls.microsoftCorporationCusipCode.errors.cusip.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Apple Inc Cusip Code</label>\r\n      <input type=\"text\" formControlName=\"appleIncCusipCode\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">enter 9-character alphanumeric cusip Code only<br/></small>\r\n      <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"companyInfoFormGroup.controls.appleIncCusipCode.errors\">{{companyInfoFormGroup.controls.appleIncCusipCode.errors.cusip.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!companyInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"json":{}},"conditionalExpressionExampleFunction":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.cusip({conditionalExpression:(x,y) => x.companyName == \"Google\"  });\r\n","modelName":null,"json":{}},"conditionalExpression":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-cusip-conditionalExpression-validator',\r\n    templateUrl: './cusip-conditional-expression.component.html'\r\n})\r\nexport class CusipConditionalExpressionValidatorComponent implements OnInit {\r\n    companyInfoFormGroup: FormGroup\r\n\r\n\t\t\t\tcompanyNames = [ \"Google\", \"Microsoft\",];\r\n\t\r\n\t\r\n\t\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.companyInfoFormGroup = this.formBuilder.group({\r\n            companyName:['',], \r\n            microsoftCorporationCusipCode:['', RxwebValidators.cusip({conditionalExpression:'x => x.companyName ==\"Microsoft\"' })], \r\n            googleIncCusipCode:['', RxwebValidators.cusip({conditionalExpression:(x,y) => x.companyName == \"Google\"  })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"companyInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Company Name</label>\r\n      <select formControlName=\"companyName\" class=\"form-control\">\r\n\t\t<option [value]=\"item\" *ngFor=\"let item of companyNames\">{{item}}</option>\r\n      </select>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"companyInfoFormGroup.controls.companyName.errors\">{{companyInfoFormGroup.controls.companyName.errors.cusip.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Microsoft Corporation Cusip Code</label>\r\n      <input type=\"text\" formControlName=\"microsoftCorporationCusipCode\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Microsoft Corporation Cusip Code' then you need to add 'Company Name' input as 'Microsoft'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"companyInfoFormGroup.controls.microsoftCorporationCusipCode.errors\">{{companyInfoFormGroup.controls.microsoftCorporationCusipCode.errors.cusip.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Google Inc. Cusip Code</label>\r\n      <input type=\"text\" formControlName=\"googleIncCusipCode\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Google Inc. Cusip Code' then you need to add 'Company Name' input as 'Google'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"companyInfoFormGroup.controls.googleIncCusipCode.errors\">{{companyInfoFormGroup.controls.googleIncCusipCode.errors.cusip.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!companyInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"json":{}},"conditionalExpressionExampleString":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.cusip({conditionalExpression:'x => x.companyName ==\"Microsoft\"' });\r\n","modelName":null,"json":{}},"messageExample":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.cusip({message:'{{0}} is not a valid cusip Code' });\r\n","modelName":null,"json":{}},"message":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-cusip-message-validator',\r\n    templateUrl: './cusip-message.component.html'\r\n})\r\nexport class CusipMessageValidatorComponent implements OnInit {\r\n    companyInfoFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.companyInfoFormGroup = this.formBuilder.group({\r\n            appleIncCusipCode:['', RxwebValidators.cusip({message:'{{0}} is not a valid cusip Code' })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"companyInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Apple Inc Cusip Code</label>\r\n      <input type=\"text\" formControlName=\"appleIncCusipCode\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">enter 9-character alphanumeric cusip Code only<br/></small>\r\n      <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"companyInfoFormGroup.controls.appleIncCusipCode.errors\">{{companyInfoFormGroup.controls.appleIncCusipCode.errors.cusip.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!companyInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"json":{}},"dynamic":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormBuilderConfiguration,RxFormBuilder} from '@rxweb/reactive-form-validators';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n    selector: 'app-cusip-dynamic-validator',\r\n    templateUrl: './cusip-dynamic.component.html'\r\n})\r\nexport class CusipDynamicValidatorComponent implements OnInit {\r\n    companyInfoFormGroup: FormGroup\r\n\r\n\t\t\t\tcompanyNames = [ \"Google\", \"Microsoft\",];\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\tconstructor(\r\n        private formBuilder: RxFormBuilder , private http: HttpClient )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n\t\tlet formBuilderConfiguration = new FormBuilderConfiguration();\r\n\t\tthis.http.get('assets/examples/reactive-form-validators/validators/cusip/dynamic/dynamic.json?v='+environment.appVersion).subscribe(dynamic => {\r\n\t\t\tformBuilderConfiguration.dynamicValidation = JSON.parse(JSON.stringify(dynamic));\r\n\t\t\tvar companyInfo = { companyName:'', oracleCorporationCusipCode:'', googleIncCusipCode:'', microsoftCorporationCusipCode:'', appleIncCusipCode:'',  }\r\n\t\t\tthis.companyInfoFormGroup = this.formBuilder.group(companyInfo,formBuilderConfiguration);\r\n\t\t})\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  *ngIf=\"companyInfoFormGroup\"  [formGroup]=\"companyInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Company Name</label>\r\n      <select formControlName=\"companyName\" class=\"form-control\">\r\n\t\t<option [value]=\"item\" *ngFor=\"let item of companyNames\">{{item}}</option>\r\n      </select>\r\n      <small class=\"form-text text-danger\" *ngIf=\"companyInfoFormGroup.controls.companyName.errors\">{{companyInfoFormGroup.controls.companyName.errors.cusip.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Oracle Corporation Cusip Code</label>\r\n      <input type=\"text\" formControlName=\"oracleCorporationCusipCode\" class=\"form-control\"   />\r\n      <small class=\"form-text text-muted\">You must enter a 9-character alphanumeric cusic code.<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"companyInfoFormGroup.controls.oracleCorporationCusipCode.errors\">{{companyInfoFormGroup.controls.oracleCorporationCusipCode.errors.cusip.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Microsoft Corporation Cusip Code</label>\r\n      <input type=\"text\" formControlName=\"microsoftCorporationCusipCode\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Microsoft Corporation Cusip Code' then you need to add 'Company Name' input as 'Microsoft'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"companyInfoFormGroup.controls.microsoftCorporationCusipCode.errors\">{{companyInfoFormGroup.controls.microsoftCorporationCusipCode.errors.cusip.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Apple Inc Cusip Code</label>\r\n      <input type=\"text\" formControlName=\"appleIncCusipCode\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">enter 9-character alphanumeric cusip Code only<br/></small>\r\n      <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"companyInfoFormGroup.controls.appleIncCusipCode.errors\">{{companyInfoFormGroup.controls.appleIncCusipCode.errors.cusip.message}}<br/></small>\r\n    </div>\r\n    <button [disabled]=\"!companyInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"json":{"dynamic.json":"{\"companyName\":{},\"oracleCorporationCusipCode\":{\"cusip\":true},\"microsoftCorporationCusipCode\":{\"cusip\":{\"conditionalExpression\":\"x => x.companyName ==\\\"Microsoft\\\"\"}},\"appleIncCusipCode\":{\"cusip\":{\"message\":\"{{0}} is not a valid cusip Code\"}}}"}},"add":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-cusip-add-validator',\r\n    templateUrl: './cusip-add.component.html'\r\n})\r\nexport class CusipAddValidatorComponent implements OnInit {\r\n    companyInfoFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.companyInfoFormGroup = this.formBuilder.group({\r\n            oracleCorporationCusipCode:['', RxwebValidators.cusip()], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"companyInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Oracle Corporation Cusip Code</label>\r\n      <input type=\"text\" formControlName=\"oracleCorporationCusipCode\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">You must enter a valid cusip Code only<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"companyInfoFormGroup.controls.oracleCorporationCusipCode.errors\">{{companyInfoFormGroup.controls.oracleCorporationCusipCode.errors.cusip.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!companyInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"json":{}}}