{
    "complete": {
        "notes": [],
        "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, } from \"@angular/forms\"\r\nimport { RxwebValidators,RxFormBuilder } from '@rxweb/reactive-form-validators';\r\nimport { User } from './user.model';\r\n\r\n\r\n@Component({\r\n    selector: 'app-errormessage-complete',\r\n    templateUrl: './errormessage-complete.component.html'\r\n})\r\nexport class ErrormessageCompleteComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: RxFormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n      \r\n    }\r\n}\r\n",
        "html": "<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>UserName</label>\r\n      <input type=\"text\" formControlName=\"userName\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\">{{userFormGroup.controls.userName[\"errorMessage\"]}}<br/></small>\t\r\n    </div>\r\n\r\n     <div class=\"form-group\">\r\n      <label>Password</label>\r\n      <input type=\"text\" formControlName=\"password\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngFor=\"let errorMessage of userFormGroup.controls.password['errorMessages']\">\r\n       {{errorMessage}}<br/>\r\n     </small>\r\n    </div>\r\n\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>",
        "model": "import {  required ,password,alpha} from \"@rxweb/reactive-form-validators\"\r\nexport class User {\r\n\r\n   @required()\r\n    userName: string;\r\n\r\n  @alpha()\r\n  @password({ validation: { maxLength: 10, minLength: 5, digit: true, specialCharacter: true }})\r\n  password : string;\r\n              \r\n}\r\n",
        "modelName": "user.model.ts",
        "json": {}
    },
    "single": {
        "notes": [],
        "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, } from \"@angular/forms\"\r\nimport { RxwebValidators,RxFormBuilder } from '@rxweb/reactive-form-validators';\r\nimport {User} from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-errormessage-single',\r\n    templateUrl: './errormessage-single.component.html'\r\n})\r\nexport class ErrormessageSingleComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: RxFormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n      \r\n    }\r\n}\r\n",
        "html": "<div>\r\n    <form  [formGroup]=\"userFormGroup\">\r\n      <div class=\"form-group\">\r\n        <label>UserName</label>\r\n        <input type=\"text\" formControlName=\"userName\" class=\"form-control\"  />\r\n       <small class=\"form-text text-danger\">{{userFormGroup.controls.userName[\"errorMessage\"]}}<br/></small>\t\r\n      </div>\r\n  \r\n      <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n    </form>\r\n</div>",
        "model": "import {  required } from \"@rxweb/reactive-form-validators\"\r\nexport class User {\r\n\r\n   @required()\r\n    userName: string;\r\n              \r\n}\r\n",
        "modelName": "user.model.ts",
        "json": {}
    }   
}