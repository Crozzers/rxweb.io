{"complete":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { SubjectDetails } from './subject-details.model';\r\n\r\n@Component({\r\n    selector: 'app-maxNumberAsync-complete-template-driven-validation-decorators',\r\n    templateUrl: './max-number-async-complete.component.html'\r\n})\r\nexport class MaxNumberAsyncCompleteTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    subjectdetails: SubjectDetails\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.subjectdetails= new SubjectDetails()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #subjectdetailsForm = \"ngForm\" [rxwebForm]=\"subjectdetailsForm\" [model]=\"subjectdetails\">\r\n    <div class=\"form-group\">\r\n      <label>Subject Code</label>\r\n\t    <input type=\"text\" name=\"subjectCode\" [(ngModel)]=\"subjectdetails.subjectCode\"  class=\"form-control\" />\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"subjectdetailsForm.controls?.subjectCode?.errors\">{{subjectdetailsForm.controls?.subjectCode?.errors?.maxNumberAsync.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Passing Marks</label>\r\n\t    <input type=\"text\" name=\"passingMarks\" [(ngModel)]=\"subjectdetails.passingMarks\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">you can enter MaxNumber upto 50<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"subjectdetailsForm.controls?.passingMarks?.errors\">{{subjectdetailsForm.controls?.passingMarks?.errors?.maxNumberAsync.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Practical Marks</label>\r\n\t    <input type=\"text\" name=\"practicalMarks\" [(ngModel)]=\"subjectdetails.practicalMarks\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">you can enter MaxNumber upto 70<br/></small>\r\n      <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"subjectdetailsForm.controls?.practicalMarks?.errors\">{{subjectdetailsForm.controls?.practicalMarks?.errors?.maxNumberAsync.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Discipline Marks</label>\r\n\t    <input type=\"text\" name=\"disciplineMarks\" [(ngModel)]=\"subjectdetails.disciplineMarks\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">Shows custom message based on message key<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"subjectdetailsForm.controls?.disciplineMarks?.errors\">{{subjectdetailsForm.controls?.disciplineMarks?.errors?.maxNumberAsync.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!subjectdetailsForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  maxNumberAsync,prop, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class SubjectDetails {\r\n\r\n\t@prop()\r\n\tsubjectCode: string;\r\n\r\n\t@maxNumberAsync({value:50 }) \r\n\tpassingMarks: number;\r\n\t\r\n\t\r\n\t@maxNumberAsync({value:70  ,message:'{{0}} exceeds the Maximum marks Limit' }) \r\n\tpracticalMarks: number;\r\n\t\r\n\t\r\n\t@maxNumberAsync({value:50  ,messageKey:'maxNumberMessageKey' }) \r\n\tdisciplineMarks: number;\r\n\t\r\n\t\r\n}\r\n","modelName":"subject-details.model.ts","json":{}},"valueExample":{"notes":null,"component":null,"html":null,"model":"@maxNumberAsync({value:50 }) \r\npassingMarks: number;\r\n","modelName":null,"json":{}},"value":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { SubjectDetails } from './subject-details.model';\r\n\r\n@Component({\r\n    selector: 'app-maxNumberAsync-value-template-driven-validation-decorators',\r\n    templateUrl: './max-number-async-value.component.html'\r\n})\r\nexport class MaxNumberAsyncValueTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    subjectdetails: SubjectDetails\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.subjectdetails= new SubjectDetails()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #subjectdetailsForm = \"ngForm\" [rxwebForm]=\"subjectdetailsForm\" [model]=\"subjectdetails\">\r\n    <div class=\"form-group\">\r\n      <label>Passing Marks</label>\r\n\t    <input type=\"text\" name=\"passingMarks\" [(ngModel)]=\"subjectdetails.passingMarks\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">you can enter MaxNumber upto 50<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"subjectdetailsForm.controls?.passingMarks?.errors\">{{subjectdetailsForm.controls?.passingMarks?.errors?.maxNumberAsync.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!subjectdetailsForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  maxNumberAsync, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class SubjectDetails {\r\n\r\n\t@maxNumberAsync({value:50 }) \r\n\tpassingMarks: number;\r\n\t\r\n\t\r\n}\r\n","modelName":"subject-details.model.ts","json":{}},"messageExample":{"notes":null,"component":null,"html":null,"model":"@maxNumberAsync({value:70  ,message:'{{0}} exceeds the Maximum marks Limit' }) \r\npracticalMarks: number;\r\n","modelName":null,"json":{}},"message":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { SubjectDetails } from './subject-details.model';\r\n\r\n@Component({\r\n    selector: 'app-maxNumberAsync-message-template-driven-validation-decorators',\r\n    templateUrl: './max-number-async-message.component.html'\r\n})\r\nexport class MaxNumberAsyncMessageTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    subjectdetails: SubjectDetails\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.subjectdetails= new SubjectDetails()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #subjectdetailsForm = \"ngForm\" [rxwebForm]=\"subjectdetailsForm\" [model]=\"subjectdetails\">\r\n    <div class=\"form-group\">\r\n      <label>Practical Marks</label>\r\n\t    <input type=\"text\" name=\"practicalMarks\" [(ngModel)]=\"subjectdetails.practicalMarks\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">you can enter MaxNumber upto 70<br/></small>\r\n      <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"subjectdetailsForm.controls?.practicalMarks?.errors\">{{subjectdetailsForm.controls?.practicalMarks?.errors?.maxNumberAsync.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!subjectdetailsForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  maxNumberAsync, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class SubjectDetails {\r\n\r\n\t@maxNumberAsync({value:70  ,message:'{{0}} exceeds the Maximum marks Limit' }) \r\n\tpracticalMarks: number;\r\n\t\r\n\t\r\n}\r\n","modelName":"subject-details.model.ts","json":{}},"messageKeyExample":{"notes":null,"component":null,"html":null,"model":"@maxNumberAsync({value:50  ,messageKey:'maxNumberMessageKey' }) \r\ndisciplineMarks: number;\r\n","modelName":null,"json":{}},"messageKey":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { SubjectDetails } from './subject-details.model';\r\n\r\n@Component({\r\n    selector: 'app-maxNumberAsync-messageKey-template-driven-validation-decorators',\r\n    templateUrl: './max-number-async-message-key.component.html'\r\n})\r\nexport class MaxNumberAsyncMessageKeyTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    subjectdetails: SubjectDetails\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.subjectdetails= new SubjectDetails()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #subjectdetailsForm = \"ngForm\" [rxwebForm]=\"subjectdetailsForm\" [model]=\"subjectdetails\">\r\n    <div class=\"form-group\">\r\n      <label>Discipline Marks</label>\r\n\t    <input type=\"text\" name=\"disciplineMarks\" [(ngModel)]=\"subjectdetails.disciplineMarks\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">Shows custom message based on message key<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"subjectdetailsForm.controls?.disciplineMarks?.errors\">{{subjectdetailsForm.controls?.disciplineMarks?.errors?.maxNumberAsync.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!subjectdetailsForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  maxNumberAsync, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class SubjectDetails {\r\n\r\n\t@maxNumberAsync({value:50  ,messageKey:'maxNumberMessageKey' }) \r\n\tdisciplineMarks: number;\r\n\t\r\n\t\r\n}\r\n","modelName":"subject-details.model.ts","json":{}},"add":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { SubjectDetails } from './subject-details.model';\r\n\r\n@Component({\r\n    selector: 'app-maxNumberAsync-add-template-driven-validation-decorators',\r\n    templateUrl: './max-number-async-add.component.html'\r\n})\r\nexport class MaxNumberAsyncAddTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    subjectdetails: SubjectDetails\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.subjectdetails= new SubjectDetails()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #subjectdetailsForm = \"ngForm\" [rxwebForm]=\"subjectdetailsForm\" [model]=\"subjectdetails\">\r\n    <div class=\"form-group\">\r\n      <label>Passing Marks</label>\r\n\t    <input type=\"text\" name=\"passingMarks\" [(ngModel)]=\"subjectdetails.passingMarks\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">you can enter MaxNumber upto 50<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"subjectdetailsForm.controls?.passingMarks?.errors\">{{subjectdetailsForm.controls?.passingMarks?.errors?.maxNumberAsync.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!subjectdetailsForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  maxNumberAsync, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class SubjectDetails {\r\n\r\n\t@maxNumberAsync({value:50 }) \r\n\tpassingMarks: number;\r\n\t\r\n\t\r\n}\r\n","modelName":"subject-details.model.ts","json":{}}}