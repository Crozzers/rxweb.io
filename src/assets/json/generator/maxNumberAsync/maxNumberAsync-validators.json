{"complete":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-maxNumberAsync-complete-validator',\r\n    templateUrl: './max-number-async-complete.component.html'\r\n})\r\nexport class MaxNumberAsyncCompleteValidatorComponent implements OnInit {\r\n    subjectDetailsFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.subjectDetailsFormGroup = this.formBuilder.group({\r\n            subjectCode:['',], \r\n            passingMarks:['', RxwebValidators.maxNumberAsync({value:50 })], \r\n            practicalMarks:['', RxwebValidators.maxNumberAsync({value:70  ,message:'{{0}} exceeds the Maximum marks Limit' })], \r\n            disciplineMarks:['', RxwebValidators.maxNumberAsync({value:50  ,messageKey:'maxNumberMessageKey' })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"subjectDetailsFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Subject Code</label>\r\n      <input type=\"text\" formControlName=\"subjectCode\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"subjectDetailsFormGroup.controls.subjectCode.errors\">{{subjectDetailsFormGroup.controls.subjectCode.errors.maxNumberAsync.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Passing Marks</label>\r\n      <input type=\"text\" formControlName=\"passingMarks\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">you can enter MaxNumber upto 50<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"subjectDetailsFormGroup.controls.passingMarks.errors\">{{subjectDetailsFormGroup.controls.passingMarks.errors.maxNumberAsync.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Practical Marks</label>\r\n      <input type=\"text\" formControlName=\"practicalMarks\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">you can enter MaxNumber upto 70<br/></small>\r\n      <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"subjectDetailsFormGroup.controls.practicalMarks.errors\">{{subjectDetailsFormGroup.controls.practicalMarks.errors.maxNumberAsync.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Discipline Marks</label>\r\n      <input type=\"text\" formControlName=\"disciplineMarks\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows custom message based on message key<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"subjectDetailsFormGroup.controls.disciplineMarks.errors\">{{subjectDetailsFormGroup.controls.disciplineMarks.errors.maxNumberMessageKey.message}}<br/></small>\t\t\r\n    </div>\r\n    <button [disabled]=\"!subjectDetailsFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"json":{}},"valueExample":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.maxNumberAsync({value:50 });\r\n","modelName":null,"json":{}},"value":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-maxNumberAsync-value-validator',\r\n    templateUrl: './max-number-async-value.component.html'\r\n})\r\nexport class MaxNumberAsyncValueValidatorComponent implements OnInit {\r\n    subjectDetailsFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.subjectDetailsFormGroup = this.formBuilder.group({\r\n            passingMarks:['', RxwebValidators.maxNumberAsync({value:50 })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"subjectDetailsFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Passing Marks</label>\r\n      <input type=\"text\" formControlName=\"passingMarks\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">you can enter MaxNumber upto 50<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"subjectDetailsFormGroup.controls.passingMarks.errors\">{{subjectDetailsFormGroup.controls.passingMarks.errors.maxNumberAsync.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!subjectDetailsFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"json":{}},"messageExample":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.maxNumberAsync({value:70  ,message:'{{0}} exceeds the Maximum marks Limit' });\r\n","modelName":null,"json":{}},"message":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-maxNumberAsync-message-validator',\r\n    templateUrl: './max-number-async-message.component.html'\r\n})\r\nexport class MaxNumberAsyncMessageValidatorComponent implements OnInit {\r\n    subjectDetailsFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.subjectDetailsFormGroup = this.formBuilder.group({\r\n            practicalMarks:['', RxwebValidators.maxNumberAsync({value:70  ,message:'{{0}} exceeds the Maximum marks Limit' })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"subjectDetailsFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Practical Marks</label>\r\n      <input type=\"text\" formControlName=\"practicalMarks\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">you can enter MaxNumber upto 70<br/></small>\r\n      <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"subjectDetailsFormGroup.controls.practicalMarks.errors\">{{subjectDetailsFormGroup.controls.practicalMarks.errors.maxNumberAsync.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!subjectDetailsFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"json":{}},"messageKeyExample":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.maxNumberAsync({value:50  ,messageKey:'maxNumberMessageKey' });\r\n","modelName":null,"json":{}},"messageKey":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-maxNumberAsync-messageKey-validator',\r\n    templateUrl: './max-number-async-message-key.component.html'\r\n})\r\nexport class MaxNumberAsyncMessageKeyValidatorComponent implements OnInit {\r\n    subjectDetailsFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.subjectDetailsFormGroup = this.formBuilder.group({\r\n            disciplineMarks:['', RxwebValidators.maxNumberAsync({value:50  ,messageKey:'maxNumberMessageKey' })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"subjectDetailsFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Discipline Marks</label>\r\n      <input type=\"text\" formControlName=\"disciplineMarks\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows custom message based on message key<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"subjectDetailsFormGroup.controls.disciplineMarks.errors\">{{subjectDetailsFormGroup.controls.disciplineMarks.errors.maxNumberMessageKey.message}}<br/></small>\t\t\r\n    </div>\r\n    <button [disabled]=\"!subjectDetailsFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"json":{}},"dynamic":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormBuilderConfiguration,RxFormBuilder} from '@rxweb/reactive-form-validators';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n    selector: 'app-maxNumberAsync-dynamic-validator',\r\n    templateUrl: './max-number-async-dynamic.component.html'\r\n})\r\nexport class MaxNumberAsyncDynamicValidatorComponent implements OnInit {\r\n    subjectDetailsFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: RxFormBuilder , private http: HttpClient )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n\t\tlet formBuilderConfiguration = new FormBuilderConfiguration();\r\n\t\tthis.http.get('assets/examples/reactive-form-validators/validators/maxNumberAsync/dynamic/dynamic.json?v='+environment.appVersion).subscribe(dynamic => {\r\n\t\t\tformBuilderConfiguration.dynamicValidation = JSON.parse(JSON.stringify(dynamic));\r\n\t\t\tvar subjectDetails = { subjectCode:'', passingMarks:'', practicalMarks:'', disciplineMarks:'',  }\r\n\t\t\tthis.subjectDetailsFormGroup = this.formBuilder.group(subjectDetails,formBuilderConfiguration);\r\n\t\t})\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  *ngIf=\"subjectDetailsFormGroup\"  [formGroup]=\"subjectDetailsFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Subject Code</label>\r\n      <input type=\"text\" formControlName=\"subjectCode\" class=\"form-control\"   />\r\n      <small class=\"form-text text-danger\" *ngIf=\"subjectDetailsFormGroup.controls.subjectCode.errors\">{{subjectDetailsFormGroup.controls.subjectCode.errors.maxNumberAsync.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Passing Marks</label>\r\n      <input type=\"text\" formControlName=\"passingMarks\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">you can enter MaxNumber upto 50<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"subjectDetailsFormGroup.controls.passingMarks.errors\">{{subjectDetailsFormGroup.controls.passingMarks.errors.maxNumberAsync.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Practical Marks</label>\r\n      <input type=\"text\" formControlName=\"practicalMarks\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">you can enter MaxNumber upto 70<br/></small>\r\n      <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"subjectDetailsFormGroup.controls.practicalMarks.errors\">{{subjectDetailsFormGroup.controls.practicalMarks.errors.maxNumberAsync.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Discipline Marks</label>\r\n      <input type=\"text\" formControlName=\"disciplineMarks\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows custom message based on message key<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"subjectDetailsFormGroup.controls.disciplineMarks.errors\">{{subjectDetailsFormGroup.controls.disciplineMarks.errors.maxNumberMessageKey.message}}<br/></small>\t\t\r\n    </div>\r\n    <button [disabled]=\"!subjectDetailsFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"json":{"dynamic.json":"{\"subjectCode\":{},\"passingMarks\":{\"maxNumberAsync\":{\"value\":\"50\"}},\"practicalMarks\":{\"maxNumberAsync\":{\"value\":\"70\",\"message\":\"{{0}} exceeds the Maximum marks Limit\"}},\"disciplineMarks\":{\"maxNumberAsync\":{\"value\":\"50\",\"messageKey\":\"maxNumberMessageKey\"}}}"}},"add":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-maxNumberAsync-add-validator',\r\n    templateUrl: './max-number-async-add.component.html'\r\n})\r\nexport class MaxNumberAsyncAddValidatorComponent implements OnInit {\r\n    subjectDetailsFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.subjectDetailsFormGroup = this.formBuilder.group({\r\n            passingMarks:['', RxwebValidators.maxNumberAsync({value:50 })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"subjectDetailsFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Passing Marks</label>\r\n      <input type=\"text\" formControlName=\"passingMarks\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">you can enter MaxNumber upto 50<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"subjectDetailsFormGroup.controls.passingMarks.errors\">{{subjectDetailsFormGroup.controls.passingMarks.errors.maxNumberAsync.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!subjectDetailsFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"json":{}}}