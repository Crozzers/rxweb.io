{"complete":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { SubjectDetails } from './subject-details.model';\r\n\r\n@Component({\r\n    selector: 'app-maxNumberAsync-complete',\r\n    templateUrl: './max-number-async-complete.component.html'\r\n})\r\nexport class MaxNumberAsyncCompleteComponent implements OnInit {\r\n    subjectDetailsFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let subjectDetails = new SubjectDetails();\r\n        this.subjectDetailsFormGroup = this.formBuilder.formGroup(subjectDetails);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"subjectDetailsFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Subject Code</label>\r\n      <input type=\"text\" formControlName=\"subjectCode\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"subjectDetailsFormGroup.controls.subjectCode.errors\">{{subjectDetailsFormGroup.controls.subjectCode.errors.maxNumber.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Passing Marks</label>\r\n      <input type=\"text\" formControlName=\"passingMarks\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">you can enter MaxNumber upto 50<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"subjectDetailsFormGroup.controls.passingMarks.errors\">{{subjectDetailsFormGroup.controls.passingMarks.errors.maxNumber.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Practical Marks</label>\r\n      <input type=\"text\" formControlName=\"practicalMarks\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">you can enter MaxNumber upto 70<br/></small>\r\n      <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"subjectDetailsFormGroup.controls.practicalMarks.errors\">{{subjectDetailsFormGroup.controls.practicalMarks.errors.maxNumber.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Discipline Marks</label>\r\n      <input type=\"text\" formControlName=\"disciplineMarks\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows custom message based on message key<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"subjectDetailsFormGroup.controls.disciplineMarks.errors\">{{subjectDetailsFormGroup.controls.disciplineMarks.errors.maxNumberMessageKey.message}}<br/></small>\t\t\r\n    </div>\r\n    <button [disabled]=\"!subjectDetailsFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  maxNumberAsync,prop, } from   \"@rxweb/reactive-form-validators\" \r\n\rimport { of } from \"rxjs\" \r\n\r\n   \r\n\r\nexport class SubjectDetails {\r\n\r\n\t@prop()\r\n\tsubjectCode: string;\r\n\r\n\t@maxNumberAsync({validatorConfig:of({value:50})}) \r\n\tpassingMarks: number;\r\n\t\r\n\t\r\n\t@maxNumberAsync({validatorConfig:of({value:70  ,message:'{{0}} exceeds the Maximum marks Limit'})}) \r\n\tpracticalMarks: number;\r\n\t\r\n\t\r\n\t@maxNumberAsync({validatorConfig:of({value:50  ,messageKey:'maxNumberMessageKey'})}) \r\n\tdisciplineMarks: number;\r\n\t\r\n\t\r\n}\r\n","modelName":"subject-details.model.ts","json":{}},"valueExample":{"notes":null,"component":null,"html":null,"model":"@maxNumberAsync({validatorConfig:of({value:50})}) \r\npassingMarks: number;\r\n","modelName":null,"json":{}},"value":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { SubjectDetails } from './subject-details.model';\r\n\r\n@Component({\r\n    selector: 'app-maxNumberAsync-value',\r\n    templateUrl: './max-number-async-value.component.html'\r\n})\r\nexport class MaxNumberAsyncValueComponent implements OnInit {\r\n    subjectDetailsFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let subjectDetails = new SubjectDetails();\r\n        this.subjectDetailsFormGroup = this.formBuilder.formGroup(subjectDetails);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"subjectDetailsFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Passing Marks</label>\r\n      <input type=\"text\" formControlName=\"passingMarks\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">you can enter MaxNumber upto 50<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"subjectDetailsFormGroup.controls.passingMarks.errors\">{{subjectDetailsFormGroup.controls.passingMarks.errors.maxNumber.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!subjectDetailsFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  maxNumberAsync, } from   \"@rxweb/reactive-form-validators\" \r\n\rimport { of } from \"rxjs\" \r\n\r\n   \r\n\r\nexport class SubjectDetails {\r\n\r\n\t@maxNumberAsync({validatorConfig:of({value:50})}) \r\n\tpassingMarks: number;\r\n\t\r\n\t\r\n}\r\n","modelName":"subject-details.model.ts","json":{}},"messageExample":{"notes":null,"component":null,"html":null,"model":"@maxNumberAsync({validatorConfig:of({value:70  ,message:'{{0}} exceeds the Maximum marks Limit'})}) \r\npracticalMarks: number;\r\n","modelName":null,"json":{}},"message":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { SubjectDetails } from './subject-details.model';\r\n\r\n@Component({\r\n    selector: 'app-maxNumberAsync-message',\r\n    templateUrl: './max-number-async-message.component.html'\r\n})\r\nexport class MaxNumberAsyncMessageComponent implements OnInit {\r\n    subjectDetailsFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let subjectDetails = new SubjectDetails();\r\n        this.subjectDetailsFormGroup = this.formBuilder.formGroup(subjectDetails);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"subjectDetailsFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Practical Marks</label>\r\n      <input type=\"text\" formControlName=\"practicalMarks\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">you can enter MaxNumber upto 70<br/></small>\r\n      <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"subjectDetailsFormGroup.controls.practicalMarks.errors\">{{subjectDetailsFormGroup.controls.practicalMarks.errors.maxNumber.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!subjectDetailsFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  maxNumberAsync, } from   \"@rxweb/reactive-form-validators\" \r\n\rimport { of } from \"rxjs\" \r\n\r\n   \r\n\r\nexport class SubjectDetails {\r\n\r\n\t@maxNumberAsync({validatorConfig:of({value:70  ,message:'{{0}} exceeds the Maximum marks Limit'})}) \r\n\tpracticalMarks: number;\r\n\t\r\n\t\r\n}\r\n","modelName":"subject-details.model.ts","json":{}},"messageKeyExample":{"notes":null,"component":null,"html":null,"model":"@maxNumberAsync({validatorConfig:of({value:50  ,messageKey:'maxNumberMessageKey'})}) \r\ndisciplineMarks: number;\r\n","modelName":null,"json":{}},"messageKey":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { SubjectDetails } from './subject-details.model';\r\n\r\n@Component({\r\n    selector: 'app-maxNumberAsync-messageKey',\r\n    templateUrl: './max-number-async-message-key.component.html'\r\n})\r\nexport class MaxNumberAsyncMessageKeyComponent implements OnInit {\r\n    subjectDetailsFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let subjectDetails = new SubjectDetails();\r\n        this.subjectDetailsFormGroup = this.formBuilder.formGroup(subjectDetails);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"subjectDetailsFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Discipline Marks</label>\r\n      <input type=\"text\" formControlName=\"disciplineMarks\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows custom message based on message key<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"subjectDetailsFormGroup.controls.disciplineMarks.errors\">{{subjectDetailsFormGroup.controls.disciplineMarks.errors.maxNumberMessageKey.message}}<br/></small>\t\t\r\n    </div>\r\n    <button [disabled]=\"!subjectDetailsFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  maxNumberAsync, } from   \"@rxweb/reactive-form-validators\" \r\n\rimport { of } from \"rxjs\" \r\n\r\n   \r\n\r\nexport class SubjectDetails {\r\n\r\n\t@maxNumberAsync({validatorConfig:of({value:50  ,messageKey:'maxNumberMessageKey'})}) \r\n\tdisciplineMarks: number;\r\n\t\r\n\t\r\n}\r\n","modelName":"subject-details.model.ts","json":{}},"dynamic":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\nimport { FormBuilderConfiguration,} from '@rxweb/reactive-form-validators';\r\n\r\nimport { SubjectDetails } from './subject-details.model';\r\n\r\n@Component({\r\n    selector: 'app-maxNumberAsync-dynamic',\r\n    templateUrl: './max-number-async-dynamic.component.html'\r\n})\r\nexport class MaxNumberAsyncDynamicComponent implements OnInit {\r\n    subjectDetailsFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder,private http: HttpClient    ) { }\r\n\r\n    ngOnInit() {\r\n        let subjectDetails = new SubjectDetails();\r\n        let formBuilderConfiguration = new FormBuilderConfiguration();\r\n\t\tthis.http.get('assets/examples/reactive-form-validators/decorators/maxNumberAsync/dynamic/dynamic.json?v=' + environment.appVersion).subscribe(dynamic => {\r\n            formBuilderConfiguration.dynamicValidation = JSON.parse(JSON.stringify(dynamic));\r\n\t\t\tthis.subjectDetailsFormGroup = this.formBuilder.formGroup(subjectDetails,formBuilderConfiguration);\r\n       })})\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  *ngIf=\"subjectDetailsFormGroup\"  [formGroup]=\"subjectDetailsFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Subject Code</label>\r\n      <input type=\"text\" formControlName=\"subjectCode\" class=\"form-control\"   />\r\n      <small class=\"form-text text-danger\" *ngIf=\"subjectDetailsFormGroup.controls.subjectCode.errors\">{{subjectDetailsFormGroup.controls.subjectCode.errors.maxNumber.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Passing Marks</label>\r\n      <input type=\"text\" formControlName=\"passingMarks\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">you can enter MaxNumber upto 50<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"subjectDetailsFormGroup.controls.passingMarks.errors\">{{subjectDetailsFormGroup.controls.passingMarks.errors.maxNumber.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Practical Marks</label>\r\n      <input type=\"text\" formControlName=\"practicalMarks\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">you can enter MaxNumber upto 70<br/></small>\r\n      <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"subjectDetailsFormGroup.controls.practicalMarks.errors\">{{subjectDetailsFormGroup.controls.practicalMarks.errors.maxNumber.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Discipline Marks</label>\r\n      <input type=\"text\" formControlName=\"disciplineMarks\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows custom message based on message key<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"subjectDetailsFormGroup.controls.disciplineMarks.errors\">{{subjectDetailsFormGroup.controls.disciplineMarks.errors.maxNumberMessageKey.message}}<br/></small>\t\t\r\n    </div>\r\n    <button [disabled]=\"!subjectDetailsFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  maxNumberAsync,prop, } from   \"@rxweb/reactive-form-validators\" \r\n\rimport { of } from \"rxjs\" \r\n\r\n   \r\n\r\nexport class SubjectDetails {\r\n\r\n\t@prop()\r\n\tsubjectCode: string;\r\n\r\n\t@prop()\r\n\tpassingMarks: number;\r\n\r\n\t@prop()\r\n\tpracticalMarks: number;\r\n\r\n\t@prop()\r\n\tdisciplineMarks: number;\r\n\r\n}\r\n","modelName":"subject-details.model.ts","json":{"dynamic.json":"{\"subjectCode\":{},\"passingMarks\":{\"maxNumberAsync\":{\"value\":\"50\"}},\"practicalMarks\":{\"maxNumberAsync\":{\"value\":\"70\",\"message\":\"{{0}} exceeds the Maximum marks Limit\"}},\"disciplineMarks\":{\"maxNumberAsync\":{\"value\":\"50\",\"messageKey\":\"maxNumberMessageKey\"}}}"}},"add":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { SubjectDetails } from './subject-details.model';\r\n\r\n@Component({\r\n    selector: 'app-maxNumberAsync-add',\r\n    templateUrl: './max-number-async-add.component.html'\r\n})\r\nexport class MaxNumberAsyncAddComponent implements OnInit {\r\n    subjectDetailsFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let subjectDetails = new SubjectDetails();\r\n        this.subjectDetailsFormGroup = this.formBuilder.formGroup(subjectDetails);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"subjectDetailsFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Passing Marks</label>\r\n      <input type=\"text\" formControlName=\"passingMarks\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">you can enter MaxNumber upto 50<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"subjectDetailsFormGroup.controls.passingMarks.errors\">{{subjectDetailsFormGroup.controls.passingMarks.errors.maxNumber.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!subjectDetailsFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  maxNumberAsync, } from   \"@rxweb/reactive-form-validators\" \r\n\rimport { of } from \"rxjs\" \r\n\r\n   \r\n\r\nexport class SubjectDetails {\r\n\r\n\t@maxNumberAsync({validatorConfig:of({value:50})}) \r\n\tpassingMarks: number;\r\n\t\r\n\t\r\n}\r\n","modelName":"subject-details.model.ts","json":{}},"edit":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { SubjectDetails } from './subject-details.model';\r\n\r\n@Component({\r\n    selector: 'app-maxNumberAsync-edit',\r\n    templateUrl: './max-number-async-edit.component.html'\r\n})\r\nexport class MaxNumberAsyncEditComponent implements OnInit {\r\n    subjectDetailsFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder,private http: HttpClient    ) { }\r\n\r\n    ngOnInit() {\r\n        this.http.get('assets/examples/reactive-form-validators/decorators/maxNumberAsync/edit/subject-details-data.json?v=' + environment.appVersion).subscribe(subjectDetails => {\r\n            this.subjectDetailsFormGroup = this.formBuilder.formGroup<SubjectDetails>(SubjectDetails,subjectDetails);\r\n       })})\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  *ngIf=\"subjectDetailsFormGroup\"  [formGroup]=\"subjectDetailsFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Passing Marks</label>\r\n      <input type=\"text\" formControlName=\"passingMarks\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">you can enter MaxNumber upto 50<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"subjectDetailsFormGroup.controls.passingMarks.errors\">{{subjectDetailsFormGroup.controls.passingMarks.errors.maxNumber.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!subjectDetailsFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  maxNumberAsync, } from   \"@rxweb/reactive-form-validators\" \r\n\rimport { of } from \"rxjs\" \r\n\r\n   \r\n\r\nexport class SubjectDetails {\r\n\r\n\t@maxNumberAsync({validatorConfig:of({value:50})}) \r\n\tpassingMarks: number;\r\n\t\r\n\t\r\n}\r\n","modelName":"subject-details.model.ts","json":{"subject-details-data.json":"{\"passingMarks\":\"49\"}"}}}