{"complete":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { AttandanceDetail } from './attandance-detail.model';\r\n\r\n@Component({\r\n    selector: 'app-minTime-complete',\r\n    templateUrl: './min-time-complete.component.html'\r\n})\r\nexport class MinTimeCompleteComponent implements OnInit {\r\n    attandanceDetailFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let attandanceDetail = new AttandanceDetail();\r\n        this.attandanceDetailFormGroup = this.formBuilder.formGroup(attandanceDetail);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"attandanceDetailFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Entry Place</label>\r\n      <input type=\"text\" formControlName=\"entryPlace\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.entryPlace.errors\">{{attandanceDetailFormGroup.controls.entryPlace.errors.minTime.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Required Hours</label>\r\n      <input type=\"text\" formControlName=\"requiredHours\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Value should be greater than 8:30<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.requiredHours.errors\">{{attandanceDetailFormGroup.controls.requiredHours.errors.minTime.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Opening Time</label>\r\n      <input type=\"text\" formControlName=\"openingTime\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.openingTime.errors\">{{attandanceDetailFormGroup.controls.openingTime.errors.minTime.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Total In Time</label>\r\n      <input type=\"text\" formControlName=\"totalInTime\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">To apply the validation of minTime on 'Total In Time' field, then enter the value of 'Main Entry Gate' in Entry Place textbox.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.totalInTime.errors\">{{attandanceDetailFormGroup.controls.totalInTime.errors.minTime.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Entry Time</label>\r\n      <input type=\"text\" formControlName=\"entryTime\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">To apply the validation of minTime on 'Entry Time' field, then enter the value of 'Main Entry Gate' in Entry Place textbox.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.entryTime.errors\">{{attandanceDetailFormGroup.controls.entryTime.errors.minTime.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Total Time Out</label>\r\n      <input type=\"text\" formControlName=\"totalOutTime\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This field allow seconds in input time.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.totalOutTime.errors\">{{attandanceDetailFormGroup.controls.totalOutTime.errors.minTime.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Exit Time</label>\r\n      <input type=\"text\" formControlName=\"exitTime\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.exitTime.errors\">{{attandanceDetailFormGroup.controls.exitTime.errors.minTime.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Net-In Time</label>\r\n      <input type=\"text\" formControlName=\"netInTime\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message using message key<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.netInTime.errors\">{{attandanceDetailFormGroup.controls.netInTime.errors.minTimeMessageKey.message}}<br/></small>\t\t\r\n    </div>\r\n    <button [disabled]=\"!attandanceDetailFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  minTime,prop, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class AttandanceDetail {\r\n\r\n\t@prop()\r\n\tentryPlace: string;\r\n\r\n\t@minTime({operator:'>'  ,value:'08:30' }) \r\n\trequiredHours: string;\r\n\t\r\n\t\r\n\t@prop()\r\n\topeningTime: string;\r\n\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@minTime({conditionalExpression:(x,y) => x.entryPlace == \"Main Entry Gate\"   ,fieldName:'netInTime' }) \r\n\ttotalInTime: string;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@minTime({conditionalExpression:'x => x.entryPlace == \"Main Entry Gate\"'  ,fieldName:'openingTime' }) \r\n\tentryTime: string;\r\n\t\r\n\t\r\n\t@minTime({allowSeconds:true  ,value:'00:10:00' }) \r\n\ttotalOutTime: string;\r\n\t\r\n\t\r\n\t@minTime({message:'You can enter only time format data greater than config value'  ,value:'07:00' }) \r\n\texitTime: string;\r\n\t\r\n\t\r\n\t@prop()\r\n\tnetInTime: string;\r\n\r\n}\r\n","modelName":"attandance-detail.model.ts","json":{}},"operatorExample":{"notes":null,"component":null,"html":null,"model":"@minTime({operator:'>'  ,value:'08:30' }) \r\nrequiredHours: string;\r\n","modelName":null,"json":{}},"operator":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { AttandanceDetail } from './attandance-detail.model';\r\n\r\n@Component({\r\n    selector: 'app-minTime-operator',\r\n    templateUrl: './min-time-operator.component.html'\r\n})\r\nexport class MinTimeOperatorComponent implements OnInit {\r\n    attandanceDetailFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let attandanceDetail = new AttandanceDetail();\r\n        this.attandanceDetailFormGroup = this.formBuilder.formGroup(attandanceDetail);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"attandanceDetailFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Required Hours</label>\r\n      <input type=\"text\" formControlName=\"requiredHours\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Value should be greater than 8:30<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.requiredHours.errors\">{{attandanceDetailFormGroup.controls.requiredHours.errors.minTime.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!attandanceDetailFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  minTime, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class AttandanceDetail {\r\n\r\n\t@minTime({operator:'>'  ,value:'08:30' }) \r\n\trequiredHours: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"attandance-detail.model.ts","json":{}},"valueExample":{"notes":null,"component":null,"html":null,"model":"@minTime({operator:'>'  ,value:'08:30' }) \r\nrequiredHours: string;\r\n","modelName":null,"json":{}},"value":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { AttandanceDetail } from './attandance-detail.model';\r\n\r\n@Component({\r\n    selector: 'app-minTime-value',\r\n    templateUrl: './min-time-value.component.html'\r\n})\r\nexport class MinTimeValueComponent implements OnInit {\r\n    attandanceDetailFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let attandanceDetail = new AttandanceDetail();\r\n        this.attandanceDetailFormGroup = this.formBuilder.formGroup(attandanceDetail);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"attandanceDetailFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Required Hours</label>\r\n      <input type=\"text\" formControlName=\"requiredHours\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Value should be greater than 8:30<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.requiredHours.errors\">{{attandanceDetailFormGroup.controls.requiredHours.errors.minTime.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!attandanceDetailFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  minTime, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class AttandanceDetail {\r\n\r\n\t@minTime({operator:'>'  ,value:'08:30' }) \r\n\trequiredHours: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"attandance-detail.model.ts","json":{}},"conditionalExpressionExampleFunction":{"notes":null,"component":null,"html":null,"model":"@minTime({conditionalExpression:(x,y) => x.entryPlace == \"Main Entry Gate\"   ,fieldName:'netInTime' }) \r\ntotalInTime: string;\r\n","modelName":null,"json":{}},"conditionalExpression":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { AttandanceDetail } from './attandance-detail.model';\r\n\r\n@Component({\r\n    selector: 'app-minTime-conditionalExpression',\r\n    templateUrl: './min-time-conditional-expression.component.html'\r\n})\r\nexport class MinTimeConditionalExpressionComponent implements OnInit {\r\n    attandanceDetailFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let attandanceDetail = new AttandanceDetail();\r\n        this.attandanceDetailFormGroup = this.formBuilder.formGroup(attandanceDetail);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"attandanceDetailFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Entry Place</label>\r\n      <input type=\"text\" formControlName=\"entryPlace\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.entryPlace.errors\">{{attandanceDetailFormGroup.controls.entryPlace.errors.minTime.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Entry Time</label>\r\n      <input type=\"text\" formControlName=\"entryTime\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">To apply the validation of minTime on 'Entry Time' field, then enter the value of 'Main Entry Gate' in Entry Place textbox.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.entryTime.errors\">{{attandanceDetailFormGroup.controls.entryTime.errors.minTime.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Total In Time</label>\r\n      <input type=\"text\" formControlName=\"totalInTime\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">To apply the validation of minTime on 'Total In Time' field, then enter the value of 'Main Entry Gate' in Entry Place textbox.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.totalInTime.errors\">{{attandanceDetailFormGroup.controls.totalInTime.errors.minTime.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!attandanceDetailFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  minTime,prop, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class AttandanceDetail {\r\n\r\n\t@prop()\r\n\tentryPlace: string;\r\n\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@minTime({conditionalExpression:'x => x.entryPlace == \"Main Entry Gate\"'  ,fieldName:'openingTime' }) \r\n\tentryTime: string;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@minTime({conditionalExpression:(x,y) => x.entryPlace == \"Main Entry Gate\"   ,fieldName:'netInTime' }) \r\n\ttotalInTime: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"attandance-detail.model.ts","json":{}},"fieldNameExampleFunction":{"notes":null,"component":null,"html":null,"model":"@minTime({conditionalExpression:(x,y) => x.entryPlace == \"Main Entry Gate\"   ,fieldName:'netInTime' }) \r\ntotalInTime: string;\r\n","modelName":null,"json":{}},"fieldName":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { AttandanceDetail } from './attandance-detail.model';\r\n\r\n@Component({\r\n    selector: 'app-minTime-fieldName',\r\n    templateUrl: './min-time-field-name.component.html'\r\n})\r\nexport class MinTimeFieldNameComponent implements OnInit {\r\n    attandanceDetailFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let attandanceDetail = new AttandanceDetail();\r\n        this.attandanceDetailFormGroup = this.formBuilder.formGroup(attandanceDetail);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"attandanceDetailFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Net-In Time</label>\r\n      <input type=\"text\" formControlName=\"netInTime\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message using message key<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.netInTime.errors\">{{attandanceDetailFormGroup.controls.netInTime.errors.minTimeMessageKey.message}}<br/></small>\t\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Entry Time</label>\r\n      <input type=\"text\" formControlName=\"entryTime\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">To apply the validation of minTime on 'Entry Time' field, then enter the value of 'Main Entry Gate' in Entry Place textbox.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.entryTime.errors\">{{attandanceDetailFormGroup.controls.entryTime.errors.minTime.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Total In Time</label>\r\n      <input type=\"text\" formControlName=\"totalInTime\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">To apply the validation of minTime on 'Total In Time' field, then enter the value of 'Main Entry Gate' in Entry Place textbox.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.totalInTime.errors\">{{attandanceDetailFormGroup.controls.totalInTime.errors.minTime.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!attandanceDetailFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  minTime,prop, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class AttandanceDetail {\r\n\r\n\t@prop()\r\n\tnetInTime: string;\r\n\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@minTime({conditionalExpression:'x => x.entryPlace == \"Main Entry Gate\"'  ,fieldName:'openingTime' }) \r\n\tentryTime: string;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@minTime({conditionalExpression:(x,y) => x.entryPlace == \"Main Entry Gate\"   ,fieldName:'netInTime' }) \r\n\ttotalInTime: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"attandance-detail.model.ts","json":{}},"conditionalExpressionExampleString":{"notes":null,"component":null,"html":null,"model":"@minTime({conditionalExpression:'x => x.entryPlace == \"Main Entry Gate\"'  ,fieldName:'openingTime' }) \r\nentryTime: string;\r\n","modelName":null,"json":{}},"fieldNameExampleString":{"notes":null,"component":null,"html":null,"model":"@minTime({conditionalExpression:'x => x.entryPlace == \"Main Entry Gate\"'  ,fieldName:'openingTime' }) \r\nentryTime: string;\r\n","modelName":null,"json":{}},"allowSecondsExample":{"notes":null,"component":null,"html":null,"model":"@minTime({allowSeconds:true  ,value:'00:10:00' }) \r\ntotalOutTime: string;\r\n","modelName":null,"json":{}},"allowSeconds":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { AttandanceDetail } from './attandance-detail.model';\r\n\r\n@Component({\r\n    selector: 'app-minTime-allowSeconds',\r\n    templateUrl: './min-time-allow-seconds.component.html'\r\n})\r\nexport class MinTimeAllowSecondsComponent implements OnInit {\r\n    attandanceDetailFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let attandanceDetail = new AttandanceDetail();\r\n        this.attandanceDetailFormGroup = this.formBuilder.formGroup(attandanceDetail);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"attandanceDetailFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Total Time Out</label>\r\n      <input type=\"text\" formControlName=\"totalOutTime\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This field allow seconds in input time.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.totalOutTime.errors\">{{attandanceDetailFormGroup.controls.totalOutTime.errors.minTime.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!attandanceDetailFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  minTime, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class AttandanceDetail {\r\n\r\n\t@minTime({allowSeconds:true  ,value:'00:10:00' }) \r\n\ttotalOutTime: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"attandance-detail.model.ts","json":{}},"messageExample":{"notes":null,"component":null,"html":null,"model":"@minTime({message:'You can enter only time format data greater than config value'  ,value:'07:00' }) \r\nexitTime: string;\r\n","modelName":null,"json":{}},"message":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { AttandanceDetail } from './attandance-detail.model';\r\n\r\n@Component({\r\n    selector: 'app-minTime-message',\r\n    templateUrl: './min-time-message.component.html'\r\n})\r\nexport class MinTimeMessageComponent implements OnInit {\r\n    attandanceDetailFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let attandanceDetail = new AttandanceDetail();\r\n        this.attandanceDetailFormGroup = this.formBuilder.formGroup(attandanceDetail);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"attandanceDetailFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Exit Time</label>\r\n      <input type=\"text\" formControlName=\"exitTime\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.exitTime.errors\">{{attandanceDetailFormGroup.controls.exitTime.errors.minTime.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!attandanceDetailFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  minTime, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class AttandanceDetail {\r\n\r\n\t@minTime({message:'You can enter only time format data greater than config value'  ,value:'07:00' }) \r\n\texitTime: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"attandance-detail.model.ts","json":{}},"messageKeyExample":{"notes":null,"component":null,"html":null,"model":"@minTime({messageKey:'minTimeMessageKey'  ,value:'08:30' }) \r\nnetInTime: string;\r\n","modelName":null,"json":{}},"messageKey":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { AttandanceDetail } from './attandance-detail.model';\r\n\r\n@Component({\r\n    selector: 'app-minTime-messageKey',\r\n    templateUrl: './min-time-message-key.component.html'\r\n})\r\nexport class MinTimeMessageKeyComponent implements OnInit {\r\n    attandanceDetailFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let attandanceDetail = new AttandanceDetail();\r\n        this.attandanceDetailFormGroup = this.formBuilder.formGroup(attandanceDetail);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"attandanceDetailFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Net-In Time</label>\r\n      <input type=\"text\" formControlName=\"netInTime\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message using message key<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.netInTime.errors\">{{attandanceDetailFormGroup.controls.netInTime.errors.minTimeMessageKey.message}}<br/></small>\t\t\r\n    </div>\r\n    <button [disabled]=\"!attandanceDetailFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  minTime,prop, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class AttandanceDetail {\r\n\r\n\t@prop()\r\n\tnetInTime: string;\r\n\r\n}\r\n","modelName":"attandance-detail.model.ts","json":{}},"dynamic":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\nimport { FormBuilderConfiguration,} from '@rxweb/reactive-form-validators';\r\n\r\nimport { AttandanceDetail } from './attandance-detail.model';\r\n\r\n@Component({\r\n    selector: 'app-minTime-dynamic',\r\n    templateUrl: './min-time-dynamic.component.html'\r\n})\r\nexport class MinTimeDynamicComponent implements OnInit {\r\n    attandanceDetailFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder,private http: HttpClient    ) { }\r\n\r\n    ngOnInit() {\r\n        let attandanceDetail = new AttandanceDetail();\r\n        let formBuilderConfiguration = new FormBuilderConfiguration();\r\n\t\tthis.http.get('assets/examples/reactive-form-validators/decorators/minTime/dynamic/dynamic.json?v=' + environment.appVersion).subscribe(dynamic => {\r\n            formBuilderConfiguration.dynamicValidation = JSON.parse(JSON.stringify(dynamic));\r\n\t\t\tthis.attandanceDetailFormGroup = this.formBuilder.formGroup(attandanceDetail,formBuilderConfiguration);\r\n        })\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  *ngIf=\"attandanceDetailFormGroup\"  [formGroup]=\"attandanceDetailFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Entry Place</label>\r\n      <input type=\"text\" formControlName=\"entryPlace\" class=\"form-control\"   />\r\n      <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.entryPlace.errors\">{{attandanceDetailFormGroup.controls.entryPlace.errors.minTime.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Required Hours</label>\r\n      <input type=\"text\" formControlName=\"requiredHours\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Value should be greater than 8:30<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.requiredHours.errors\">{{attandanceDetailFormGroup.controls.requiredHours.errors.minTime.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Opening Time</label>\r\n      <input type=\"text\" formControlName=\"openingTime\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.openingTime.errors\">{{attandanceDetailFormGroup.controls.openingTime.errors.minTime.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Entry Time</label>\r\n      <input type=\"text\" formControlName=\"entryTime\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">To apply the validation of minTime on 'Entry Time' field, then enter the value of 'Main Entry Gate' in Entry Place textbox.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.entryTime.errors\">{{attandanceDetailFormGroup.controls.entryTime.errors.minTime.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Total Time Out</label>\r\n      <input type=\"text\" formControlName=\"totalOutTime\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This field allow seconds in input time.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.totalOutTime.errors\">{{attandanceDetailFormGroup.controls.totalOutTime.errors.minTime.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Exit Time</label>\r\n      <input type=\"text\" formControlName=\"exitTime\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.exitTime.errors\">{{attandanceDetailFormGroup.controls.exitTime.errors.minTime.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Net-In Time</label>\r\n      <input type=\"text\" formControlName=\"netInTime\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message using message key<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.netInTime.errors\">{{attandanceDetailFormGroup.controls.netInTime.errors.minTimeMessageKey.message}}<br/></small>\t\t\r\n    </div>\r\n    <button [disabled]=\"!attandanceDetailFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  minTime,prop, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class AttandanceDetail {\r\n\r\n\t@prop()\r\n\tentryPlace: string;\r\n\r\n\t@prop()\r\n\trequiredHours: string;\r\n\r\n\t@prop()\r\n\topeningTime: string;\r\n\r\n\t@prop()\r\n\tentryTime: string;\r\n\r\n\t@prop()\r\n\ttotalOutTime: string;\r\n\r\n\t@prop()\r\n\texitTime: string;\r\n\r\n\t@prop()\r\n\tnetInTime: string;\r\n\r\n}\r\n","modelName":"attandance-detail.model.ts","json":{"dynamic.json":"{\"entryPlace\":{},\"requiredHours\":{\"minTime\":{\"operator\":\">\",\"value\":\"08:30\"}},\"openingTime\":{\"minTime\":{\"value\":\"08:00\"}},\"entryTime\":{\"minTime\":{\"conditionalExpression\":\"x => x.entryPlace == \\\"Main Entry Gate\\\"\",\"fieldName\":\"openingTime\"}},\"totalOutTime\":{\"minTime\":{\"allowSeconds\":\"true\",\"value\":\"00:10:00\"}},\"exitTime\":{\"minTime\":{\"message\":\"You can enter only time format data greater than config value\",\"value\":\"07:00\"}},\"netInTime\":{\"minTime\":{\"messageKey\":\"minTimeMessageKey\",\"value\":\"08:30\"}}}"}},"add":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { AttandanceDetail } from './attandance-detail.model';\r\n\r\n@Component({\r\n    selector: 'app-minTime-add',\r\n    templateUrl: './min-time-add.component.html'\r\n})\r\nexport class MinTimeAddComponent implements OnInit {\r\n    attandanceDetailFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let attandanceDetail = new AttandanceDetail();\r\n        this.attandanceDetailFormGroup = this.formBuilder.formGroup(attandanceDetail);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"attandanceDetailFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Entry Time</label>\r\n      <input type=\"text\" formControlName=\"entryTime\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.entryTime.errors\">{{attandanceDetailFormGroup.controls.entryTime.errors.minTime.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!attandanceDetailFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  minTime, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class AttandanceDetail {\r\n\r\n\t@minTime({value:'08:00' }) \r\n\tentryTime: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"attandance-detail.model.ts","json":{}},"edit":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { AttandanceDetail } from './attandance-detail.model';\r\n\r\n@Component({\r\n    selector: 'app-minTime-edit',\r\n    templateUrl: './min-time-edit.component.html'\r\n})\r\nexport class MinTimeEditComponent implements OnInit {\r\n    attandanceDetailFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder,private http: HttpClient    ) { }\r\n\r\n    ngOnInit() {\r\n        this.http.get('assets/examples/reactive-form-validators/decorators/minTime/edit/attandance-detail-data.json?v=' + environment.appVersion).subscribe(attandanceDetail => {\r\n            this.attandanceDetailFormGroup = this.formBuilder.formGroup<AttandanceDetail>(AttandanceDetail,attandanceDetail);\r\n        })\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  *ngIf=\"attandanceDetailFormGroup\"  [formGroup]=\"attandanceDetailFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Entry Time</label>\r\n      <input type=\"text\" formControlName=\"entryTime\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.entryTime.errors\">{{attandanceDetailFormGroup.controls.entryTime.errors.minTime.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!attandanceDetailFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  minTime, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class AttandanceDetail {\r\n\r\n\t@minTime({value:'08:00' }) \r\n\tentryTime: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"attandance-detail.model.ts","json":{"attandance-detail-data.json":"{\"entryTime\":\"'10:00'\"}"}}}