{
  "complete": {
    "notes": [],
    "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-creditCardAsync-complete-validator',\r\n    templateUrl: './credit-card-async-complete.component.html'\r\n})\r\nexport class CreditCardAsyncCompleteValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n\t\t\t\tcreditCardTypes = [ \"Visa\", \"AmericanExpress\", \"Maestro\", \"JCB\", \"Discover\", \"DinersClub\", \"MasterCard\",];\r\n\t\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n            cardType:['',], \r\n       });\r\n    }\r\n}\r\n",
    "html": "<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Card Type<\/label>\r\n      <select formControlName=\"cardType\" class=\"form-control\">\r\n\t\t<option [value]=\"item\" *ngFor=\"let item of creditCardTypes\">{{item}}<\/option>\r\n      <\/select>\r\n      <small class=\"form-text text-muted\">Based on selection of card type conditional validation is applied<br\/><\/small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.cardType.errors\">{{userFormGroup.controls.cardType.errors.creditCard?.message}}<br\/><\/small>\t\r\n    <\/div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit<\/button>\r\n  <\/form>\r\n<\/div>\r\n",
    "model": null,
    "modelName": null,
    "json": {}
  },
  "dynamic": {
    "notes": [],
    "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormBuilderConfiguration,RxFormBuilder} from '@rxweb/reactive-form-validators';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n    selector: 'app-creditCardAsync-dynamic-validator',\r\n    templateUrl: './credit-card-async-dynamic.component.html'\r\n})\r\nexport class CreditCardAsyncDynamicValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n\t\t\t\tcreditCardTypes = [ \"Visa\", \"AmericanExpress\", \"Maestro\", \"JCB\", \"Discover\", \"DinersClub\", \"MasterCard\",];\r\n\t\r\n\tconstructor(\r\n        private formBuilder: RxFormBuilder , private http: HttpClient )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n\t\tlet formBuilderConfiguration = new FormBuilderConfiguration();\r\n\t\tthis.http.get('assets/examples/reactive-form-validators/validators/creditCardAsync/dynamic/dynamic.json?v='+environment.appVersion).subscribe(dynamic => {\r\n\t\t\tformBuilderConfiguration.dynamicValidation = JSON.parse(JSON.stringify(dynamic));\r\n\t\t\tvar user = { cardType:'',  }\r\n\t\t\tthis.userFormGroup = this.formBuilder.group(user,formBuilderConfiguration);\r\n\t\t})\r\n    }\r\n}\r\n",
    "html": "<div>\r\n  <form  *ngIf=\"userFormGroup\"  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Card Type<\/label>\r\n      <select formControlName=\"cardType\" class=\"form-control\">\r\n\t\t<option [value]=\"item\" *ngFor=\"let item of creditCardTypes\">{{item}}<\/option>\r\n      <\/select>\r\n      <small class=\"form-text text-muted\">Based on selection of card type conditional validation is applied<br/><\/small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.cardType.errors\">{{userFormGroup.controls.cardType.errors.creditCard.message}}<br/><\/small>\r\n    <\/div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit<\/button>\r\n  <\/form>\r\n<\/div>\r\n",
    "model": null,
    "modelName": null,
    "json": {
      "dynamic.json": {
        "cardType": {}
      }
    }
  },
  "add": {
    "notes": [],
    "component": "import { Component, OnInit } from '@angular\/core';\r\nimport { FormGroup, FormBuilder } from \"@angular\/forms\"\r\nimport { RxwebValidators } from '@rxweb\/reactive-form-validators';\r\nimport { of } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'app-creditCardAsync-add-validator',\r\n    templateUrl: '.\/credit-card-async-add.component.html'\r\n})\r\nexport class CreditCardAsyncAddValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n\t\t\t\tcreditCardTypes = [ \"Visa\", \"AmericanExpress\", \"Maestro\", \"JCB\", \"Discover\", \"DinersClub\", \"MasterCard\",];\r\n\t\r\n\t\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n            cardType:['',], \r\n            creditCardNumber:['',[], RxwebValidators.creditCardAsync({validatorConfig:of({fieldName:'cardType'})})], \r\n       });\r\n    }\r\n}\r\n",
    "html": "<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Card Type<\/label>\r\n      <select formControlName=\"cardType\" class=\"form-control\">\r\n\t\t<option [value]=\"item\" *ngFor=\"let item of creditCardTypes\">{{item}}<\/option>\r\n      <\/select>\r\n      <small class=\"form-text text-muted\">Based on selection of card type conditional validation is applied<br/><\/small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.cardType.errors\">{{userFormGroup.controls.cardType.errors.creditCard.message}}<br/><\/small>\t\r\n    <\/div>\r\n    <div class=\"form-group\">\r\n      <label>Credit Card No.<\/label>\r\n      <input type=\"text\" formControlName=\"creditCardNumber\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Enter Selected Card's Card No<br/><\/small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.creditCardNumber.errors\">{{userFormGroup.controls.creditCardNumber.errors.creditCard.message}}<br/><\/small>\t\r\n    <\/div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit<\/button>\r\n  <\/form>\r\n<\/div>\r\n",
    "model": null,
    "modelName": null,
    "json": {}
  }
}