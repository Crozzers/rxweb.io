{
    "complete":{
        "json":"{\r\n    \"employeeName\":{\r\n        \"alpha\":true,\r\n        \"message\":\"Only Alphabets are Allowed\"\r\n    },\r\n    \"contactNumber\":{\r\n        \"numeric\":{\"isFormat\":\"true\"},\r\n        \"message\":\"Only Numbers are Allowed\"\r\n    },\r\n    \"dateOfJoining\":{\r\n        \"date\":true,\r\n        \"message\":\"Invalid Date Format\"\r\n    },\r\n    \"designation\":{\r\n        \"alpha\":true,\r\n        \"required\":true,\r\n        \"alphaMessage\":\"Only Alphabets are required\",\r\n        \"requiredMessage\":\"This field is required\"\r\n    }\r\n}",
        "model":"export class Employee{\r\n \r\n    @prop()\r\n    employeeName:string;\r\n\r\n    @prop()\r\n    contactNumber:string;\r\n    \r\n    @prop()\r\n    dateOfJoining:string;\r\n\r\n    @prop()\r\n    designation:string;\r\n}",
        "component":"export class EmployeeComponent implements OnInit {\r\n  employeeFormGroup: RxFormGroup\r\n  constructor(private formBuilder: RxFormBuilder,private http:HttpClient) { }\r\n\r\n  ngOnInit(): void {\r\n    let employee = new Employee();\r\n    let formBuilderConfiguration = new FormBuilderConfiguration();\r\n    this.http.get('assets\/json\/employee-dynamic.json').subscribe(dynamic => {\r\n      formBuilderConfiguration.dynamicValidation = JSON.parse(JSON.stringify(dynamic));\r\n      this.employeeFormGroup = <RxFormGroup>this.formBuilder.formGroup(employee, formBuilderConfiguration);\r\n    })\r\n  }\r\n}"
    },
    "message":{
       "component":"export class EmployeeComponent implements OnInit {\r\n  employeeFormGroup: RxFormGroup\r\n  constructor(private formBuilder: RxFormBuilder,private http:HttpClient) { }\r\n\r\n  ngOnInit(): void {\r\n    let employee = new Employee();\r\n    let formBuilderConfiguration = new FormBuilderConfiguration();\r\n    this.http.get('assets\/json\/employee-dynamic.json').subscribe(dynamic => {\r\n      formBuilderConfiguration.dynamicValidation = JSON.parse(JSON.stringify(dynamic));\r\n      this.employeeFormGroup = <RxFormGroup>this.formBuilder.formGroup(employee, formBuilderConfiguration);\r\n      this.employeeFormGroup.setBackEndErrors(\r\n        {\r\n          employeeName: { 'alpha': formBuilderConfiguration.dynamicValidation['employeeName']['message'] },\r\n          contactNumber: { 'numeric':formBuilderConfiguration.dynamicValidation['contactNumber']['message'] },\r\n          dateOfJoining: { 'date': formBuilderConfiguration.dynamicValidation['dateOfJoining']['message'] },\r\n          designation: { 'alpha': formBuilderConfiguration.dynamicValidation['designation']['alphaMessage'], \r\n          'required': formBuilderConfiguration.dynamicValidation['designation']['requiredMessage']}\r\n        });\r\n    })\r\n  }\r\n}",
       "html":"<div class=\"container\">\r\n  <form *ngIf=\"employeeFormGroup\" [formGroup]=\"employeeFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>EmployeeName<\/label>\r\n      <input type=\"text\" formControlName=\"employeeName\" class=\"form-control\" \/>\r\n      <small class=\"form-text text-danger\"\r\n        *ngIf=\"employeeFormGroup.controls.employeeName?.errors\">{{employeeFormGroup.controls.employeeName?.errorMessage}}<br \/><\/small>\r\n    <\/div>\r\n    <div class=\"form-group\">\r\n      <label>ContactNumber<\/label>\r\n      <input type=\"text\" formControlName=\"contactNumber\" class=\"form-control\" \/>\r\n      <small class=\"form-text text-danger\"\r\n        *ngIf=\"employeeFormGroup.controls.contactNumber?.errors\">{{employeeFormGroup.controls.contactNumber?.errorMessage}}<br \/><\/small>\r\n    <\/div>\r\n    <div class=\"form-group\">\r\n      <label>DateOfJoining<\/label>\r\n      <input type=\"text\" formControlName=\"dateOfJoining\" class=\"form-control\" \/>\r\n      <small class=\"form-text text-danger\"\r\n        *ngIf=\"employeeFormGroup.controls.dateOfJoining?.errors\">{{employeeFormGroup.controls.dateOfJoining?.errorMessage}}<br \/><\/small>\r\n    <\/div>\r\n    <div class=\"form-group\">\r\n      <label>Designation<\/label>\r\n      <input type=\"text\" formControlName=\"designation\" class=\"form-control\" \/>\r\n      <small class=\"form-text text-danger\"\r\n        *ngIf=\"employeeFormGroup.controls.designation?.errors\">{{employeeFormGroup.controls.designation?.errorMessage}}<br \/><\/small>\r\n    <\/div>\r\n    <button [disabled]=\"!employeeFormGroup.valid\" class=\"btn btn-primary\">Submit<\/button>\r\n  <\/form>\r\n<\/div>" 
    }
}