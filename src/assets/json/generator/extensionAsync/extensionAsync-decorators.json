{"complete":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-extensionAsync-complete',\r\n    templateUrl: './extension-async-complete.component.html'\r\n})\r\nexport class ExtensionAsyncCompleteComponent implements OnInit {\r\n    userInfoFormGroup: FormGroup\r\n\t\t\t\tfileTypes = [ \"Picture\", \"Document\",];\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let userInfo = new UserInfo();\r\n        this.userInfoFormGroup = this.formBuilder.formGroup(userInfo);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>File Type</label>\r\n      <select formControlName=\"fileType\" class=\"form-control\">\r\n\t\t<option [value]=\"item\" *ngFor=\"let item of fileTypes\">{{item}}</option>\r\n      </select>\r\n      <small class=\"form-text text-muted\">Based on selection of file type conditional validation is applied<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.fileType.errors\">{{userInfoFormGroup.controls.fileType.errors.extension.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Profile Picture</label>\r\n      <input type=\"file\" formControlName=\"profilePicture\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This field only allow file extension as jpg or bmp only.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.profilePicture.errors\">{{userInfoFormGroup.controls.profilePicture.errors.extension.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Contact File</label>\r\n      <input type=\"file\" formControlName=\"contactFile\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This field only allow file extension as .vcf files.<br/></small>\r\n      <small class=\"form-text text-muted\">It shows custom message<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.contactFile.errors\">{{userInfoFormGroup.controls.contactFile.errors.extension.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Excel File</label>\r\n      <input type=\"file\" formControlName=\"excelFile\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows custom message based on message key<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.excelFile.errors\">{{userInfoFormGroup.controls.excelFile.errors.extensionMessageKey.message}}<br/></small>\t\t\r\n    </div>\r\n    <button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  extensionAsync,prop, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class UserInfo {\r\n\r\n\t@prop()\r\n\tfileType: string;\r\n\r\n\t@extensionAsync({validatorConfig:of({extensions:['jpg','bmp'] })})\r\n\tprofilePicture: string;\r\n\t\r\n\t\r\n\t@extensionAsync({validatorConfig:of({extensions:['vcf']  ,message:'You can upload only .vcf files.' })})\r\n\tcontactFile: string;\r\n\t\r\n\t\r\n\t@extensionAsync({validatorConfig:of({extensions:['xls','xlsx']  ,messageKey:'extensionMessageKey' })})\r\n\texcelFile: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"user-info.model.ts","json":{}},"extensionsExample":{"notes":null,"component":null,"html":null,"model":"@extensionAsync({validatorConfig:of({extensions:['jpg','bmp'] })})\r\nprofilePicture: string;\r\n","modelName":null,"json":{}},"extensions":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-extensionAsync-extensions',\r\n    templateUrl: './extension-async-extensions.component.html'\r\n})\r\nexport class ExtensionAsyncExtensionsComponent implements OnInit {\r\n    userInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let userInfo = new UserInfo();\r\n        this.userInfoFormGroup = this.formBuilder.formGroup(userInfo);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Profile Picture</label>\r\n      <input type=\"file\" formControlName=\"profilePicture\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This field only allow file extension as jpg or bmp only.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.profilePicture.errors\">{{userInfoFormGroup.controls.profilePicture.errors.extension.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  extensionAsync, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class UserInfo {\r\n\r\n\t@extensionAsync({validatorConfig:of({extensions:['jpg','bmp'] })})\r\n\tprofilePicture: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"user-info.model.ts","json":{}},"messageExample":{"notes":null,"component":null,"html":null,"model":"@extensionAsync({validatorConfig:of({extensions:['vcf']  ,message:'You can upload only .vcf files.' })})\r\ncontactFile: string;\r\n","modelName":null,"json":{}},"message":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-extensionAsync-message',\r\n    templateUrl: './extension-async-message.component.html'\r\n})\r\nexport class ExtensionAsyncMessageComponent implements OnInit {\r\n    userInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let userInfo = new UserInfo();\r\n        this.userInfoFormGroup = this.formBuilder.formGroup(userInfo);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Contact File</label>\r\n      <input type=\"file\" formControlName=\"contactFile\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This field only allow file extension as .vcf files.<br/></small>\r\n      <small class=\"form-text text-muted\">It shows custom message<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.contactFile.errors\">{{userInfoFormGroup.controls.contactFile.errors.extension.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  extensionAsync, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class UserInfo {\r\n\r\n\t@extensionAsync({validatorConfig:of({extensions:['vcf']  ,message:'You can upload only .vcf files.' })})\r\n\tcontactFile: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"user-info.model.ts","json":{}},"messageKeyExample":{"notes":null,"component":null,"html":null,"model":"@extensionAsync({validatorConfig:of({extensions:['xls','xlsx']  ,messageKey:'extensionMessageKey' })})\r\nexcelFile: string;\r\n","modelName":null,"json":{}},"messageKey":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-extensionAsync-messageKey',\r\n    templateUrl: './extension-async-message-key.component.html'\r\n})\r\nexport class ExtensionAsyncMessageKeyComponent implements OnInit {\r\n    userInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let userInfo = new UserInfo();\r\n        this.userInfoFormGroup = this.formBuilder.formGroup(userInfo);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Excel File</label>\r\n      <input type=\"file\" formControlName=\"excelFile\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows custom message based on message key<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.excelFile.errors\">{{userInfoFormGroup.controls.excelFile.errors.extensionMessageKey.message}}<br/></small>\t\t\r\n    </div>\r\n    <button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  extensionAsync, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class UserInfo {\r\n\r\n\t@extensionAsync({validatorConfig:of({extensions:['xls','xlsx']  ,messageKey:'extensionMessageKey' })})\r\n\texcelFile: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"user-info.model.ts","json":{}},"dynamic":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\nimport { FormBuilderConfiguration,} from '@rxweb/reactive-form-validators';\r\n\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-extensionAsync-dynamic',\r\n    templateUrl: './extension-async-dynamic.component.html'\r\n})\r\nexport class ExtensionAsyncDynamicComponent implements OnInit {\r\n    userInfoFormGroup: FormGroup\r\n\t\t\t\tfileTypes = [ \"Picture\", \"Document\",];\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder,private http: HttpClient    ) { }\r\n\r\n    ngOnInit() {\r\n        let userInfo = new UserInfo();\r\n        let formBuilderConfiguration = new FormBuilderConfiguration();\r\n\t\tthis.http.get('assets/examples/reactive-form-validators/decorators/extensionAsync/dynamic/dynamic.json?v=' + environment.appVersion).subscribe(dynamic => {\r\n            formBuilderConfiguration.dynamicValidation = JSON.parse(JSON.stringify(dynamic));\r\n\t\t\tthis.userInfoFormGroup = this.formBuilder.formGroup(userInfo,formBuilderConfiguration);\r\n        })\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  *ngIf=\"userInfoFormGroup\"  [formGroup]=\"userInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>File Type</label>\r\n      <select formControlName=\"fileType\" class=\"form-control\">\r\n\t\t<option [value]=\"item\" *ngFor=\"let item of fileTypes\">{{item}}</option>\r\n      </select>\r\n      <small class=\"form-text text-muted\">Based on selection of file type conditional validation is applied<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.fileType.errors\">{{userInfoFormGroup.controls.fileType.errors.extension.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Profile Picture</label>\r\n      <input type=\"file\" formControlName=\"profilePicture\" class=\"form-control\"   />\r\n      <small class=\"form-text text-muted\">This field only allow file extension as jpg or bmp only.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.profilePicture.errors\">{{userInfoFormGroup.controls.profilePicture.errors.extension.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Contact File</label>\r\n      <input type=\"file\" formControlName=\"contactFile\" class=\"form-control\"   />\r\n      <small class=\"form-text text-muted\">This field only allow file extension as .vcf files.<br/></small>\r\n      <small class=\"form-text text-muted\">It shows custom message<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.contactFile.errors\">{{userInfoFormGroup.controls.contactFile.errors.extension.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Excel File</label>\r\n      <input type=\"file\" formControlName=\"excelFile\" class=\"form-control\"   />\r\n      <small class=\"form-text text-muted\">Shows custom message based on message key<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.excelFile.errors\">{{userInfoFormGroup.controls.excelFile.errors.extensionMessageKey.message}}<br/></small>\t\t\r\n    </div>\r\n    <button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  extensionAsync,prop, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class UserInfo {\r\n\r\n\t@prop()\r\n\tfileType: string;\r\n\r\n\t@prop()\r\n\tprofilePicture: string;\r\n\r\n\t@prop()\r\n\tcontactFile: string;\r\n\r\n\t@prop()\r\n\texcelFile: string;\r\n\r\n}\r\n","modelName":"user-info.model.ts","json":{"dynamic.json":"{\"fileType\":{},\"profilePicture\":{\"extensionAsync\":{\"extensions\":\"[jpg,bmp]\"}},\"contactFile\":{\"extensionAsync\":{\"extensions\":\"[vcf]\",\"message\":\"You can upload only .vcf files.\"}},\"excelFile\":{\"extensionAsync\":{\"extensions\":\"[xls,xlsx]\",\"messageKey\":\"extensionMessageKey\"}}}"}},"add":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-extensionAsync-add',\r\n    templateUrl: './extension-async-add.component.html'\r\n})\r\nexport class ExtensionAsyncAddComponent implements OnInit {\r\n    userInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let userInfo = new UserInfo();\r\n        this.userInfoFormGroup = this.formBuilder.formGroup(userInfo);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Profile Picture</label>\r\n      <input type=\"file\" formControlName=\"profilePicture\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This field only allow file extension as jpg or bmp only.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.profilePicture.errors\">{{userInfoFormGroup.controls.profilePicture.errors.extension.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  extensionAsync, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class UserInfo {\r\n\r\n\t@extensionAsync({validatorConfig:of({extensions:['jpg','bmp'] })})\r\n\tprofilePicture: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"user-info.model.ts","json":{}},"edit":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-extensionAsync-edit',\r\n    templateUrl: './extension-async-edit.component.html'\r\n})\r\nexport class ExtensionAsyncEditComponent implements OnInit {\r\n    userInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder,private http: HttpClient    ) { }\r\n\r\n    ngOnInit() {\r\n        this.http.get('assets/examples/reactive-form-validators/decorators/extensionAsync/edit/user-info-data.json?v=' + environment.appVersion).subscribe(userInfo => {\r\n            this.userInfoFormGroup = this.formBuilder.formGroup<UserInfo>(UserInfo,userInfo);\r\n        })\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  *ngIf=\"userInfoFormGroup\"  [formGroup]=\"userInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Profile Picture</label>\r\n      <input type=\"file\" formControlName=\"profilePicture\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This field only allow file extension as jpg or bmp only.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.profilePicture.errors\">{{userInfoFormGroup.controls.profilePicture.errors.extension.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  extensionAsync, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class UserInfo {\r\n\r\n\t@extensionAsync({validatorConfig:of({extensions:['jpg','bmp'] })})\r\n\tprofilePicture: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"user-info.model.ts","json":{"user-info-data.json":"{\"profilePicture\":\"google.jpg\"}"}}}