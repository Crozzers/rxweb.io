{
    "complete": {
        "notes": [],
        "component": "import { Component, OnInit } from '@angular/core';\r\nimport { RxFormGroup,RxFormBuilder ,FormGroupExtension} from '@rxweb/reactive-form-validators';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n    selector: 'app-reset-complete-validator',\r\n    templateUrl: './reset-complete.component.html'\r\n})\r\nexport class ResetCompleteValidatorComponent implements OnInit {\r\n    userFormGroup: RxFormGroup\r\n    \r\n\tconstructor(\r\n        private formBuilder: RxFormBuilder, private http: HttpClient )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n              \r\n   this.userFormGroup = <RxFormGroup>this.formBuilder.group({\r\n    firstName:[''],\r\n    lastName:[''],\r\n    userName:[''],\r\n    password:['']\r\n        });\r\n    }\r\n     resetForm(){\r\n        this.userFormGroup.resetForm();\r\n       \r\n      }\r\n}\r\n",
        "html": "<div>\r\n    <form  [formGroup]=\"userInfoFormGroup\">\r\n      <div class=\"form-group\">\r\n        <label>FirstName</label>\r\n        <input type=\"text\" formControlName=\"firstName\" class=\"form-control\"  />      \r\n      </div>\r\n    \r\n  \r\n        <div class=\"form-group\" [formGroup]=\"userInfoFormGroup.controls.address\">\r\n        <label>areaName</label>\r\n        <input type=\"text\" formControlName=\"areaName\" class=\"form-control\"  />   \r\n      </div>\r\n   \r\n        <div class=\"form-group\" [formGroup]=\"hobbyGroup\" *ngFor=\"let hobbyGroup of getFormArray()\">\r\n        <label>Name</label>\r\n        <input type=\"text\" formControlName=\"name\" class=\"form-control\"  />      \r\n      </div>\r\n  \r\n      <button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n        <button (click)=\"modifiedvalue()\" class=\"btn btn-primary\">Update</button>\r\n    </form>\r\n  </div>\r\n  ",
        "model": null,
        "modelName": null,
        "json": {}
    },
    "controlsOnly": {
        "notes": [],
        "component": "import { Component, OnInit } from '@angular/core';\r\nimport { RxFormGroup,RxFormBuilder ,FormGroupExtension,ResetFormType} from '@rxweb/reactive-form-validators';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport {FormArray} from '@angular/forms';\r\n\r\n@Component({\r\n    selector: 'app-reset-controlsOnly-validator',\r\n    templateUrl: './reset-controls-only.component.html'\r\n})\r\nexport class ResetControlsOnlyValidatorComponent implements OnInit {\r\n    userFormGroup: RxFormGroup\r\n    \r\n\tconstructor(\r\n        private formBuilder: RxFormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n              \r\n   this.userFormGroup = <RxFormGroup>this.formBuilder.group({\r\n     firstName:[''],       \r\n        });\r\n    }\r\n   \r\n     resetForm(){\r\n        this.userFormGroup.resetForm({resetType:ResetFormType.ControlsOnly});       \r\n      }\r\n}\r\n",
        "html": "<div>\r\n    <form  [formGroup]=\"userFormGroup\">\r\n      <div class=\"form-group\">\r\n      <label>FirstName</label>\r\n      <input type=\"text\" formControlName=\"firstName\" class=\"form-control\"  />      \r\n    </div>\r\n  \r\n      <button [disabled]=\"!userFormGroup.valid\"  class=\"btn btn-primary\">Submit</button>\r\n       <button (click)=\"resetForm()\"  class=\"btn btn-primary\">Reset</button>\r\n    </form>\r\n  </div>\r\n  ",
        "model": null,
        "modelName": null,
        "json": {}
    },
    "formGroupsOnly": {
        "notes": [],
        "component": "import { Component, OnInit } from '@angular/core';\r\nimport { RxFormGroup,RxFormBuilder ,FormGroupExtension,ResetFormType} from '@rxweb/reactive-form-validators';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport {FormArray} from '@angular/forms';\r\n\r\n@Component({\r\n    selector: 'app-reset-formGroupsOnly-validator',\r\n    templateUrl: './reset-form-groups-only.component.html'\r\n})\r\nexport class ResetFormGroupsOnlyValidatorComponent implements OnInit {\r\n    userFormGroup: RxFormGroup\r\n    \r\n\tconstructor(\r\n        private formBuilder: RxFormBuilder, private http: HttpClient )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n              \r\n   this.userFormGroup = <RxFormGroup>this.formBuilder.group({\r\n   \r\n          address:{\r\n            areaName:''\r\n          }        \r\n        });\r\n    }\r\n  \r\n     resetForm(){\r\n        this.userFormGroup.resetForm({resetType:ResetFormType.FormGroupsOnly});\r\n       \r\n      }\r\n}\r\n",
        "html": "<div>\r\n    <form  [formGroup]=\"userFormGroup\">\r\n    \r\n      <div class=\"form-group\" [formGroup]=\"userFormGroup.controls.address\">\r\n      <label>areaName</label>\r\n      <input type=\"text\" formControlName=\"areaName\" class=\"form-control\"  />   \r\n    </div>\r\n \r\n      <button [disabled]=\"!userFormGroup.valid\"  class=\"btn btn-primary\">Submit</button>\r\n       <button (click)=\"resetForm()\"  class=\"btn btn-primary\">Reset</button>\r\n    </form>\r\n  </div>\r\n  ",
        "model": null,
        "modelName": null,
        "json": {}
    },
    "formArraysOnly": {
        "notes": [],
        "component": "import { Component, OnInit } from '@angular/core';\r\nimport { RxFormGroup,RxFormBuilder ,FormGroupExtension,ResetFormType} from '@rxweb/reactive-form-validators';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport {FormArray} from '@angular/forms';\r\n\r\n@Component({\r\n    selector: 'app-reset-formArraysOnly-validator',\r\n    templateUrl: './reset-form-arrays-only.component.html'\r\n})\r\nexport class ResetFormArraysOnlyValidatorComponent implements OnInit {\r\n    userFormGroup: RxFormGroup\r\n    \r\n\tconstructor(\r\n        private formBuilder: RxFormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n              \r\n   this.userFormGroup = <RxFormGroup>this.formBuilder.group({\r\n\r\n          hobbies:[\r\n          {\r\n            name:''\r\n          }]\r\n        });\r\n    }\r\n    getFormArray(){\r\n      let formarray = this.userFormGroup.controls.hobbies as FormArray;\r\n      return formarray.controls;\r\n    }\r\n     resetForm(){\r\n        this.userFormGroup.resetForm({resetType:ResetFormType.FormArraysOnly});\r\n       \r\n      }\r\n}\r\n",
        "html": "<div>\r\n    <form  [formGroup]=\"userFormGroup\">\r\n    \r\n \r\n      <div class=\"form-group\" [formGroup]=\"hobbyGroup\" *ngFor=\"let hobbyGroup of getFormArray()\">\r\n      <label>Hobby</label>\r\n      <input type=\"text\" formControlName=\"name\" class=\"form-control\"  />      \r\n    </div>\r\n      <button [disabled]=\"!userFormGroup.valid\"  class=\"btn btn-primary\">Submit</button>\r\n       <button (click)=\"resetForm()\"  class=\"btn btn-primary\">Reset</button>\r\n    </form>\r\n  </div>\r\n  ",
        "model": null,
        "modelName": null,
        "json": {}
    },
    "controlsAndFormgroupsOnly": {
        "notes": [],
        "component": "import { Component, OnInit } from '@angular/core';\r\nimport { RxFormGroup,RxFormBuilder ,FormGroupExtension,ResetFormType} from '@rxweb/reactive-form-validators';\r\n\r\n\r\n@Component({\r\n    selector: 'app-reset-controlsAndFormgroupsOnly-validator',\r\n    templateUrl: './reset-controls-and-formgroups-only.component.html'\r\n})\r\nexport class ResetControlsAndFormgroupsOnlyValidatorComponent implements OnInit {\r\n    userFormGroup: RxFormGroup\r\n    \r\n\tconstructor(\r\n        private formBuilder: RxFormBuilder)\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n              \r\n   this.userFormGroup = <RxFormGroup>this.formBuilder.group({\r\n     firstName:[''],\r\n          address:{\r\n            areaName:''\r\n          },\r\n        });\r\n    }\r\n   \r\n     resetForm(){\r\n        this.userFormGroup.resetForm({resetType:ResetFormType.ControlsAndFormGroupsOnly});\r\n       \r\n      }\r\n}\r\n",
        "html": "<div>\r\n    <form  [formGroup]=\"userFormGroup\">\r\n      <div class=\"form-group\">\r\n      <label>FirstName</label>\r\n      <input type=\"text\" formControlName=\"firstName\" class=\"form-control\"  />      \r\n    </div>  \r\n\r\n      <div class=\"form-group\" [formGroup]=\"userFormGroup.controls.address\">\r\n      <label>areaName</label>\r\n      <input type=\"text\" formControlName=\"areaName\" class=\"form-control\"  />   \r\n    </div>\r\n\r\n    <button [disabled]=\"!userFormGroup.valid\"  class=\"btn btn-primary\">Submit</button>\r\n       <button (click)=\"resetForm()\"  class=\"btn btn-primary\">Reset</button>\r\n    </form>\r\n  </div>\r\n  ",
        "model": null,
        "modelName": null,
        "json": {}
    },
    "all": {
        "notes": [],
        "component": "import { Component, OnInit } from '@angular/core';\r\nimport { RxFormGroup,RxFormBuilder ,FormGroupExtension,ResetFormType} from '@rxweb/reactive-form-validators';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport {FormArray} from '@angular/forms';\r\n\r\n@Component({\r\n    selector: 'app-reset-all-validator',\r\n    templateUrl: './reset-all.component.html'\r\n})\r\nexport class ResetAllValidatorComponent implements OnInit {\r\n    userFormGroup: RxFormGroup\r\n    \r\n\tconstructor(\r\n        private formBuilder: RxFormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n              \r\n   this.userFormGroup = <RxFormGroup>this.formBuilder.group({\r\n       firstName:[''],\r\n          address:{\r\n            areaName:''\r\n          },\r\n          hobbies:[\r\n          {\r\n            name:''\r\n          }]\r\n        });\r\n    }\r\n     getFormArray(){\r\n      let formarray = this.userFormGroup.controls.hobbies as FormArray;\r\n      return formarray.controls;\r\n    }\r\n   \r\n     resetForm(){\r\n        this.userFormGroup.resetForm({resetType:ResetFormType.All});       \r\n      }\r\n}\r\n",
        "html": "<div>\r\n    <form  [formGroup]=\"userFormGroup\">\r\n     <div class=\"form-group\">\r\n      <label>FirstName</label>\r\n      <input type=\"text\" formControlName=\"firstName\" class=\"form-control\"  />      \r\n    </div>\r\n  \r\n      <div class=\"form-group\" [formGroup]=\"userFormGroup.controls.address\">\r\n      <label>areaName</label>\r\n      <input type=\"text\" formControlName=\"areaName\" class=\"form-control\"  />   \r\n    </div>\r\n \r\n      <div class=\"form-group\" [formGroup]=\"hobbyGroup\" *ngFor=\"let hobbyGroup of getFormArray()\">\r\n      <label>Name</label>\r\n      <input type=\"text\" formControlName=\"name\" class=\"form-control\"  />      \r\n    </div>\r\n  \r\n      <button [disabled]=\"!userFormGroup.valid\"  class=\"btn btn-primary\">Submit</button>\r\n       <button (click)=\"resetForm()\"  class=\"btn btn-primary\">Reset</button>\r\n    </form>\r\n  </div>\r\n  ",
        "model": null,
        "modelName": null,
        "json": {}
    },
    "with": {
        "notes": [],
        "component": "import { Component, OnInit } from '@angular/core';\r\nimport { RxFormGroup,RxFormBuilder ,FormGroupExtension,ResetFormType} from '@rxweb/reactive-form-validators';\r\n\r\n\r\n@Component({\r\n    selector: 'app-reset-with-validator',\r\n    templateUrl: './reset-with.component.html'\r\n})\r\nexport class ResetWithValidatorComponent implements OnInit {\r\n    userFormGroup: RxFormGroup\r\n    \r\n\tconstructor(\r\n        private formBuilder: RxFormBuilder)\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n              \r\n   this.userFormGroup = <RxFormGroup>this.formBuilder.group({\r\n     firstName:[''],\r\n          address:{\r\n            areaName:''\r\n          },\r\n        });\r\n    }\r\n   \r\n     resetForm(){\r\n        this.userFormGroup.resetForm({ with: [\"firstName\",\"address.areaName\"] });\r\n       \r\n      }\r\n}\r\n",
        "html": "<div>\r\n    <form  [formGroup]=\"userFormGroup\">\r\n      <div class=\"form-group\">\r\n      <label>FirstName</label>\r\n      <input type=\"text\" formControlName=\"firstName\" class=\"form-control\"  />      \r\n    </div>  \r\n\r\n      <div class=\"form-group\" [formGroup]=\"userFormGroup.controls.address\">\r\n      <label>areaName</label>\r\n      <input type=\"text\" formControlName=\"areaName\" class=\"form-control\"  />   \r\n    </div>\r\n\r\n    <button [disabled]=\"!userFormGroup.valid\"  class=\"btn btn-primary\">Submit</button>\r\n       <button (click)=\"resetForm()\"  class=\"btn btn-primary\">Reset</button>\r\n    </form>\r\n  </div>\r\n  ",
        "model": null,
        "modelName": null,
        "json": {}
    },
    "value": {
        "notes": [],
        "component": "import { Component, OnInit } from '@angular/core';\r\nimport { RxFormGroup,RxFormBuilder ,FormGroupExtension,ResetFormType} from '@rxweb/reactive-form-validators';\r\n\r\n\r\n@Component({\r\n    selector: 'app-reset-value-validator',\r\n    templateUrl: './reset-value.component.html'\r\n})\r\nexport class ResetValueValidatorComponent implements OnInit {\r\n    userFormGroup: RxFormGroup\r\n    \r\n\tconstructor(\r\n        private formBuilder: RxFormBuilder)\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n              \r\n   this.userFormGroup = <RxFormGroup>this.formBuilder.group({\r\n     firstName:['']\r\n   })\r\n    }\r\n   \r\n     resetForm(){\r\n        this.userFormGroup.resetForm({ value: { firstName: 'John' } });\r\n       \r\n      }\r\n}\r\n",
        "html": "<div>\r\n    <form  [formGroup]=\"userFormGroup\">\r\n      <div class=\"form-group\">\r\n      <label>FirstName</label>\r\n      <input type=\"text\" formControlName=\"firstName\" class=\"form-control\"  />      \r\n    </div>  \r\n\r\n    <button [disabled]=\"!userFormGroup.valid\"  class=\"btn btn-primary\">Submit</button>\r\n       <button (click)=\"resetForm()\"  class=\"btn btn-primary\">Reset</button>\r\n    </form>\r\n  </div>",
        "model": null,
        "modelName": null,
        "json": {}
    },
    "definedPropsOnly": {
        "notes": [],
        "component": "import { Component, OnInit } from '@angular/core';\r\nimport { RxFormGroup,RxFormBuilder ,FormGroupExtension,ResetFormType} from '@rxweb/reactive-form-validators';\r\n\r\n\r\n@Component({\r\n    selector: 'app-reset-definedPropsOnly-validator',\r\n    templateUrl: './reset-defined-props-only.component.html'\r\n})\r\nexport class ResetDefinedPropsOnlyValidatorComponent implements OnInit {\r\n    userFormGroup: RxFormGroup\r\n    \r\n\tconstructor(\r\n        private formBuilder: RxFormBuilder)\r\n\t{ }\r\n\r\n    ngOnInit() {              \r\n   this.userFormGroup = <RxFormGroup>this.formBuilder.group({\r\n     firstName:['']\r\n   })\r\n    }\r\n   \r\n     resetForm(){\r\n        this.userFormGroup.resetForm({resetType:ResetFormType.DefinedPropsOnly,value:{ firstName: 'John' }});\r\n       \r\n      }\r\n}\r\n",
        "html": "<div>\r\n    <form  [formGroup]=\"userFormGroup\">\r\n      <div class=\"form-group\">\r\n      <label>FirstName</label>\r\n      <input type=\"text\" formControlName=\"firstName\" class=\"form-control\"  />      \r\n    </div>  \r\n\r\n    <button [disabled]=\"!userFormGroup.valid\"  class=\"btn btn-primary\">Submit</button>\r\n       <button (click)=\"resetForm()\"  class=\"btn btn-primary\">Reset</button>\r\n    </form>\r\n  </div>",
        "model": null,
        "modelName": null,
        "json": {}
    }
}