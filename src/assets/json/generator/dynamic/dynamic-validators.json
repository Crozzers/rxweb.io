{
    "basic": {
        "notes": "ui-bindings",
        "component": "import { Component, OnInit } from \"@angular/core\";\r\nimport { DynamicFormBuildConfig, DynamicFormConfiguration, RxDynamicFormBuilder } from \"@rxweb/reactive-dynamic-forms\";\r\n\r\n@Component({\r\n    selector: 'app-dynamic-basic',\r\n    templateUrl: './dynamic-basic.component.html'\r\n})\r\n\r\nexport class DynamicBasicComponent implements OnInit {\r\n    serverData = [{\r\n        name: \"email\",\r\n        type: \"text\",\r\n        ui: {\r\n            label: \"Email address\",\r\n            placeholder: \"Enter email\",\r\n            description: \"We'll never share your email with anyone else.\"\r\n        }\r\n    },\r\n    {\r\n        name: \"password\",\r\n        type: \"text\",\r\n        ui: {\r\n            label: \"Password\",\r\n            placeholder: \"Password\"\r\n        }\r\n    },\r\n    {\r\n        name: \"checkmeout\",\r\n        type: \"checkbox\",\r\n        source: [{value: 1, text: \"Check me out\"}]\r\n    }\r\n    ]\r\n\r\n    uiBindings: string[] = [\"email\",\"password\",\"checkmeout\"];\r\n    dynamicFormBuildConfig: DynamicFormBuildConfig;\r\n\r\n    constructor(private formBuilder: RxDynamicFormBuilder) { }\r\n    ngOnInit() {\r\n        this.dynamicFormBuildConfig = this.formBuilder.formGroup(this.serverData, {});\r\n    }\r\n}",
        "html": "<form [formGroup]=\"dynamicFormBuildConfig.formGroup\">\r\n    <div viewMode=\"basic\" [rxwebDynamicForm]=\"dynamicFormBuildConfig\" [uiBindings]=\"uiBindings\">\r\n    </div>\r\n    <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\r\n</form>",
        "model": null,
        "modelName": null,
        "json": {}
    },
    "plainText": {
        "notes": "ui-bindings",
        "component": "import { Component, OnInit } from \"@angular/core\";\r\nimport { DynamicFormBuildConfig, DynamicFormConfiguration, RxDynamicFormBuilder } from \"@rxweb/reactive-dynamic-forms\";\r\n\r\n@Component({\r\n    selector: 'app-dynamic-plainText',\r\n    templateUrl: './dynamic-plain-text.component.html'\r\n})\r\n\r\nexport class DynamicPlainTextComponent implements OnInit {\r\n    serverData = [\r\n        {\r\n            name: \"email\",\r\n            type: \"text\",\r\n            value: \"email@example.com\",\r\n            ui: {\r\n                viewMode: {\r\n                    horizontal: {\r\n                        label: [\"col-sm-2\", \"col-form-label\"],\r\n                        div: [\"col-sm-10\"]\r\n                    }\r\n                },\r\n                label: \"Email\",\r\n                readonly: true\r\n            }\r\n        },\r\n        {\r\n            name: \"password\",\r\n            type: \"password\",\r\n            value: \"email@example.com\",\r\n            ui: {\r\n                viewMode: {\r\n                    horizontal: {\r\n                        label: [\"col-sm-2\", \"col-form-label\"],\r\n                        div: [\"col-sm-10\"]\r\n                    }\r\n                },\r\n                label: \"Password\",\r\n                placeholder: \"Password\"\r\n            }\r\n        },\r\n\r\n    ]\r\n\r\n    uiBindings: string[] = [\"email\",\"password\"];\r\n    dynamicFormBuildConfig: DynamicFormBuildConfig;\r\n\r\n    constructor(private formBuilder: RxDynamicFormBuilder) { }\r\n    ngOnInit() {\r\n        this.dynamicFormBuildConfig = this.formBuilder.formGroup(this.serverData, {\r\n            isPlainTextMode: true\r\n        });\r\n    }\r\n}",
        "html": "<form [formGroup]=\"dynamicFormBuildConfig.formGroup\">\r\n    <div viewMode=\"horizontal\" [rxwebDynamicForm]=\"dynamicFormBuildConfig\" [uiBindings]=\"uiBindings\">\r\n    </div>\r\n</form>",
        "model": null,
        "modelName": null,
        "json": {}
    },
    "disabledCheckbox": {
        "notes": "ui-bindings",
        "component": "import { Component, OnInit } from \"@angular/core\";\r\nimport { DynamicFormBuildConfig, DynamicFormConfiguration, RxDynamicFormBuilder } from \"@rxweb/reactive-dynamic-forms\";\r\n\r\n@Component({\r\n    selector: 'app-dynamic-disabledCheckbox',\r\n    templateUrl: './dynamic-disabled-checkbox.component.html'\r\n})\r\n\r\nexport class DynamicDisabledCheckboxComponent implements OnInit {\r\n    serverData = [\r\n        {\r\n            name: \"defaultCheckbox\",\r\n            type: \"checkbox\",\r\n            source: [{ value: 1, text: \"Default checkbox\" },{ value: 2, text: \"Disabled checkbox\", disabled: true }]\r\n        }\r\n    ]\r\n\r\n    uiBindings: string[] = [\"defaultCheckbox\"];\r\n    dynamicFormBuildConfig: DynamicFormBuildConfig;\r\n\r\n    constructor(private formBuilder: RxDynamicFormBuilder) { }\r\n    ngOnInit() {\r\n        this.dynamicFormBuildConfig = this.formBuilder.formGroup(this.serverData, {});\r\n    }\r\n}",
        "html": "<form [formGroup]=\"dynamicFormBuildConfig.formGroup\">\r\n    <div viewMode=\"horizontal\" [rxwebDynamicForm]=\"dynamicFormBuildConfig\" [uiBindings]=\"uiBindings\">\r\n    </div>\r\n</form>",
        "model": null,
        "modelName": null,
        "json": {}
    },
    "disabledRadio": {
        "notes": "ui-bindings",
        "component": "import { Component, OnInit } from \"@angular/core\";\r\nimport { DynamicFormBuildConfig, DynamicFormConfiguration, RxDynamicFormBuilder } from \"@rxweb/reactive-dynamic-forms\";\r\n\r\n@Component({\r\n    selector: 'app-dynamic-disabledRadio',\r\n    templateUrl: './dynamic-disabled-radio.component.html'\r\n})\r\n\r\nexport class DynamicDisabledRadioComponent implements OnInit {\r\n    serverData = [\r\n        {\r\n            name: \"defaultRadio\",\r\n            type: \"radio\",\r\n            source: [{ value: 1, text: \"Default radio\" },{ value: 2, text: \"Second default radio\" },{ value: 3, text: \"Disabled radio\", disabled: true }]\r\n        }\r\n    ]\r\n\r\n    uiBindings: string[] = [\"defaultRadio\"];\r\n    \r\n    dynamicFormBuildConfig: DynamicFormBuildConfig;\r\n\r\n    constructor(private formBuilder: RxDynamicFormBuilder) { }\r\n    ngOnInit() {\r\n        this.dynamicFormBuildConfig = this.formBuilder.formGroup(this.serverData, {});\r\n    }\r\n}",
        "html": "<form [formGroup]=\"dynamicFormBuildConfig.formGroup\">\r\n    <div viewMode=\"horizontal\" [rxwebDynamicForm]=\"dynamicFormBuildConfig\" [uiBindings]=\"uiBindings\">\r\n    </div>\r\n</form>",
        "model": null,
        "modelName": null,
        "json": {}
    },
    "customSizing": {
        "notes": "ui-bindings",
        "component": "import { Component, OnInit } from \"@angular/core\";\r\nimport { DynamicFormBuildConfig, DynamicFormConfiguration, RxDynamicFormBuilder } from \"@rxweb/reactive-dynamic-forms\";\r\n\r\n@Component({\r\n    selector: 'app-dynamic-customSizing',\r\n    templateUrl: './dynamic-custom-sizing.component.html'\r\n})\r\n\r\nexport class DynamicCustomSizingComponent implements OnInit {\r\n    serverData = [{\r\n        name: \"firstname\",\r\n        type: \"text\",\r\n        ui: {\r\n            class: [\"form-control-lg\"],\r\n            placeholder: \".form-control-lg\",\r\n        }\r\n    },\r\n    {\r\n        name: \"middlename\",\r\n        type: \"text\",\r\n        ui: {\r\n            placeholder: \"Default Input\"\r\n        }\r\n    },\r\n    {\r\n        name: \"lastname\",\r\n        type: \"text\",\r\n        ui: {\r\n            class: [\"form-control-sm\"],\r\n            placeholder: \".form-control-sm\"\r\n        }\r\n    }\r\n    ]\r\n\r\n    uiBindings: string[] = [\"firstname\",\"middlename\",\"lastname\"];\r\n    dynamicFormBuildConfig: DynamicFormBuildConfig;\r\n\r\n    constructor(private formBuilder: RxDynamicFormBuilder) { }\r\n    ngOnInit() {\r\n        this.dynamicFormBuildConfig = this.formBuilder.formGroup(this.serverData, {});\r\n    }\r\n}",
        "html": "<form [formGroup]=\"dynamicFormBuildConfig.formGroup\">\r\n    <div viewMode=\"basic\" [rxwebDynamicForm]=\"dynamicFormBuildConfig\" [uiBindings]=\"uiBindings\">\r\n    </div>\r\n</form>",
        "model": null,
        "modelName": null,
        "json": {}
    },
    "inlineForm": {
        "notes": "ui-bindings",
        "component": "import { Component, OnInit } from \"@angular/core\";\r\nimport { DynamicFormBuildConfig, DynamicFormConfiguration, RxDynamicFormBuilder } from \"@rxweb/reactive-dynamic-forms\";\r\n\r\n@Component({\r\n    selector: 'app-dynamic-inlineForm',\r\n    templateUrl: './dynamic-inline-form.component.html'\r\n})\r\n\r\nexport class DynamicInlineFormComponent implements OnInit {\r\n    serverData = [{\r\n        name: \"name\",\r\n        type: \"text\",\r\n        ui: {\r\n            viewMode: {\r\n                inline: {\r\n                    label: [\"sr-only\"],\r\n                    input: [\"mb-2\", \"mr-sm-2\"]\r\n                }\r\n            },\r\n            class: [\"mb-2\", \"mr-sm-2\"],\r\n            label: \"Name\",\r\n            placeholder: \"Jane Doe\",\r\n        }\r\n    },\r\n    {\r\n        name: \"username\",\r\n        type: \"text\",\r\n        ui: {\r\n            viewMode: {\r\n                inline: {\r\n                    label: [\"sr-only\"],\r\n                    div: [\"mb-2\", \"mr-sm-2\"]\r\n                }\r\n            },\r\n            label: \"Username\",\r\n            prependText: { left: \"@\" },\r\n            placeholder: \"Username\"\r\n        }\r\n    },\r\n    {\r\n        name: \"Rememberme\",\r\n        type: \"checkbox\",\r\n        source: [{ value: 1, text: \"Remember me\" }],\r\n        ui: {\r\n            viewMode: {\r\n                inline: {\r\n                    div: [\"mb-2\", \"mr-sm-2\"]\r\n                }\r\n            },\r\n        }\r\n    }\r\n    ]\r\n\r\n    additionalConfig = [{\r\n        name: \"submit\",\r\n        type: \"button\",\r\n        props: {\r\n            text: \"Submit\"\r\n        },\r\n        ui: {\r\n          class: [\"btn\",\"btn-primary\",\"mb-2\"]\r\n        }\r\n\r\n    }]\r\n\r\n    uiBindings: string[] = [\"name\", \"username\", \"Rememberme\", \"submit\"];\r\n    dynamicFormBuildConfig: DynamicFormBuildConfig;\r\n    dynamicFormConfiguration: DynamicFormConfiguration;\r\n\r\n    constructor(private formBuilder: RxDynamicFormBuilder) { }\r\n    ngOnInit() {\r\n        this.dynamicFormConfiguration = {additionalConfig : this.additionalConfig}\r\n        this.dynamicFormBuildConfig = this.formBuilder.formGroup(this.serverData, this.dynamicFormConfiguration);\r\n    }\r\n}",
        "html": "<form [formGroup]=\"dynamicFormBuildConfig.formGroup\" >\r\n    <div class=\"form-inline\" viewMode=\"inline\" [rxwebDynamicForm]=\"dynamicFormBuildConfig\" [uiBindings]=\"uiBindings\">\r\n    </div>\r\n</form>",
        "model": null,
        "modelName": null,
        "json": {}
    },
    "labelSizing": {
        "notes": "ui-bindings",
        "component": "import { Component, OnInit } from \"@angular/core\";\r\nimport { DynamicFormBuildConfig, DynamicFormConfiguration, RxDynamicFormBuilder } from \"@rxweb/reactive-dynamic-forms\";\r\n\r\n@Component({\r\n  selector: 'app-dynamic-labelSizing',\r\n  templateUrl: './dynamic-label-sizing.component.html'\r\n})\r\n\r\nexport class DynamicLabelSizingComponent implements OnInit {\r\n  serverData = [{\r\n    name: \"email\",\r\n    type: \"text\",\r\n    ui: {\r\n      viewMode: {\r\n        horizontal: {\r\n          label: [\"col-form-label-sm\", \"col-sm-2\"],\r\n          div: [\"col-sm-10\"],\r\n        }\r\n      },\r\n      class: [\"form-control-sm\"],\r\n      label: \"Email\",\r\n      placeholder: \"col-form-label-sm\",\r\n    }\r\n  },\r\n  {\r\n    name: \"recoveryEmail\",\r\n    type: \"text\",\r\n    ui: {\r\n      viewMode: {\r\n        horizontal: {\r\n          label: [\"col-sm-2\"],\r\n          div: [\"col-sm-10\"]\r\n        }\r\n      },\r\n      label: \"Email\",\r\n      placeholder: \"col-form-label\"\r\n    }\r\n  },\r\n  {\r\n    name: \"personalMailId\",\r\n    type: \"text\",\r\n    ui: {\r\n      viewMode: {\r\n        horizontal: {\r\n          label: [\"col-form-label-lg\", \"col-sm-2\"],\r\n          div: [\"col-sm-10\"]\r\n        }\r\n      },\r\n      class: [\"form-control-lg\"],\r\n      label: \"Email\",\r\n      placeholder: \"col-form-label-lg\"\r\n    }\r\n  }\r\n  ]\r\n\r\n  uiBindings: string[] = [\"email\", \"recoveryEmail\", \"personalMailId\"];\r\n  dynamicFormBuildConfig: DynamicFormBuildConfig;\r\n\r\n  constructor(private formBuilder: RxDynamicFormBuilder) { }\r\n\r\n  ngOnInit() {\r\n    this.dynamicFormBuildConfig = this.formBuilder.formGroup(this.serverData, {});\r\n  }\r\n}",
        "html": "<form [formGroup]=\"dynamicFormBuildConfig.formGroup\">\r\n    <div viewMode=\"horizontal\" [rxwebDynamicForm]=\"dynamicFormBuildConfig\" [uiBindings]=\"uiBindings\">\r\n    </div>\r\n</form>",
        "model": null,
        "modelName": null,
        "json": {}
    },
    "advanceLayout": {
        "notes": "ui-bindings",
        "component": "import { Component, OnInit } from \"@angular/core\";\r\nimport { DynamicFormBuildConfig, DynamicFormConfiguration, RxDynamicFormBuilder } from \"@rxweb/reactive-dynamic-forms\";\r\n\r\n@Component({\r\n    selector: 'app-dynamic-advanceLayout',\r\n    templateUrl: './dynamic-advance-layout.component.html'\r\n})\r\n\r\nexport class DynamicAdvanceLayoutComponent implements OnInit {\r\n    serverData = [{\r\n        name: \"email\",\r\n        type: \"text\",\r\n        ui: {\r\n            viewMode: {\r\n                advance: {\r\n                    div: [\"col-md-6\",\"col-sm-6\"]\r\n                }\r\n            },\r\n            label: \"Email\",\r\n            placeholder: \"Email\",\r\n        }\r\n    },\r\n    {\r\n        name: \"password\",\r\n        type: \"password\",\r\n        ui: {\r\n            viewMode: {\r\n                advance: {\r\n                    div: [\"col-md-6\",\"col-sm-6\"]\r\n                }\r\n            },\r\n            label: \"Password\",\r\n            placeholder: \"Password\"\r\n        }\r\n    },\r\n    {\r\n        name: \"address\",\r\n        type: \"text\",\r\n        ui: {\r\n            viewMode: {\r\n                advance: {\r\n                    div: [\"col-md-12\",\"col-sm-12\"]\r\n                }\r\n            },\r\n            label: \"Address\",\r\n            placeholder: \"1234 Main St\"\r\n        }\r\n    },\r\n    {\r\n        name: \"address2\",\r\n        type: \"text\",\r\n        ui: {\r\n            viewMode: {\r\n                advance: {\r\n                    div: [\"col-md-12\",\"col-sm-12\"]\r\n                }\r\n            },\r\n            label: \"Address 2\",\r\n            placeholder: \"Apartment, studio or floor\"\r\n        }\r\n    },\r\n    {\r\n        name: \"city\",\r\n        type: \"text\",\r\n        ui: {\r\n            viewMode: {\r\n                advance: {\r\n                    div: [\"col-md-6\",\"col-sm-6\"]\r\n                }\r\n            },\r\n            label: \"City\"\r\n        }\r\n    },\r\n    {\r\n        name: \"state\",\r\n        type: \"select\",\r\n        source: [{ value: 1, text: \"...\" }],\r\n        ui: {\r\n            viewMode: {\r\n                advance: {\r\n                    div: [\"col-md-4\",\"col-sm-4\"]\r\n                }\r\n            },\r\n            label: \"State\",\r\n            placeholder: \"Choose\"\r\n        }\r\n    },\r\n    {\r\n        name: \"zip\",\r\n        type: \"text\",\r\n        ui: {\r\n            viewMode: {\r\n                advance: {\r\n                    div: [\"col-md-2\",\"col-sm-2\"]\r\n                }\r\n            },\r\n            label: \"Zip\"\r\n        }\r\n    },\r\n    {\r\n        name: \"check\",\r\n        type: \"checkbox\",\r\n        source: [{value: 1, text: \"Check me out\"}],\r\n        ui: {\r\n            viewMode: {\r\n                advance: {\r\n                    div: [\"col-md-12\",\"col-sm-12\"]\r\n                }\r\n            }\r\n        }\r\n    }\r\n    ]\r\n\r\n    uiBindings = [[\"email\", \"password\"], \"address\", \"address2\", [\"city\", \"state\", \"zip\"],\"check\"];\r\n    dynamicFormBuildConfig: DynamicFormBuildConfig;\r\n\r\n    constructor(private formBuilder: RxDynamicFormBuilder) { }\r\n    ngOnInit() {\r\n        this.dynamicFormBuildConfig = this.formBuilder.formGroup(this.serverData, {});\r\n    }\r\n}",
        "html": "<form [formGroup]=\"dynamicFormBuildConfig.formGroup\">\r\n    <div viewMode=\"advance\" [rxwebDynamicForm]=\"dynamicFormBuildConfig\" [uiBindings]=\"uiBindings\">\r\n    </div>\r\n    <button type=\"submit\" class=\"btn btn-primary\">Sign In</button>\r\n</form>",
        "model": null,
        "modelName": null,
        "json": {}
    },
    "horizontalLayout": {
        "notes": "ui-bindings",
        "component": "import { Component, OnInit } from \"@angular/core\";\r\nimport { DynamicFormBuildConfig, DynamicFormConfiguration, RxDynamicFormBuilder } from \"@rxweb/reactive-dynamic-forms\";\r\n\r\n@Component({\r\n    selector: 'app-dynamic-horizontalLayout',\r\n    templateUrl: './dynamic-horizontal-layout.component.html'\r\n})\r\n\r\nexport class DynamicHorizontalLayoutComponent implements OnInit {\r\n    serverData = [{\r\n        name: \"email\",\r\n        type: \"text\",\r\n        ui: {\r\n            viewMode: {\r\n                horizontal: {\r\n                    label: [\"col-sm-2\"],\r\n                    div: [\"col-sm-10\"]\r\n                }\r\n            },\r\n            label: \"Email\",\r\n            placeholder: \"Email\",\r\n        }\r\n    },\r\n    {\r\n        name: \"password\",\r\n        type: \"password\",\r\n        ui: {\r\n            viewMode: {\r\n                horizontal: {\r\n                    label: [\"col-sm-2\"],\r\n                    div: [\"col-sm-10\"]\r\n                }\r\n            },\r\n            label: \"Password\",\r\n            placeholder: \"Password\"\r\n        }\r\n    },\r\n    {\r\n        name: \"radios\",\r\n        type: \"radio\",\r\n        source: [{ value: 1, text: \"First radio\" },{ value: 2, text: \"Second radio\" },{ value: 3, text: \"Third disabled radio\", disabled: true }],\r\n        ui: {\r\n            viewMode: {\r\n                horizontal: {\r\n                    label: [\"col-sm-2\"],\r\n                    div: [\"col-sm-10\"]\r\n                }\r\n            },\r\n            label: \"Radios\"\r\n        }\r\n    },\r\n    {\r\n        name: \"checkbox\",\r\n        type: \"checkbox\",\r\n        source: [{ value: 1, text: \"Example checkbox\" }],\r\n        ui: {\r\n            viewMode: {\r\n                horizontal: {\r\n                    label: [\"col-sm-2\"],\r\n                    div: [\"col-sm-10\"]\r\n                }\r\n            },\r\n            label: \"Checkbox\"\r\n        }\r\n    }\r\n    ]\r\n\r\n    uiBindings: string[] = [\"email\",\"password\",\"radios\", \"checkbox\"];\r\n    dynamicFormBuildConfig: DynamicFormBuildConfig;\r\n\r\n    constructor(private formBuilder: RxDynamicFormBuilder) { }\r\n    ngOnInit() {\r\n        this.dynamicFormBuildConfig = this.formBuilder.formGroup(this.serverData, {});\r\n    }\r\n}",
        "html": "<form [formGroup]=\"dynamicFormBuildConfig.formGroup\">\r\n    <div viewMode=\"horizontal\" [rxwebDynamicForm]=\"dynamicFormBuildConfig\" [uiBindings]=\"uiBindings\">\r\n    </div>\r\n    <button type=\"submit\" class=\"btn btn-primary\">Sign In</button>\r\n</form>",
        "model": null,
        "modelName": null,
        "json": {}
    },
    "prependTextbox": {
        "notes": "ui-bindings",
        "component": "import { Component, OnInit } from \"@angular/core\";\r\nimport { DynamicFormBuildConfig, DynamicFormConfiguration, RxDynamicFormBuilder } from \"@rxweb/reactive-dynamic-forms\";\r\n\r\n@Component({\r\n    selector: 'app-dynamic-prependTextbox',\r\n    templateUrl: './dynamic-prepend-textbox.component.html'\r\n})\r\n\r\nexport class DynamicPrependTextboxComponent implements OnInit {\r\n    serverData = [{\r\n        name: \"prependLeft\",\r\n        type: \"text\",\r\n        ui: {\r\n            viewMode: {\r\n                horizontal: {\r\n                    label: [\"col-sm-2\"],\r\n                    div: [\"col-sm-10\"],\r\n                }\r\n            },\r\n            prependText: { left: \"@\" },\r\n            label: \"Prepend Left\",\r\n            placeholder: \"PrependLeft\"\r\n        }\r\n    },\r\n    {\r\n        name: \"prependRight\",\r\n        type: \"text\",\r\n        ui: {\r\n            viewMode: {\r\n                horizontal: {\r\n                    label: [\"col-sm-2\"],\r\n                    div: [\"col-sm-10\"],\r\n                }\r\n            },\r\n            prependText: { right: \"@\" },\r\n            label: \"Prepend Right\",\r\n            placeholder: \"PrependRight\"\r\n        }\r\n    },\r\n    {\r\n        name: \"prependBoth\",\r\n        type: \"text\",\r\n        ui: {\r\n            viewMode: {\r\n                horizontal: {\r\n                    label: [\"col-sm-2\"],\r\n                    div: [\"col-sm-10\"],\r\n                }\r\n            },\r\n            prependText: { left: \"@\", right: \".com\" },\r\n            label: \"Prepend Both\",\r\n            placeholder: \"PrependBoth\"\r\n        }\r\n    }\r\n    ]\r\n\r\n    uiBindings: string[] = [\"prependLeft\", \"prependRight\", \"prependBoth\"];\r\n    dynamicFormBuildConfig: DynamicFormBuildConfig;\r\n\r\n    constructor(private formBuilder: RxDynamicFormBuilder) { }\r\n\r\n    ngOnInit() {\r\n        this.dynamicFormBuildConfig = this.formBuilder.formGroup(this.serverData, {});\r\n    }\r\n}",
        "html": "<form [formGroup]=\"dynamicFormBuildConfig.formGroup\">\r\n    <div viewMode=\"horizontal\" [rxwebDynamicForm]=\"dynamicFormBuildConfig\" [uiBindings]=\"uiBindings\">\r\n    </div>\r\n</form>",
        "model": null,
        "modelName": null,
        "json": {}
    }
}