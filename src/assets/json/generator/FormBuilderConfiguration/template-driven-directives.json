{"rightSidebarLinks":[{"id":"formbuilderconfiguration","title":"FormBuilderConfiguration","subLink":null},{"id":"createanobjectinstance","title":"Create an object instance","subLink":[]},{"id":"createanarrayinstance","title":"Create an array instance","subLink":[]},{"id":"includeandexcludeproperties","title":"Include and exclude properties","subLink":[]}],"title":"FormBuilderConfiguration","description":"FormBuilderConfiguration is used to create object property instance and array property instance through dynamic configuration in your formGroup.","validatorType":"template-driven","validationTypeTitle":"Template Driven","type":"simple","category":"api","linkTitle":"FormBuilderConfiguration","tabArray":{},"innerHtml":null,"htmlContent":"<p class='showHideElement' >FormBuilderconfiguration is used for dynamic validation of the FormControl as well as some other activities like to create an instance of nested objects on runtime. </p>\r\n<p class='showHideElement' >This gives flixibility to add new properties or exclude the properties while using the Decorator based validation approach.</p>\r\n<p class='showHideElement' >While using nested formGroup in reactive forms, if your nested object property is undefined then the formbuilder will not create the nested formgroup, In such case you need to pass dynamic configuration which is done through FormBuilderConfiguration.</p>\r\n<div class='row page-section' id= 'createanobjectinstance'>\r\n<div class='col-lg-12'>\r\n<h2>Create an object instance<a title='Link to this heading' class='link-header' href='/api/FormBuilderConfiguration/template-driven/directives#createanobjectinstance'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >If you have nested formGroup in your component and you may not have that particular property in your model class in your component, decorator cannot configure property  </p>\r\n<p class='showHideElement' >In such case, object property instance can be created using <span class='highlighted'>objectPropInstanceConfig</span> which comes under <span class='highlighted'>AutoInstanceConfig</span> interface,you need to set the propertyName of the object into it.</p>\r\n<p class='showHideElement' >For example you have a user form and during edit you want a property named <span class='highlighted'>state</span> which doesnt exist in your model class, so it can be created using it, Lets see how</p>\r\n</div></div>\r\n<div class='row page-section' id= 'createanarrayinstance'>\r\n<div class='col-lg-12'>\r\n<h2>Create an array instance<a title='Link to this heading' class='link-header' href='/api/FormBuilderConfiguration/template-driven/directives#createanarrayinstance'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >While accessing formGroup controls, if your array object is not defined and you want to create array object instance at runtime, it can be created using <span class='highlighted'>arrayPropInstanceConfig</span> in which you can set the property name and number of row items you want.</p>\r\n</div></div>\r\n<div class='row page-section' id= 'includeandexcludeproperties'>\r\n<div class='col-lg-12'>\r\n<h2>Include and exclude properties<a title='Link to this heading' class='link-header' href='/api/FormBuilderConfiguration/template-driven/directives#includeandexcludeproperties'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >While accessing the data in formGroup, based upon the operation you want to perform If you want to include or exclude properties from your formGroup which are already defined in model class, It can be done using <span class='highlighted'>includeProps</span> and <span class='highlighted'>excludeProps</span> just set the propetyNames which you want to include or exclude in it. </p>\r\n</div></div>\r\n"}