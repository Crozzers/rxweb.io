{
    "complete": {
        "notes": [],
        "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,FormArray } from \"@angular/forms\"\r\nimport { RxFormBuilder,FormBuilderConfiguration,RxFormGroup } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User,Skill,Address } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-formbuilderconfiguration-complete',\r\n    templateUrl: './formbuilderconfiguration-complete.component.html'\r\n})\r\nexport class FormbuilderconfigurationCompleteComponent implements OnInit {\r\n    userInfoFormGroup: RxFormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n         let skill = new Skill();\r\n         user.address = new Address();\r\n         user.skills = new Array<Skill>();\r\n         user.skills.push(Skill);\r\n        var formBuilderConfig = new FormBuilderConfiguration();\r\n        formBuilderConfig.autoInstanceConfig = {\r\n                        objectPropInstanceConfig: [{\r\n                            propertyName: 'state',                            \r\n                        }],\r\n                        arrayPropInstanceConfig: [{\r\n                            propertyName: 'skills',\r\n                            rowItems: 2\r\n                        }]\r\n                    }\r\n       this.userInfoFormGroup = <RxFormGroup>this.formBuilder.formGroup(user,formBuilderConfig);\r\n     \r\n    }\r\n     getFormArray(){\r\n      let formarray = this.userInfoFormGroup.controls.skills as FormArray;\r\n      return formarray.controls;\r\n    }\r\n}\r\n",
        "html": "<div>\r\n    <form  [formGroup]=\"userInfoFormGroup\">\r\n      <div class=\"form-group\">\r\n        <label>First Name</label>\r\n        <input type=\"text\" formControlName=\"firstName\" class=\"form-control\"  />\r\n  \r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label>Last Name</label>\r\n        <input type=\"text\" formControlName=\"lastName\" class=\"form-control\"  />  \r\n      </div>\r\n   \r\n   <div [formGroup]=\"userInfoFormGroup.controls.address\">\r\n      <div class=\"form-group\">\r\n        <label>City</label>\r\n        <input type=\"text\" formControlName=\"city\" class=\"form-control\"  /> \r\n      </div>\r\n\r\n       <div class=\"form-group\">\r\n        <label>State</label>\r\n        <input type=\"text\" formControlName=\"state\" class=\"form-control\"  /> \r\n      </div>\r\n\r\n   </div>\r\n      <div class=\"form-group\" [formGroup]=\"hobbyGroup\" *ngFor=\"let hobbyGroup of getFormArray()\">\r\n        <label>name</label>\r\n        <input type=\"text\" formControlName=\"name\" class=\"form-control\"  />     \r\n      </div>\r\n\r\n      <button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n    </form>\r\n  </div>\r\n  ",
        "model": "import {  required,prop,propArray,propObject } from   \"@rxweb/reactive-form-validators\"   \r\n\r\n\r\nexport class Skill {\r\n    @prop()\r\n    name: string;\r\n}\r\nexport class Address {\r\n\r\n    @prop()\r\n    city: string;\r\n   \r\n   @prop()\r\n   state: string;\r\n\r\n}\r\nexport class User {\r\n\r\n\t  @prop() \r\n\t  firstName: string;\r\n\t\r\n  \t@prop()\r\n    lastName:string;\r\n\r\n    @propArray(Skill)\r\n    skills: Skill[];\r\n\r\n    @propObject(Address)\r\n    address: Address;\r\n}",
        "modelName": "user.model.ts",
        "json": {}
    },
    "object": {
        "notes": [],
        "component": "import { Component, OnInit } from '@angular/core';\r\nimport { RxFormBuilder,FormBuilderConfiguration,RxFormGroup } from '@rxweb/reactive-form-validators';\r\nimport { User,Address } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-formbuilderconfiguration-object',\r\n    templateUrl: './formbuilderconfiguration-object.component.html'\r\n})\r\nexport class FormbuilderconfigurationObjectComponent implements OnInit {\r\n    userInfoFormGroup: RxFormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n         user.address = new Address();      \r\n        var formBuilderConfig = new FormBuilderConfiguration();\r\n        formBuilderConfig.autoInstanceConfig = {\r\n                        objectPropInstanceConfig: [{\r\n                            propertyName: 'state',                            \r\n                        }]\r\n                        \r\n                    }\r\n       this.userInfoFormGroup = <RxFormGroup>this.formBuilder.formGroup(user,formBuilderConfig);\r\n     \r\n    }\r\n  \r\n}\r\n",
        "html": "<div>\r\n    <form  [formGroup]=\"userInfoFormGroup\">\r\n      <div class=\"form-group\">\r\n        <label>First Name</label>\r\n        <input type=\"text\" formControlName=\"firstName\" class=\"form-control\"  />\r\n  \r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label>Last Name</label>\r\n        <input type=\"text\" formControlName=\"lastName\" class=\"form-control\"  />  \r\n      </div>\r\n   \r\n   <div [formGroup]=\"userInfoFormGroup.controls.address\">\r\n      <div class=\"form-group\">\r\n        <label>City</label>\r\n        <input type=\"text\" formControlName=\"city\" class=\"form-control\"  /> \r\n      </div>\r\n\r\n       <div class=\"form-group\">\r\n        <label>State</label>\r\n        <input type=\"text\" formControlName=\"state\" class=\"form-control\"  /> \r\n      </div>\r\n\r\n   </div>\r\n \r\n\r\n      <button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n    </form>\r\n  </div>\r\n  ",
        "model": "import {  required,prop,propObject } from   \"@rxweb/reactive-form-validators\"   \r\n\r\n\r\nexport class Address {\r\n    @prop()\r\n    city: string;\r\n   \r\n    @prop()\r\n    state: string;\r\n\r\n}\r\nexport class User {\r\n    @prop() \r\n    firstName: string;\r\n\t\r\n    @prop()\r\n    lastName:string;\r\n\r\n    @propObject(Address)\r\n    address: Address;\r\n}",
        "modelName": "user.model.ts",
        "json": {}
    },
    "arrayobject": {
        "notes": [],
        "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,FormArray } from \"@angular/forms\"\r\nimport { RxFormBuilder,FormBuilderConfiguration,RxFormGroup } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User,Skill } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-formbuilderconfiguration-arrayobject',\r\n    templateUrl: './formbuilderconfiguration-arrayobject.component.html'\r\n})\r\nexport class FormbuilderconfigurationArrayobjectComponent implements OnInit {\r\n    userInfoFormGroup: RxFormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n         let skill = new Skill();\r\n         user.skills = new Array<Skill>();\r\n         user.skills.push(Skill);\r\n        var formBuilderConfig = new FormBuilderConfiguration();\r\n        formBuilderConfig.autoInstanceConfig = {\r\n                        arrayPropInstanceConfig: [{\r\n                            propertyName: 'skills',\r\n                            rowItems: 2\r\n                        }]\r\n                    }\r\n       this.userInfoFormGroup = <RxFormGroup>this.formBuilder.formGroup(user,formBuilderConfig);\r\n     \r\n    }\r\n     getFormArray(){\r\n      let formarray = this.userInfoFormGroup.controls.skills as FormArray;\r\n      return formarray.controls;\r\n    }\r\n}\r\n",
        "html": "<div>\r\n    <form  [formGroup]=\"userInfoFormGroup\">\r\n      <div class=\"form-group\">\r\n        <label>First Name</label>\r\n        <input type=\"text\" formControlName=\"firstName\" class=\"form-control\"  />\r\n  \r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label>Last Name</label>\r\n        <input type=\"text\" formControlName=\"lastName\" class=\"form-control\"  />  \r\n      </div>\r\n  \r\n      <div class=\"form-group\" [formGroup]=\"hobbyGroup\" *ngFor=\"let hobbyGroup of getFormArray()\">\r\n        <label>name</label>\r\n        <input type=\"text\" formControlName=\"name\" class=\"form-control\"  />     \r\n      </div>\r\n\r\n      <button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n    </form>\r\n  </div>\r\n  ",
        "model": "import { prop,propArray,propObject } from   \"@rxweb/reactive-form-validators\"   \r\n\r\n\r\nexport class Skill {\r\n    @prop()\r\n    name: string;\r\n}\r\nexport class Address {\r\n\r\n    @prop()\r\n    city: string;\r\n   \r\n   @prop()\r\n   state: string;\r\n\r\n}\r\nexport class User {\r\n\r\n\t  @prop() \r\n\t  firstName: string;\r\n\t\r\n  \t@prop()\r\n    lastName:string;\r\n\r\n    @propArray(Skill)\r\n    skills: Skill[];\r\n\r\n    @propObject(Address)\r\n    address: Address;\r\n}",
        "modelName": "user.model.ts",
        "json": {}
    },
    "includeprops": {
        "notes": [],
        "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,FormArray } from \"@angular/forms\"\r\nimport { RxFormBuilder,FormBuilderConfiguration,RxFormGroup } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-formbuilderconfiguration-includeprops',\r\n    templateUrl: './formbuilderconfiguration-includeprops.component.html'\r\n})\r\nexport class FormbuilderconfigurationIncludepropsComponent implements OnInit {\r\n    userInfoFormGroup: RxFormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        var formBuilderConfig = new FormBuilderConfiguration();\r\n        formBuilderConfig.includeProps = [\"firstName\",\"lastName\"]\r\n          this.userInfoFormGroup = <RxFormGroup>this.formBuilder.formGroup(user,formBuilderConfig);\r\n    }\r\n}\r\n",
        "html": "<div>\r\n    <form  [formGroup]=\"userInfoFormGroup\">\r\n      <div class=\"form-group\">\r\n        <label>First Name</label>\r\n        <input type=\"text\" formControlName=\"firstName\" class=\"form-control\"  />  \r\n      </div>\r\n      \r\n      <div class=\"form-group\">\r\n        <label>Last Name</label>\r\n        <input type=\"text\" formControlName=\"lastName\" class=\"form-control\"  />  \r\n      </div> \r\n\r\n      <button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n    </form>\r\n  </div>\r\n  ",
        "model": "import {prop} from   \"@rxweb/reactive-form-validators\"   \r\n\r\n\r\nexport class User {\r\n\r\n       @prop() \r\n\tfirstName: string;\r\n\t\r\n  \t@prop()\r\n        lastName:string;\r\n\r\n        @prop()\r\n        email:string;\r\n}",
        "modelName": "user.model.ts",
        "json": {}
    },
    "dynamicdefault":{
        "notes": null,
        "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder,FormBuilderConfiguration } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-formbuilderconfiguration-dynamicdefault',\r\n    templateUrl: './formbuilderconfiguration-dynamicdefault.component.html'\r\n})\r\nexport class FormbuilderconfigurationDynamicdefaultComponent implements OnInit {\r\n\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n      let user = new User();\r\n       var formBuilderConfig = new FormBuilderConfiguration();\r\n        formBuilderConfig.propsConfig = {'emailAddress':{defaultValue:\"bharat@gmail.com\"}}\r\n         this.userFormGroup = this.formBuilder.formGroup(user,formBuilderConfig);\r\n        \r\n    }\r\n  \r\n}\r\n",
        "html": "<form *ngIf=\"userFormGroup\" [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n        <label>Email Address</label>\r\n        <input type=\"text\" formControlName=\"emailAddress\" class=\"form-control\" />\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>",
        "model": "import {  prop } from \"@rxweb/reactive-form-validators\"\r\nexport class User {\r\n\r\n@prop()\r\nemailAddress:string\r\n\r\n}\r\n",
        "modelName": "user.model.ts",
        "jsonName": null,
        "json": null
    },
    "ignoreundefined": {
        "notes": [],
        "component": "import { Component, OnInit } from '@angular/core';\r\nimport { RxFormBuilder,FormBuilderConfiguration,RxFormGroup } from '@rxweb/reactive-form-validators';\r\nimport { User,Address } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-formbuilderconfiguration-ignoreundefined',\r\n    templateUrl: './formbuilderconfiguration-ignoreundefined.component.html'\r\n})\r\nexport class FormbuilderconfigurationIgnoreundefinedComponent implements OnInit {\r\n    userInfoFormGroup: RxFormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n         user.address = new Address();            \r\n        var formBuilderConfig = new FormBuilderConfiguration();\r\n        formBuilderConfig.ignoreUndefinedProps = [\"address\"];\r\n       this.userInfoFormGroup = <RxFormGroup>this.formBuilder.formGroup(user,formBuilderConfig);\r\n     \r\n    }\r\n  \r\n}\r\n",
        "html": "<div>\r\n    <form  [formGroup]=\"userInfoFormGroup\">\r\n      <div class=\"form-group\">\r\n        <label>First Name</label>\r\n        <input type=\"text\" formControlName=\"firstName\" class=\"form-control\"  />\r\n  \r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label>Last Name</label>\r\n        <input type=\"text\" formControlName=\"lastName\" class=\"form-control\"  />  \r\n      </div>\r\n \r\n \r\n\r\n      <button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n    </form>\r\n  </div>\r\n  ",
        "model": "import {  required,prop,propObject } from   \"@rxweb/reactive-form-validators\"   \r\n\r\n\r\nexport class Address {\r\n    @prop()\r\n    city: string;\r\n   \r\n    @prop()\r\n    state: string;\r\n\r\n}\r\nexport class User {\r\n    @prop() \r\n    firstName: string;\r\n\t\r\n    @prop()\r\n    lastName:string;\r\n\r\n    @propObject(Address)\r\n    address: Address;\r\n}",
        "modelName": "user.model.ts",
        "json": {}
    },
    "allprops":{
        "notes": [],
        "component": "import { Component, OnInit } from '@angular/core';\r\nimport { RxFormBuilder, FormBuilderConfiguration, RxFormGroup, RxwebValidators } from '@rxweb/reactive-form-validators';\r\nimport { ValidatorFn, AbstractControl, FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-formbuilderconfiguration-allprops',\r\n  templateUrl: './formbuilderconfiguration-allprops.component.html'\r\n})\r\nexport class FormbuilderconfigurationAllpropsComponent implements OnInit {\r\n  userInfoFormGroup: RxFormGroup\r\n\r\n  constructor(\r\n    private formBuilder: RxFormBuilder) { }\r\n\r\n  ngOnInit() {\r\n    var formBuilderConfig = new FormBuilderConfiguration();\r\n    formBuilderConfig.applyAllProps = [RxwebValidators.required()]\r\n    this.userInfoFormGroup = <RxFormGroup>this.formBuilder.group({\r\n      firstName: [''],\r\n      lastName: ['']\r\n    }, formBuilderConfig)\r\n  }\r\n\r\n}\r\n",
        "html": "<div>\r\n\t<form [formGroup]=\"userInfoFormGroup\">\r\n\t\t<div class=\"form-group\">\r\n\t\t\t<label>First Name</label>\r\n        <input type=\"text\" formControlName=\"firstName\" class=\"form-control\"  />\r\n        <small class=\"text-danger\">{{ userInfoFormGroup.controls.firstName.errors?.required?.message}}</small>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label>Last Name</label>\r\n        <input type=\"text\" formControlName=\"lastName\" class=\"form-control\"  />  \r\n        <small class=\"text-danger\">{{ userInfoFormGroup.controls.lastName.errors?.required?.message}}</small>\r\n      </div>\r\n\r\n      <button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n    </form>\r\n  </div>",
        "model": null,
        "modelName": null,
        "json": {}
    },
    "genericentities":{
        "notes": [],
        "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,FormArray } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder,FormBuilderConfiguration } from '@rxweb/reactive-form-validators';\r\n\r\nimport { StudentCourse,Subjects,Course } from './student.model';\r\n\r\n@Component({\r\n    selector: 'app-formbuilderconfiguration-genericentities',\r\n    templateUrl: './formbuilderconfiguration-genericentities.component.html'\r\n})\r\nexport class FormbuilderconfigurationGenericentitiesComponent implements OnInit {\r\n\r\n    studentFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n      let studentCourse = new StudentCourse();\r\n        studentCourse.SubjectDetails = new Array<Subjects>();\r\n        studentCourse.SubjectDetails.push(new Subjects);\r\n       var formBuilderConfig = new FormBuilderConfiguration();\r\n       formBuilderConfig.genericEntities ={ 'SubjectDetails': Subjects}        \r\n       this.studentFormGroup = this.formBuilder.formGroup(studentCourse,formBuilderConfig);\r\n    }\r\n\r\n    getFormArray(){\r\n      let formarray = this.studentFormGroup.controls.SubjectDetails as FormArray;\r\n      return formarray.controls;\r\n    }\r\n}\r\n",
        "html": "<form  [formGroup]=\"studentFormGroup\">\r\n    <div [formGroup]=\"studentGroup\" *ngFor=\"let studentGroup of getFormArray()\">\r\n      <div class=\"form-group\">\r\n          <label>Enrollment Number</label>\r\n          <input type=\"text\" formControlName=\"enrollmentNumber\" class=\"form-control\" />\r\n      </div>\r\n      <button [disabled]=\"!studentFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n    </div>\r\n  </form>",
        "model": "import {  prop, propArray} from \"@rxweb/reactive-form-validators\"\r\n\r\n\r\n  export class Course{\r\n    @prop()\r\n    courseId : number;\r\n  }\r\n  export abstract class Student<T> extends Course {\r\n      @propArray() SubjectDetails: T[];\r\n  }\r\n\r\n  export class Subjects {\r\n      @prop()\r\n      enrollmentNumber: number;\r\n  }\r\n\r\n  export class StudentCourse extends Student<Subjects> {\r\n\r\n  }",
        "modelName": "student.model.ts",
        "json": {}
    },
    "abstractControlOptions":{
        "notes": [],
        "component": "import { Component, OnInit } from '@angular\/core';\r\nimport { FormGroup, FormBuilder } from \"@angular\/forms\"\r\nimport { RxwebValidators,RxFormBuilder } from '@rxweb\/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-formbuilderconfiguration-abstractControlOptions',\r\n    templateUrl: './formbuilderconfiguration-abstract-control-options.component.html'\r\n})\r\nexport class FormbuilderconfigurationAbstractControlOptionsComponent implements OnInit {\r\n    userInfoFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: RxFormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.userInfoFormGroup = this.formBuilder.group({\r\n            firstName:['', RxwebValidators.required()], \r\n        },{ abstractControlOptions: { firstName: 'blur' } });\r\n       \r\n    }\r\n\r\n}",
        "html": "<div>\r\n    <form  [formGroup]=\"userInfoFormGroup\">\r\n      <div class=\"form-group\">\r\n        <label>First Name<\/label>\r\n        <input type=\"text\" formControlName=\"firstName\" class=\"form-control\"  \/>\r\n       <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.firstName.errors\">{{userInfoFormGroup.controls.firstName.errors.required.message}}<br\/><\/small>\t\r\n      <\/div>\r\n      <button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit<\/button>\r\n    <\/form>\r\n  <\/div>",
        "model": null,
        "modelName": null,
        "json": {}
    },
    "arrayinstance":{"component":" var formBuilderConfig = new FormBuilderConfiguration();\r\n        formBuilderConfig.autoInstanceConfig = {\r\n                arrayPropInstanceConfig: [{\r\n                            propertyName: 'skills',\r\n                            rowItems: 2\r\n                        }]\r\n                    } \r\n this.userInfoFormGroup = <RxFormGroup>this.formBuilder.formGroup(user,formBuilderConfig);"},
    "objectinstance":{"component":"   var formBuilderConfig = new FormBuilderConfiguration();\r\n        formBuilderConfig.autoInstanceConfig = {\r\n                        objectPropInstanceConfig: [{\r\n                            propertyName: 'address',\r\n                            \r\n                        }]\r\n        }"},
    "include":{"component":"formBuilderConfig.includeProps = [\"userName\",\"password\",\"confirmPassword\"]\r\n     "}
}