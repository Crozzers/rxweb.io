{
    "complete": {
        "notes": [],
        "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,FormArray } from \"@angular/forms\"\r\nimport { RxFormBuilder,FormBuilderConfiguration,RxFormGroup } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User,Skill,Address } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-formbuilderconfiguration-complete',\r\n    templateUrl: './formbuilderconfiguration-complete.component.html'\r\n})\r\nexport class FormbuilderconfigurationCompleteComponent implements OnInit {\r\n    userInfoFormGroup: RxFormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n         let skill = new Skill();\r\n         user.address = new Address();\r\n         user.skills = new Array<Skill>();\r\n         user.skills.push(Skill);\r\n        var formBuilderConfig = new FormBuilderConfiguration();\r\n        formBuilderConfig.autoInstanceConfig = {\r\n                        objectPropInstanceConfig: [{\r\n                            propertyName: 'state',                            \r\n                        }],\r\n                        arrayPropInstanceConfig: [{\r\n                            propertyName: 'skills',\r\n                            rowItems: 2\r\n                        }]\r\n                    }\r\n       this.userInfoFormGroup = <RxFormGroup>this.formBuilder.formGroup(user,formBuilderConfig);\r\n     \r\n    }\r\n     getFormArray(){\r\n      let formarray = this.userInfoFormGroup.controls.skills as FormArray;\r\n      return formarray.controls;\r\n    }\r\n}\r\n",
        "html": "<div>\r\n    <form  [formGroup]=\"userInfoFormGroup\">\r\n      <div class=\"form-group\">\r\n        <label>First Name</label>\r\n        <input type=\"text\" formControlName=\"firstName\" class=\"form-control\"  />\r\n  \r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label>Last Name</label>\r\n        <input type=\"text\" formControlName=\"lastName\" class=\"form-control\"  />  \r\n      </div>\r\n   \r\n   <div [formGroup]=\"userInfoFormGroup.controls.address\">\r\n      <div class=\"form-group\">\r\n        <label>City</label>\r\n        <input type=\"text\" formControlName=\"city\" class=\"form-control\"  /> \r\n      </div>\r\n\r\n       <div class=\"form-group\">\r\n        <label>State</label>\r\n        <input type=\"text\" formControlName=\"state\" class=\"form-control\"  /> \r\n      </div>\r\n\r\n   </div>\r\n      <div class=\"form-group\" [formGroup]=\"hobbyGroup\" *ngFor=\"let hobbyGroup of getFormArray()\">\r\n        <label>name</label>\r\n        <input type=\"text\" formControlName=\"name\" class=\"form-control\"  />     \r\n      </div>\r\n\r\n      <button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n    </form>\r\n  </div>\r\n  ",
        "model": "import {  required,prop,propArray,propObject } from   \"@rxweb/reactive-form-validators\"   \r\n\r\n\r\nexport class Skill {\r\n    @prop()\r\n    name: string;\r\n}\r\nexport class Address {\r\n\r\n    @prop()\r\n    city: string;\r\n   \r\n   @prop()\r\n   state: string;\r\n\r\n}\r\nexport class User {\r\n\r\n\t  @prop() \r\n\t  firstName: string;\r\n\t\r\n  \t@prop()\r\n    lastName:string;\r\n\r\n    @propArray(Skill)\r\n    skills: Skill[];\r\n\r\n    @propObject(Address)\r\n    address: Address;\r\n}",
        "modelName": "user.model.ts",
        "json": {}
    },
    "object": {
        "notes": [],
        "component": "import { Component, OnInit } from '@angular/core';\r\nimport { RxFormBuilder,FormBuilderConfiguration,RxFormGroup } from '@rxweb/reactive-form-validators';\r\nimport { User,Address } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-formbuilderconfiguration-object',\r\n    templateUrl: './formbuilderconfiguration-object.component.html'\r\n})\r\nexport class FormbuilderconfigurationObjectComponent implements OnInit {\r\n    userInfoFormGroup: RxFormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n         user.address = new Address();      \r\n        var formBuilderConfig = new FormBuilderConfiguration();\r\n        formBuilderConfig.autoInstanceConfig = {\r\n                        objectPropInstanceConfig: [{\r\n                            propertyName: 'state',                            \r\n                        }]\r\n                        \r\n                    }\r\n       this.userInfoFormGroup = <RxFormGroup>this.formBuilder.formGroup(user,formBuilderConfig);\r\n     \r\n    }\r\n  \r\n}\r\n",
        "html": "<div>\r\n    <form  [formGroup]=\"userInfoFormGroup\">\r\n      <div class=\"form-group\">\r\n        <label>First Name</label>\r\n        <input type=\"text\" formControlName=\"firstName\" class=\"form-control\"  />\r\n  \r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label>Last Name</label>\r\n        <input type=\"text\" formControlName=\"lastName\" class=\"form-control\"  />  \r\n      </div>\r\n   \r\n   <div [formGroup]=\"userInfoFormGroup.controls.address\">\r\n      <div class=\"form-group\">\r\n        <label>City</label>\r\n        <input type=\"text\" formControlName=\"city\" class=\"form-control\"  /> \r\n      </div>\r\n\r\n       <div class=\"form-group\">\r\n        <label>State</label>\r\n        <input type=\"text\" formControlName=\"state\" class=\"form-control\"  /> \r\n      </div>\r\n\r\n   </div>\r\n \r\n\r\n      <button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n    </form>\r\n  </div>\r\n  ",
        "model": "import {  required,prop,propObject } from   \"@rxweb/reactive-form-validators\"   \r\n\r\n\r\nexport class Address {\r\n    @prop()\r\n    city: string;\r\n   \r\n    @prop()\r\n    state: string;\r\n\r\n}\r\nexport class User {\r\n    @prop() \r\n    firstName: string;\r\n\t\r\n    @prop()\r\n    lastName:string;\r\n\r\n    @propObject(Address)\r\n    address: Address;\r\n}",
        "modelName": "user.model.ts",
        "json": {}
    },
    "arrayobject": {
        "notes": [],
        "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,FormArray } from \"@angular/forms\"\r\nimport { RxFormBuilder,FormBuilderConfiguration,RxFormGroup } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User,Skill } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-formbuilderconfiguration-arrayobject',\r\n    templateUrl: './formbuilderconfiguration-arrayobject.component.html'\r\n})\r\nexport class FormbuilderconfigurationArrayobjectComponent implements OnInit {\r\n    userInfoFormGroup: RxFormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n         let skill = new Skill();\r\n         user.skills = new Array<Skill>();\r\n         user.skills.push(Skill);\r\n        var formBuilderConfig = new FormBuilderConfiguration();\r\n        formBuilderConfig.autoInstanceConfig = {\r\n                        arrayPropInstanceConfig: [{\r\n                            propertyName: 'skills',\r\n                            rowItems: 2\r\n                        }]\r\n                    }\r\n       this.userInfoFormGroup = <RxFormGroup>this.formBuilder.formGroup(user,formBuilderConfig);\r\n     \r\n    }\r\n     getFormArray(){\r\n      let formarray = this.userInfoFormGroup.controls.skills as FormArray;\r\n      return formarray.controls;\r\n    }\r\n}\r\n",
        "html": "<div>\r\n    <form  [formGroup]=\"userInfoFormGroup\">\r\n      <div class=\"form-group\">\r\n        <label>First Name</label>\r\n        <input type=\"text\" formControlName=\"firstName\" class=\"form-control\"  />\r\n  \r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label>Last Name</label>\r\n        <input type=\"text\" formControlName=\"lastName\" class=\"form-control\"  />  \r\n      </div>\r\n  \r\n      <div class=\"form-group\" [formGroup]=\"hobbyGroup\" *ngFor=\"let hobbyGroup of getFormArray()\">\r\n        <label>name</label>\r\n        <input type=\"text\" formControlName=\"name\" class=\"form-control\"  />     \r\n      </div>\r\n\r\n      <button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n    </form>\r\n  </div>\r\n  ",
        "model": "import { prop,propArray } from   \"@rxweb/reactive-form-validators\"   \r\n\r\n\r\nexport class Skill {\r\n    @prop()\r\n    name: string;\r\n}\r\nexport class Address {\r\n\r\n    @prop()\r\n    city: string;\r\n   \r\n   @prop()\r\n   state: string;\r\n\r\n}\r\nexport class User {\r\n\r\n\t  @prop() \r\n\t  firstName: string;\r\n\t\r\n  \t@prop()\r\n    lastName:string;\r\n\r\n    @propArray(Skill)\r\n    skills: Skill[];\r\n\r\n    @propObject(Address)\r\n    address: Address;\r\n}",
        "modelName": "user.model.ts",
        "json": {}
    },
    "includeprops": {
        "notes": [],
        "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,FormArray } from \"@angular/forms\"\r\nimport { RxFormBuilder,FormBuilderConfiguration,RxFormGroup } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-formbuilderconfiguration-includeprops',\r\n    templateUrl: './formbuilderconfiguration-includeprops.component.html'\r\n})\r\nexport class FormbuilderconfigurationIncludepropsComponent implements OnInit {\r\n    userInfoFormGroup: RxFormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        var formBuilderConfig = new FormBuilderConfiguration();\r\n        formBuilderConfig.includeProps = [\"firstName\",\"lastName\"]\r\n        formBuilderConfig.excludeProps = [\"email\"]\r\n        this.userInfoFormGroup = <RxFormGroup>this.formBuilder.formGroup(user,formBuilderConfig);\r\n    }\r\n}\r\n",
        "html": "<div>\r\n    <form  [formGroup]=\"userInfoFormGroup\">\r\n      <div class=\"form-group\">\r\n        <label>First Name</label>\r\n        <input type=\"text\" formControlName=\"firstName\" class=\"form-control\"  />  \r\n      </div>\r\n      \r\n      <div class=\"form-group\">\r\n        <label>Last Name</label>\r\n        <input type=\"text\" formControlName=\"lastName\" class=\"form-control\"  />  \r\n      </div> \r\n\r\n      <button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n    </form>\r\n  </div>\r\n  ",
        "model": "import {prop} from   \"@rxweb/reactive-form-validators\"   \r\n\r\n\r\nexport class User {\r\n\r\n       @prop() \r\n\tfirstName: string;\r\n\t\r\n  \t@prop()\r\n        lastName:string;\r\n\r\n        @prop()\r\n        email:string;\r\n}",
        "modelName": "user.model.ts",
        "json": {}
    },
    "arrayinstance":{"component":" var formBuilderConfig = new FormBuilderConfiguration();\r\n        formBuilderConfig.autoInstanceConfig = {\r\n                arrayPropInstanceConfig: [{\r\n                            propertyName: 'skills',\r\n                            rowItems: 2\r\n                        }]\r\n                    } \r\n this.userInfoFormGroup = <RxFormGroup>this.formBuilder.formGroup(user,formBuilderConfig);"},
    "objectinstance":{"component":"   var formBuilderConfig = new FormBuilderConfiguration();\r\n        formBuilderConfig.autoInstanceConfig = {\r\n                        objectPropInstanceConfig: [{\r\n                            propertyName: 'address',\r\n                            \r\n                        }]\r\n        }"},
    "include":{"component":"formBuilderConfig.includeProps = [\"userName\",\"password\",\"confirmPassword\"]\r\n         formBuilderConfig.excludeProps = [\"email\"]"}
}