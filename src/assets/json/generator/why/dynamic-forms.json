[
    {
        "title": "UI Bindings",
        "without": "export class FormControlModel {\r\n  _label: string;\r\n  _placeholder: string;\r\n\r\n  set label(value: string) {\r\n    this._label = value;\r\n  }\r\n\r\n  get label() {\r\n    console.log(this._label);\r\n    return this._label;\r\n  }\r\n\r\n  set placeholder(value: string) {\r\n    this._placeholder = value;\r\n  }\r\n\r\n  get placeholder() {\r\n    return this._placeholder;\r\n  }\r\n}\r\n\r\n@Component({\r\n  template: \".<form [formGroup]=\"dynamicFormBuildConfig.formGroup\">\r\n  <div viewMode=\"basic\" [rxwebDynamicForm]=\"dynamicFormBuildConfig\"\r\n  [uiBindings]=\"uiBindings\">\r\n  <\/div>\r\n<\/form>\",\r\n  selector: \"app-dynamic-form-binding\"\r\n})\r\nexport class StandardFormBindingComponent {\r\n  @Input() formControls: FormControlModel[];\r\n\r\n}",
        "with": "export class DynamicFormControlModel extends FormControlConfig {\r\n  _label: string;\r\n  _placeholder: string;\r\n\r\n  set label(value: string) {\r\n    this._label = value;\r\n  }\r\n\r\n  get label() {\r\n    return this._label;\r\n  }\r\n\r\n  set placeholder(value: string) {\r\n    this._placeholder = value;\r\n  }\r\n\r\n  get placeholder() {\r\n    return this._placeholder;\r\n  }\r\n}\r\n@Component({\r\n  template: \".<div class=\"form-group\" *ngFor=\"let formControl of formControls\">\r\n\t<label>{{formControl.label}}<\/label>\r\n\t<input [placeholder]=\"formControl.placeholder\" type=\"text\"\r\n   [class.is-invalid]=\"!formControl.valid\" class=\"form-control\"\r\n    [formControl]=\"formControl.formControl\" \/>\r\n\t<span *ngIf=\"!formControl.formControl.valid\"> \r\n    {{formControl.formControl.errors.required.message}}    \r\n  <\/span>\r\n<\/div>\",\r\n  selector: \"app-dynamic-form-binding\"\r\n})\r\nexport class DynamicFormBindingComponent {\r\n  @Input() dynamicFormBuildConfig: DynamicFormBuildConfig;\r\n  @Input() uiBindings: string[];\r\n}"
    }
]