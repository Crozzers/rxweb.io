{
    "complete": {
        "notes": [],
        "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-minTimeAsync-complete-validator',\r\n    templateUrl: './min-time-async-complete.component.html'\r\n})\r\nexport class MinTimeAsyncCompleteValidatorComponent implements OnInit {\r\n    attandanceDetailFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.attandanceDetailFormGroup = this.formBuilder.group({\r\n            entryPlace:['',], \r\n            openingTime:['', RxwebValidators.minTimeAsync({validatorConfig:of({value:'08:00'})})], \r\n            requiredHours:['', RxwebValidators.minTimeAsync({validatorConfig:of({operator:'>'  ,value:'08:30'})})], \r\n            totalOutTime:['', RxwebValidators.minTimeAsync({validatorConfig:of({allowSeconds:true  ,value:'00:10:00'})})], \r\n            exitTime:['', RxwebValidators.minTimeAsync({validatorConfig:of({message:'You can enter only time format data greater than config value'  ,value:'07:00'})})], \r\n            netInTime:['',], \r\n       });\r\n    }\r\n}\r\n",
        "html": "<div>\r\n  <form  [formGroup]=\"attandanceDetailFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Entry Place</label>\r\n      <input type=\"text\" formControlName=\"entryPlace\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.entryPlace.errors\">{{attandanceDetailFormGroup.controls.entryPlace.errors.minTime.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Opening Time</label>\r\n      <input type=\"text\" formControlName=\"openingTime\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.openingTime.errors\">{{attandanceDetailFormGroup.controls.openingTime.errors.minTime.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Required Hours</label>\r\n      <input type=\"text\" formControlName=\"requiredHours\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Value should be greater than 8:30<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.requiredHours.errors\">{{attandanceDetailFormGroup.controls.requiredHours.errors.minTime.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Total Time Out</label>\r\n      <input type=\"text\" formControlName=\"totalOutTime\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This field allow seconds in input time.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.totalOutTime.errors\">{{attandanceDetailFormGroup.controls.totalOutTime.errors.minTime.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Exit Time</label>\r\n      <input type=\"text\" formControlName=\"exitTime\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.exitTime.errors\">{{attandanceDetailFormGroup.controls.exitTime.errors.minTime.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Net-In Time</label>\r\n      <input type=\"text\" formControlName=\"netInTime\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message using message key<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.netInTime.errors\">{{attandanceDetailFormGroup.controls.netInTime.errors.minTimeMessageKey.message}}<br/></small>\t\t\r\n    </div>\r\n    <button [disabled]=\"!attandanceDetailFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n",
        "model": null,
        "modelName": null,
        "json": {}
    },
    "valueExample": {
        "notes": null,
        "component": null,
        "html": null,
        "model": "RxwebValidators.minTimeAsync({validatorConfig:of({value:'08:00'})});\r\n",
        "modelName": null,
        "json": {}
    },
    "value": {
        "notes": [],
        "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-minTimeAsync-value-validator',\r\n    templateUrl: './min-time-async-value.component.html'\r\n})\r\nexport class MinTimeAsyncValueValidatorComponent implements OnInit {\r\n    attandanceDetailFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.attandanceDetailFormGroup = this.formBuilder.group({\r\n            openingTime:['', RxwebValidators.minTimeAsync({validatorConfig:of({value:'08:00'})})], \r\n       });\r\n    }\r\n}\r\n",
        "html": "<div>\r\n  <form  [formGroup]=\"attandanceDetailFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Opening Time</label>\r\n      <input type=\"text\" formControlName=\"openingTime\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.openingTime.errors\">{{attandanceDetailFormGroup.controls.openingTime.errors.minTime.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!attandanceDetailFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n",
        "model": null,
        "modelName": null,
        "json": {}
    },
    "operatorExample": {
        "notes": null,
        "component": null,
        "html": null,
        "model": "RxwebValidators.minTimeAsync({validatorConfig:of({operator:'>'  ,value:'08:30'})});\r\n",
        "modelName": null,
        "json": {}
    },
    "operator": {
        "notes": [],
        "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-minTimeAsync-operator-validator',\r\n    templateUrl: './min-time-async-operator.component.html'\r\n})\r\nexport class MinTimeAsyncOperatorValidatorComponent implements OnInit {\r\n    attandanceDetailFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.attandanceDetailFormGroup = this.formBuilder.group({\r\n            requiredHours:['', RxwebValidators.minTimeAsync({validatorConfig:of({operator:'>'  ,value:'08:30'})})], \r\n       });\r\n    }\r\n}\r\n",
        "html": "<div>\r\n  <form  [formGroup]=\"attandanceDetailFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Required Hours</label>\r\n      <input type=\"text\" formControlName=\"requiredHours\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Value should be greater than 8:30<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.requiredHours.errors\">{{attandanceDetailFormGroup.controls.requiredHours.errors.minTime.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!attandanceDetailFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n",
        "model": null,
        "modelName": null,
        "json": {}
    },
    "allowSecondsExample": {
        "notes": null,
        "component": null,
        "html": null,
        "model": "RxwebValidators.minTimeAsync({validatorConfig:of({allowSeconds:true  ,value:'00:10:00'})});\r\n",
        "modelName": null,
        "json": {}
    },
    "allowSeconds": {
        "notes": [],
        "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-minTimeAsync-allowSeconds-validator',\r\n    templateUrl: './min-time-async-allow-seconds.component.html'\r\n})\r\nexport class MinTimeAsyncAllowSecondsValidatorComponent implements OnInit {\r\n    attandanceDetailFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.attandanceDetailFormGroup = this.formBuilder.group({\r\n            totalOutTime:['', RxwebValidators.minTimeAsync({validatorConfig:of({allowSeconds:true  ,value:'00:10:00'})})], \r\n       });\r\n    }\r\n}\r\n",
        "html": "<div>\r\n  <form  [formGroup]=\"attandanceDetailFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Total Time Out</label>\r\n      <input type=\"text\" formControlName=\"totalOutTime\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This field allow seconds in input time.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.totalOutTime.errors\">{{attandanceDetailFormGroup.controls.totalOutTime.errors.minTime.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!attandanceDetailFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n",
        "model": null,
        "modelName": null,
        "json": {}
    },
    "messageExample": {
        "notes": null,
        "component": null,
        "html": null,
        "model": "RxwebValidators.minTimeAsync({validatorConfig:of({message:'You can enter only time format data greater than config value'  ,value:'07:00'})});\r\n",
        "modelName": null,
        "json": {}
    },
    "message": {
        "notes": [],
        "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-minTimeAsync-message-validator',\r\n    templateUrl: './min-time-async-message.component.html'\r\n})\r\nexport class MinTimeAsyncMessageValidatorComponent implements OnInit {\r\n    attandanceDetailFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.attandanceDetailFormGroup = this.formBuilder.group({\r\n            exitTime:['', RxwebValidators.minTimeAsync({validatorConfig:of({message:'You can enter only time format data greater than config value'  ,value:'07:00'})})], \r\n       });\r\n    }\r\n}\r\n",
        "html": "<div>\r\n  <form  [formGroup]=\"attandanceDetailFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Exit Time</label>\r\n      <input type=\"text\" formControlName=\"exitTime\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.exitTime.errors\">{{attandanceDetailFormGroup.controls.exitTime.errors.minTime.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!attandanceDetailFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n",
        "model": null,
        "modelName": null,
        "json": {}
    },
    "messageKeyExample": {
        "notes": null,
        "component": null,
        "html": null,
        "model": "RxwebValidators.minTimeAsync({validatorConfig:of({messageKey:'minTimeMessageKey'  ,value:'08:30'})});\r\n",
        "modelName": null,
        "json": {}
    },
    "messageKey": {
        "notes": [],
        "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-minTimeAsync-messageKey-validator',\r\n    templateUrl: './min-time-async-message-key.component.html'\r\n})\r\nexport class MinTimeAsyncMessageKeyValidatorComponent implements OnInit {\r\n    attandanceDetailFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.attandanceDetailFormGroup = this.formBuilder.group({\r\n            netInTime:['',], \r\n       });\r\n    }\r\n}\r\n",
        "html": "<div>\r\n  <form  [formGroup]=\"attandanceDetailFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Net-In Time</label>\r\n      <input type=\"text\" formControlName=\"netInTime\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message using message key<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.netInTime.errors\">{{attandanceDetailFormGroup.controls.netInTime.errors.minTimeMessageKey.message}}<br/></small>\t\t\r\n    </div>\r\n    <button [disabled]=\"!attandanceDetailFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n",
        "model": null,
        "modelName": null,
        "json": {}
    },
    "dynamic": {
        "notes": [],
        "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormBuilderConfiguration,RxFormBuilder} from '@rxweb/reactive-form-validators';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n    selector: 'app-minTimeAsync-dynamic-validator',\r\n    templateUrl: './min-time-async-dynamic.component.html'\r\n})\r\nexport class MinTimeAsyncDynamicValidatorComponent implements OnInit {\r\n    attandanceDetailFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: RxFormBuilder , private http: HttpClient )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n\t\tlet formBuilderConfiguration = new FormBuilderConfiguration();\r\n\t\tthis.http.get('assets/examples/reactive-form-validators/validators/minTimeAsync/dynamic/dynamic.json?v='+environment.appVersion).subscribe(dynamic => {\r\n\t\t\tformBuilderConfiguration.dynamicValidation = JSON.parse(JSON.stringify(dynamic));\r\n\t\t\tvar attandanceDetail = { entryPlace:'', openingTime:'', requiredHours:'', totalOutTime:'', exitTime:'', netInTime:'',  }\r\n\t\t\tthis.attandanceDetailFormGroup = this.formBuilder.group(attandanceDetail,formBuilderConfiguration);\r\n\t\t})\r\n    }\r\n}\r\n",
        "html": "<div>\r\n  <form  *ngIf=\"attandanceDetailFormGroup\"  [formGroup]=\"attandanceDetailFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Entry Place</label>\r\n      <input type=\"text\" formControlName=\"entryPlace\" class=\"form-control\"   />\r\n      <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.entryPlace.errors\">{{attandanceDetailFormGroup.controls.entryPlace.errors.minTime.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Opening Time</label>\r\n      <input type=\"text\" formControlName=\"openingTime\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.openingTime.errors\">{{attandanceDetailFormGroup.controls.openingTime.errors.minTime.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Required Hours</label>\r\n      <input type=\"text\" formControlName=\"requiredHours\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Value should be greater than 8:30<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.requiredHours.errors\">{{attandanceDetailFormGroup.controls.requiredHours.errors.minTime.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Total Time Out</label>\r\n      <input type=\"text\" formControlName=\"totalOutTime\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This field allow seconds in input time.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.totalOutTime.errors\">{{attandanceDetailFormGroup.controls.totalOutTime.errors.minTime.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Exit Time</label>\r\n      <input type=\"text\" formControlName=\"exitTime\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.exitTime.errors\">{{attandanceDetailFormGroup.controls.exitTime.errors.minTime.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Net-In Time</label>\r\n      <input type=\"text\" formControlName=\"netInTime\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message using message key<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.netInTime.errors\">{{attandanceDetailFormGroup.controls.netInTime.errors.minTimeMessageKey.message}}<br/></small>\t\t\r\n    </div>\r\n    <button [disabled]=\"!attandanceDetailFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n",
        "model": null,
        "modelName": null,
        "json": {
            "dynamic.json": "{\"entryPlace\":{},\"openingTime\":{\"minTimeAsync\":{\"value\":\"08:00\"}},\"requiredHours\":{\"minTimeAsync\":{\"operator\":\">\",\"value\":\"08:30\"}},\"totalOutTime\":{\"minTimeAsync\":{\"allowSeconds\":\"true\",\"value\":\"00:10:00\"}},\"exitTime\":{\"minTimeAsync\":{\"message\":\"You can enter only time format data greater than config value\",\"value\":\"07:00\"}},\"netInTime\":{\"minTimeAsync\":{\"messageKey\":\"minTimeMessageKey\",\"value\":\"08:30\"}}}"
        }
    },
    "add": {
        "notes": [],
        "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-minTimeAsync-add-validator',\r\n    templateUrl: './min-time-async-add.component.html'\r\n})\r\nexport class MinTimeAsyncAddValidatorComponent implements OnInit {\r\n    attandanceDetailFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.attandanceDetailFormGroup = this.formBuilder.group({\r\n            entryTime:['', RxwebValidators.minTimeAsync({validatorConfig:of({value:'08:00'})})], \r\n       });\r\n    }\r\n}\r\n",
        "html": "<div>\r\n  <form  [formGroup]=\"attandanceDetailFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Entry Time</label>\r\n      <input type=\"text\" formControlName=\"entryTime\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.entryTime.errors\">{{attandanceDetailFormGroup.controls.entryTime.errors.minTime.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!attandanceDetailFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n",
        "model": null,
        "modelName": null,
        "json": {}
    }
}