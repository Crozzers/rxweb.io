{"complete":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { AttandanceDetail } from './attandance-detail.model';\r\n\r\n@Component({\r\n    selector: 'app-minTimeAsync-complete-template-driven-validation-decorators',\r\n    templateUrl: './min-time-async-complete.component.html'\r\n})\r\nexport class MinTimeAsyncCompleteTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    attandancedetail: AttandanceDetail\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.attandancedetail= new AttandanceDetail()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #attandancedetailForm = \"ngForm\" [rxwebForm]=\"attandancedetailForm\" [model]=\"attandancedetail\">\r\n    <div class=\"form-group\">\r\n      <label>Entry Place</label>\r\n\t    <input type=\"text\" name=\"entryPlace\" [(ngModel)]=\"attandancedetail.entryPlace\"  class=\"form-control\" />\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"attandancedetailForm.controls?.entryPlace?.errors\">{{attandancedetailForm.controls?.entryPlace?.errors?.minTime.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Opening Time</label>\r\n\t    <input type=\"text\" name=\"openingTime\" [(ngModel)]=\"attandancedetail.openingTime\"  class=\"form-control\" />\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"attandancedetailForm.controls?.openingTime?.errors\">{{attandancedetailForm.controls?.openingTime?.errors?.minTime.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Required Hours</label>\r\n\t    <input type=\"text\" name=\"requiredHours\" [(ngModel)]=\"attandancedetail.requiredHours\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">Value should be greater than 8:30<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"attandancedetailForm.controls?.requiredHours?.errors\">{{attandancedetailForm.controls?.requiredHours?.errors?.minTime.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Total Time Out</label>\r\n\t    <input type=\"text\" name=\"totalOutTime\" [(ngModel)]=\"attandancedetail.totalOutTime\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">This field allow seconds in input time.<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"attandancedetailForm.controls?.totalOutTime?.errors\">{{attandancedetailForm.controls?.totalOutTime?.errors?.minTime.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Exit Time</label>\r\n\t    <input type=\"text\" name=\"exitTime\" [(ngModel)]=\"attandancedetail.exitTime\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message.<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"attandancedetailForm.controls?.exitTime?.errors\">{{attandancedetailForm.controls?.exitTime?.errors?.minTime.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Net-In Time</label>\r\n\t    <input type=\"text\" name=\"netInTime\" [(ngModel)]=\"attandancedetail.netInTime\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message using message key<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"attandancedetailForm.controls?.netInTime?.errors\">{{attandancedetailForm.controls?.netInTime?.errors?.minTime.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!attandancedetailForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  minTimeAsync,prop, } from   \"@rxweb/reactive-form-validators\" \r\n\rimport { of } from \"rxjs\" \r\n\r\n   \r\n\r\nexport class AttandanceDetail {\r\n\r\n\t@prop()\r\n\tentryPlace: string;\r\n\r\n\t@minTimeAsync({validatorConfig:of({value:'08:00'})}) \r\n\topeningTime: string;\r\n\t\r\n\t\r\n\t@minTimeAsync({validatorConfig:of({operator:'>'  ,value:'08:30'})}) \r\n\trequiredHours: string;\r\n\t\r\n\t\r\n\t@minTimeAsync({validatorConfig:of({allowSeconds:true  ,value:'00:10:00'})}) \r\n\ttotalOutTime: string;\r\n\t\r\n\t\r\n\t@minTimeAsync({validatorConfig:of({message:'You can enter only time format data greater than config value'  ,value:'07:00'})}) \r\n\texitTime: string;\r\n\t\r\n\t\r\n\t@prop()\r\n\tnetInTime: string;\r\n\r\n}\r\n","modelName":"attandance-detail.model.ts","json":{}},"valueExample":{"notes":null,"component":null,"html":null,"model":"@minTimeAsync({validatorConfig:of({value:'08:00'})}) \r\nopeningTime: string;\r\n","modelName":null,"json":{}},"value":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { AttandanceDetail } from './attandance-detail.model';\r\n\r\n@Component({\r\n    selector: 'app-minTimeAsync-value-template-driven-validation-decorators',\r\n    templateUrl: './min-time-async-value.component.html'\r\n})\r\nexport class MinTimeAsyncValueTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    attandancedetail: AttandanceDetail\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.attandancedetail= new AttandanceDetail()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #attandancedetailForm = \"ngForm\" [rxwebForm]=\"attandancedetailForm\" [model]=\"attandancedetail\">\r\n    <div class=\"form-group\">\r\n      <label>Opening Time</label>\r\n\t    <input type=\"text\" name=\"openingTime\" [(ngModel)]=\"attandancedetail.openingTime\"  class=\"form-control\" />\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"attandancedetailForm.controls?.openingTime?.errors\">{{attandancedetailForm.controls?.openingTime?.errors?.minTime.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!attandancedetailForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  minTimeAsync, } from   \"@rxweb/reactive-form-validators\" \r\n\rimport { of } from \"rxjs\" \r\n\r\n   \r\n\r\nexport class AttandanceDetail {\r\n\r\n\t@minTimeAsync({validatorConfig:of({value:'08:00'})}) \r\n\topeningTime: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"attandance-detail.model.ts","json":{}},"operatorExample":{"notes":null,"component":null,"html":null,"model":"@minTimeAsync({validatorConfig:of({operator:'>'  ,value:'08:30'})}) \r\nrequiredHours: string;\r\n","modelName":null,"json":{}},"operator":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { AttandanceDetail } from './attandance-detail.model';\r\n\r\n@Component({\r\n    selector: 'app-minTimeAsync-operator-template-driven-validation-decorators',\r\n    templateUrl: './min-time-async-operator.component.html'\r\n})\r\nexport class MinTimeAsyncOperatorTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    attandancedetail: AttandanceDetail\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.attandancedetail= new AttandanceDetail()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #attandancedetailForm = \"ngForm\" [rxwebForm]=\"attandancedetailForm\" [model]=\"attandancedetail\">\r\n    <div class=\"form-group\">\r\n      <label>Required Hours</label>\r\n\t    <input type=\"text\" name=\"requiredHours\" [(ngModel)]=\"attandancedetail.requiredHours\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">Value should be greater than 8:30<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"attandancedetailForm.controls?.requiredHours?.errors\">{{attandancedetailForm.controls?.requiredHours?.errors?.minTime.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!attandancedetailForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  minTimeAsync, } from   \"@rxweb/reactive-form-validators\" \r\n\rimport { of } from \"rxjs\" \r\n\r\n   \r\n\r\nexport class AttandanceDetail {\r\n\r\n\t@minTimeAsync({validatorConfig:of({operator:'>'  ,value:'08:30'})}) \r\n\trequiredHours: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"attandance-detail.model.ts","json":{}},"allowSecondsExample":{"notes":null,"component":null,"html":null,"model":"@minTimeAsync({validatorConfig:of({allowSeconds:true  ,value:'00:10:00'})}) \r\ntotalOutTime: string;\r\n","modelName":null,"json":{}},"allowSeconds":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { AttandanceDetail } from './attandance-detail.model';\r\n\r\n@Component({\r\n    selector: 'app-minTimeAsync-allowSeconds-template-driven-validation-decorators',\r\n    templateUrl: './min-time-async-allow-seconds.component.html'\r\n})\r\nexport class MinTimeAsyncAllowSecondsTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    attandancedetail: AttandanceDetail\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.attandancedetail= new AttandanceDetail()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #attandancedetailForm = \"ngForm\" [rxwebForm]=\"attandancedetailForm\" [model]=\"attandancedetail\">\r\n    <div class=\"form-group\">\r\n      <label>Total Time Out</label>\r\n\t    <input type=\"text\" name=\"totalOutTime\" [(ngModel)]=\"attandancedetail.totalOutTime\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">This field allow seconds in input time.<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"attandancedetailForm.controls?.totalOutTime?.errors\">{{attandancedetailForm.controls?.totalOutTime?.errors?.minTime.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!attandancedetailForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  minTimeAsync, } from   \"@rxweb/reactive-form-validators\" \r\n\rimport { of } from \"rxjs\" \r\n\r\n   \r\n\r\nexport class AttandanceDetail {\r\n\r\n\t@minTimeAsync({validatorConfig:of({allowSeconds:true  ,value:'00:10:00'})}) \r\n\ttotalOutTime: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"attandance-detail.model.ts","json":{}},"messageExample":{"notes":null,"component":null,"html":null,"model":"@minTimeAsync({validatorConfig:of({message:'You can enter only time format data greater than config value'  ,value:'07:00'})}) \r\nexitTime: string;\r\n","modelName":null,"json":{}},"message":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { AttandanceDetail } from './attandance-detail.model';\r\n\r\n@Component({\r\n    selector: 'app-minTimeAsync-message-template-driven-validation-decorators',\r\n    templateUrl: './min-time-async-message.component.html'\r\n})\r\nexport class MinTimeAsyncMessageTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    attandancedetail: AttandanceDetail\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.attandancedetail= new AttandanceDetail()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #attandancedetailForm = \"ngForm\" [rxwebForm]=\"attandancedetailForm\" [model]=\"attandancedetail\">\r\n    <div class=\"form-group\">\r\n      <label>Exit Time</label>\r\n\t    <input type=\"text\" name=\"exitTime\" [(ngModel)]=\"attandancedetail.exitTime\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message.<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"attandancedetailForm.controls?.exitTime?.errors\">{{attandancedetailForm.controls?.exitTime?.errors?.minTime.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!attandancedetailForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  minTimeAsync, } from   \"@rxweb/reactive-form-validators\" \r\n\rimport { of } from \"rxjs\" \r\n\r\n   \r\n\r\nexport class AttandanceDetail {\r\n\r\n\t@minTimeAsync({validatorConfig:of({message:'You can enter only time format data greater than config value'  ,value:'07:00'})}) \r\n\texitTime: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"attandance-detail.model.ts","json":{}},"messageKeyExample":{"notes":null,"component":null,"html":null,"model":"@minTimeAsync({validatorConfig:of({messageKey:'minTimeMessageKey'  ,value:'08:30'})}) \r\nnetInTime: string;\r\n","modelName":null,"json":{}},"messageKey":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { AttandanceDetail } from './attandance-detail.model';\r\n\r\n@Component({\r\n    selector: 'app-minTimeAsync-messageKey-template-driven-validation-decorators',\r\n    templateUrl: './min-time-async-message-key.component.html'\r\n})\r\nexport class MinTimeAsyncMessageKeyTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    attandancedetail: AttandanceDetail\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.attandancedetail= new AttandanceDetail()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #attandancedetailForm = \"ngForm\" [rxwebForm]=\"attandancedetailForm\" [model]=\"attandancedetail\">\r\n    <div class=\"form-group\">\r\n      <label>Net-In Time</label>\r\n\t    <input type=\"text\" name=\"netInTime\" [(ngModel)]=\"attandancedetail.netInTime\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message using message key<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"attandancedetailForm.controls?.netInTime?.errors\">{{attandancedetailForm.controls?.netInTime?.errors?.minTime.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!attandancedetailForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  minTimeAsync,prop, } from   \"@rxweb/reactive-form-validators\" \r\n\rimport { of } from \"rxjs\" \r\n\r\n   \r\n\r\nexport class AttandanceDetail {\r\n\r\n\t@prop()\r\n\tnetInTime: string;\r\n\r\n}\r\n","modelName":"attandance-detail.model.ts","json":{}},"add":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { AttandanceDetail } from './attandance-detail.model';\r\n\r\n@Component({\r\n    selector: 'app-minTimeAsync-add-template-driven-validation-decorators',\r\n    templateUrl: './min-time-async-add.component.html'\r\n})\r\nexport class MinTimeAsyncAddTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    attandancedetail: AttandanceDetail\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.attandancedetail= new AttandanceDetail()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #attandancedetailForm = \"ngForm\" [rxwebForm]=\"attandancedetailForm\" [model]=\"attandancedetail\">\r\n    <div class=\"form-group\">\r\n      <label>Entry Time</label>\r\n\t    <input type=\"text\" name=\"entryTime\" [(ngModel)]=\"attandancedetail.entryTime\"  class=\"form-control\" />\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"attandancedetailForm.controls?.entryTime?.errors\">{{attandancedetailForm.controls?.entryTime?.errors?.minTime.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!attandancedetailForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  minTimeAsync, } from   \"@rxweb/reactive-form-validators\" \r\n\rimport { of } from \"rxjs\" \r\n\r\n   \r\n\r\nexport class AttandanceDetail {\r\n\r\n\t@minTimeAsync({validatorConfig:of({value:'08:00'})}) \r\n\tentryTime: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"attandance-detail.model.ts","json":{}}}