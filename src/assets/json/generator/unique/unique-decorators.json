{
  "complete": {
    "notes": null,
    "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormArray } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { Employee, Skill } from './employee.model';\r\n\r\n@Component({\r\n    selector: 'app-unique-complete',\r\n    templateUrl: './unique-complete.component.html'\r\n})\r\nexport class UniqueCompleteComponent implements OnInit {\r\n    employeeFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder) { }\r\n\r\n    ngOnInit() {\r\n        let employee = new Employee();\r\n        employee.skills = new Array<Skill>();\r\n        employee.hobbies = new Array<Skill>();\r\n        let skill = new Skill();\r\n        employee.skills.push(skill);\r\n        employee.hobbies.push(skill);\r\n        this.employeeFormGroup = this.formBuilder.formGroup(employee);\r\n    }\r\n\r\n    addSkill() {\r\n        let skills = this.employeeFormGroup.controls.skills as FormArray;\r\n        skills.push(this.formBuilder.formGroup(Skill));\r\n    }\r\n\r\n    addHobby() {\r\n        let hobbies = this.employeeFormGroup.controls.hobbies as FormArray;\r\n        hobbies.push(this.formBuilder.formGroup(Skill));\r\n    }\r\n\r\n}",
    "html": "<div>\r\n    <form [formGroup]=\"employeeFormGroup\">\r\n\r\n        <div class=\"form-group\">\r\n            <h4>Full Name</h4>\r\n            <input type=\"text\" formControlName=\"fullName\" class=\"form-control\" />\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n            <h4>Skills</h4>\r\n            <button class=\"btn btn-primary\" (click)=\"addSkill()\">Add Skill</button>\r\n        </div>\r\n        <table class=\"table\">\r\n            <thead>\r\n                <tr>\r\n                    <th scope=\"col\">#</th>\r\n                    <th scope=\"col\">Skill Name</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr [formGroup]=\"item\" *ngFor=\"let item of employeeFormGroup.controls.skills.controls; let i = index;\">\r\n                    <th scope=\"row\">{{ i+1}}</th>\r\n                    <td><input type=\"text\" formControlName=\"skillName\" class=\"form-control\" />\r\n                        <small class=\"form-text text-danger\" *ngIf=\"item.controls.skillName.errors\">{{item.controls.skillName.errors.unique.message}}<br/></small>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n\r\n                <div class=\"form-group\">\r\n                        <h4>Hobbies</h4>\r\n                        <button class=\"btn btn-primary\" (click)=\"addHobby()\">Add Hobby</button>\r\n                    </div>\r\n                    <table class=\"table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"col\">#</th>\r\n                                <th scope=\"col\">Hobby</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr [formGroup]=\"item\" *ngFor=\"let item of employeeFormGroup.controls.hobbies.controls; let i = index;\">\r\n                                <th scope=\"row\">{{ i+1}}</th>\r\n                                <td><input type=\"text\" formControlName=\"hobbyName\" class=\"form-control\" />\r\n                                    <small class=\"form-text text-danger\" *ngIf=\"item.controls.hobbyName.errors\">{{item.controls.hobbyName.errors.unique.message}}<br/></small>\r\n                                    </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n        <button [disabled]=\"!employeeFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n    </form>\r\n</div>",
    "model": "import {  unique, prop, propArray, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class Skill {\r\n\r\n    @unique()\r\n    skillName: string[];\r\n    \r\n    @unique({message: 'You must enter a unique value'})\r\n\thobbyName: string[];\r\n\r\n}\r\n\r\nexport class Employee {\r\n\r\n    @prop()\r\n    fullName:string;\r\n\r\n\t@propArray(Skill)\r\n    skills: Skill[];\r\n    \r\n    @propArray(Skill)\r\n\thobbies: Skill[];\r\n\r\n}",
    "modelName": "employee.model.ts",
    "jsonName": null,
    "json": null
  },
  "additionalValidation": {
    "notes": null,
    "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormArray } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { Employee, Skill } from './employee.model';\r\n\r\n@Component({\r\n    selector: 'app-unique-additionalValidation',\r\n    templateUrl: './unique-additional-validation.component.html'\r\n})\r\nexport class UniqueAdditionalValidationComponent implements OnInit {\r\n    employeeFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder) { }\r\n\r\n        ngOnInit() {\r\n            let employee = new Employee();\r\n            employee.skills = new Array<Skill>();\r\n            let skill = new Skill();\r\n            employee.skills.push(skill);\r\n            this.employeeFormGroup = this.formBuilder.formGroup(employee);\r\n        }\r\n    \r\n        addSkill(){\r\n            let  skills = this.employeeFormGroup.controls.skills as FormArray;\r\n            skills.push(this.formBuilder.formGroup(Skill));\r\n          }\r\n\r\n}",
    "html": "<div>\r\n\t<form [formGroup]=\"employeeFormGroup\">\r\n\r\n\t\t<div class=\"form-group\">\r\n\t\t\t<h4>Skills</h4>\r\n                <button class=\"btn btn-primary\" (click)=\"addSkill()\">Add Skill</button>\r\n            </div>\r\n            <table class=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">#</th>\r\n                        <th scope=\"col\">Skill Name</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr [formGroup]=\"item\" *ngFor=\"let item of employeeFormGroup.controls.skills.controls; let i = index;\">\r\n                        <th scope=\"row\">{{ i+1}}</th>\r\n                        <td><input type=\"text\" formControlName=\"skillName\" class=\"form-control\" />\r\n                            <small class=\"form-text text-danger\" *ngIf=\"item.controls.skillName.errors\">{{item.controls.skillName.errors.unique.message}}<br/></small>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n    \r\n            <button [disabled]=\"!employeeFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n        </form>\r\n    </div>",
    "model": "import {  unique, prop, propArray, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class Skill {\r\n\r\n    @unique({additionalValidation:(fieldName)=>{ return false; }})\r\n\tskillName: string[];\r\n\r\n}\r\n\r\nexport class Employee {\r\n\r\n\t@propArray(Skill)\r\n\tskills: Skill[];\r\n\r\n}\r\n",
    "modelName": "employee.model.ts",
    "jsonName": null,
    "json": null
  },
  "messageExample": {
    "notes": null,
    "component": null,
    "html": null,
    "model": "    @unique({message: 'You must enter a unique value'})\r\n\thobbies: string[];",
    "modelName": null,
    "jsonName": null,
    "json": null
  },
  "message": {
    "notes": null,
    "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormArray } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { Employee, Skill } from './employee.model';\r\n\r\n@Component({\r\n    selector: 'app-unique-message',\r\n    templateUrl: './unique-message.component.html'\r\n})\r\nexport class UniqueMessageComponent implements OnInit {\r\n    employeeFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder) { }\r\n\r\n        ngOnInit() {\r\n          let employee = new Employee();\r\n          employee.hobbies = new Array<Skill>();\r\n          let skill = new Skill();\r\n          employee.hobbies.push(skill);\r\n          this.employeeFormGroup = this.formBuilder.formGroup(employee);\r\n      }\r\n  \r\n      addHobby(){\r\n          let  hobbies = this.employeeFormGroup.controls.hobbies as FormArray;\r\n          hobbies.push(this.formBuilder.formGroup(Skill));\r\n        }\r\n  \r\n\r\n}",
    "html": "<div>\r\n    <form [formGroup]=\"employeeFormGroup\">\r\n\r\n        <div class=\"form-group\">\r\n            <h4>Hobbies</h4>\r\n            <button class=\"btn btn-primary\" (click)=\"addHobby()\">Add Hobby</button>\r\n        </div>\r\n        <table class=\"table\">\r\n            <thead>\r\n                <tr>\r\n                    <th scope=\"col\">#</th>\r\n                    <th scope=\"col\">Hobby</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr [formGroup]=\"item\" *ngFor=\"let item of employeeFormGroup.controls.hobbies.controls; let i = index;\">\r\n                    <th scope=\"row\">{{ i+1}}</th>\r\n                    <td><input type=\"text\" formControlName=\"hobbyName\" class=\"form-control\" />\r\n                        <small class=\"form-text text-danger\" *ngIf=\"item.controls.hobbyName.errors\">{{item.controls.hobbyName.errors.unique.message}}<br/></small>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n        <button [disabled]=\"!employeeFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n    </form>\r\n</div>",
    "model": "import {  unique, prop, propArray, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class Skill {\r\n\r\n    @unique({message: 'You must enter a unique value'})\r\n\thobbyName: string[];\r\n\r\n}\r\n\r\nexport class Employee {\r\n\r\n    @propArray(Skill)\r\n\thobbies: Skill[];\r\n\r\n}\r\n",
    "modelName": "employee.model.ts",
    "jsonName": null,
    "json": null
  },
  "add": {
    "notes": null,
    "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormArray } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { Employee, Skill } from './employee.model';\r\n\r\n@Component({\r\n    selector: 'app-unique-add',\r\n    templateUrl: './unique-add.component.html'\r\n})\r\nexport class UniqueAddComponent implements OnInit {\r\n    employeeFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder) { }\r\n\r\n    ngOnInit() {\r\n        let employee = new Employee();\r\n        employee.skills = new Array<Skill>();\r\n        let skill = new Skill();\r\n        employee.skills.push(skill);\r\n        this.employeeFormGroup = this.formBuilder.formGroup(employee);\r\n    }\r\n\r\n    addSkill(){\r\n        let  skills = this.employeeFormGroup.controls.skills as FormArray;\r\n        skills.push(this.formBuilder.formGroup(Skill));\r\n      }\r\n\r\n}",
    "html": "<div>\r\n    <form [formGroup]=\"employeeFormGroup\">\r\n        <div class=\"form-group\">\r\n            <h4>Skills</h4>\r\n            <button class=\"btn btn-primary\" (click)=\"addSkill()\">Add Skill</button>\r\n        </div>\r\n        <table class=\"table\">\r\n            <thead>\r\n                <tr>\r\n                    <th scope=\"col\">#</th>\r\n                    <th scope=\"col\">Skill Name</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr [formGroup]=\"item\" *ngFor=\"let item of employeeFormGroup.controls.skills.controls; let i = index;\">\r\n                    <th scope=\"row\">{{ i+1}}</th>\r\n                    <td><input type=\"text\" formControlName=\"skillName\" class=\"form-control\" />\r\n                    <small class=\"form-text text-danger\" *ngIf=\"item.controls.skillName.errors\">{{item.controls.skillName.errors.unique.message}}<br/></small></td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n        <button [disabled]=\"!employeeFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n    </form>\r\n</div>",
    "model": "import {  unique, prop, propArray, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class Skill {\r\n\r\n    @unique()\r\n\tskillName: string[];\r\n\r\n}\r\n\r\nexport class Employee {\r\n\r\n\t@propArray(Skill)\r\n\tskills: Skill[];\r\n\r\n}",
    "modelName": "employee.model.ts",
    "jsonName": null,
    "json": null
  }
}