{
  "complete": {
    "notes": [
      
    ],
    "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, FormArray } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-unique-complete-validator',\r\n    templateUrl: './unique-complete.component.html'\r\n})\r\nexport class UniqueCompleteValidatorComponent implements OnInit {\r\n    employeeFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.employeeFormGroup = this.formBuilder.group({\r\n            fullName:[''], \r\n            skills:this.formBuilder.array([\r\n              this.getSkillFormGroup()\r\n            ]),\r\n              hobbies:this.formBuilder.array([\r\n                this.getHobbyFormGroup()\r\n              ])\r\n        });\r\n    }\r\n\r\n    addSkill(){\r\n        let skillsArray = <FormArray>this.employeeFormGroup.controls.skills;\r\n        skillsArray.push(this.getSkillFormGroup());\r\n      }\r\n  \r\n      getSkillFormGroup(){\r\n        return this.formBuilder.group({\r\n          skillName:['',RxwebValidators.unique()]\r\n        })\r\n      }\r\n\r\n      addHobby(){\r\n        let hobbiesArray = <FormArray>this.employeeFormGroup.controls.hobbies;\r\n        hobbiesArray.push(this.getHobbyFormGroup());\r\n      }\r\n  \r\n      getHobbyFormGroup(){\r\n        return this.formBuilder.group({\r\n          hobbyName:['',RxwebValidators.unique({message: 'You must enter a unique value'})]\r\n        })\r\n      }\r\n}\r\n",
    "html": "<div>\r\n    <form [formGroup]=\"employeeFormGroup\">\r\n        <div class=\"form-group\">\r\n            <h4>Full Name</h4>\r\n            <input type=\"text\" formControlName=\"fullName\" class=\"form-control\" />\r\n        </div>\r\n\r\n        <h4>Skills</h4>\r\n        <button class=\"btn btn-primary\" (click)=\"addSkill()\">Add Skill</button>\r\n        <table class=\"table\">\r\n            <thead>\r\n                <tr>\r\n                    <th scope=\"col\">#</th>\r\n                    <th scope=\"col\">Skill Name</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr [formGroup]=\"skillGroup\" *ngFor=\"let skillGroup of employeeFormGroup.controls.skills.controls;let i = index;\">\r\n                    <th scope=\"row\">{{i+ 1}}</th>\r\n                    <td><input type=\"text\" formControlName=\"skillName\" class=\"form-control\" /><small class=\"form-text text-danger\" *ngIf=\"skillGroup.controls.skillName.errors\">{{skillGroup.controls.skillName.errors.unique.message}}<br/></small>\t</td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n        \r\n        <h4>Hobby Name</h4>\r\n        <button class=\"btn btn-primary\" (click)=\"addHobby()\">Add Hobby</button>\r\n        <table class=\"table\">\r\n            <thead>\r\n                <tr>\r\n                    <th scope=\"col\">#</th>\r\n                    <th scope=\"col\">Hobby Name</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr [formGroup]=\"hobbyGroup\" *ngFor=\"let hobbyGroup of employeeFormGroup.controls.hobbies.controls;let i = index;\">\r\n                    <th scope=\"row\">{{i+ 1}}</th>\r\n                    <td><input type=\"text\" formControlName=\"hobbyName\" class=\"form-control\" /><small class=\"form-text text-danger\" *ngIf=\"hobbyGroup.controls.hobbyName.errors\">{{hobbyGroup.controls.hobbyName.errors.unique.message}}<br/></small></td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n        <button [disabled]=\"!employeeFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n    </form>\r\n</div>",
    "model": null,
    "modelName": null,
    "jsonName": null,
    "json": null
  },
  "additionalValidationExample": {
    "notes": null,
    "component": null,
    "html": null,
    "model": "RxwebValidators.unique({additionalValidation:(fieldName)=>{ return false; }})",
    "modelName": null,
    "jsonName": null,
    "json": null
  },
  "additionalValidation": {
    "notes": [
      
    ],
    "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, FormArray } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-unique-additionalValidation-validator',\r\n    templateUrl: './unique-additional-validation.component.html'\r\n})\r\nexport class UniqueAdditionalValidationValidatorComponent implements OnInit {\r\n    employeeFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.employeeFormGroup = this.formBuilder.group({\r\n            fullName:[''], \r\n            skills:this.formBuilder.array([\r\n              this.getSkillFormGroup()\r\n            ])\r\n        });\r\n    }\r\n\r\n    addSkill(){\r\n        let skillsArray = <FormArray>this.employeeFormGroup.controls.skills;\r\n        skillsArray.push(this.getSkillFormGroup());\r\n      }\r\n  \r\n      getSkillFormGroup(){\r\n        return this.formBuilder.group({\r\n          skillName:['',RxwebValidators.unique({additionalValidation:(fieldName)=>{ return false; }})]\r\n        })\r\n      }\r\n\r\n}\r\n",
    "html": "<div>\r\n    <form [formGroup]=\"employeeFormGroup\">\r\n\r\n        <h4>Skills</h4>\r\n        <button class=\"btn btn-primary\" (click)=\"addSkill()\">Add Skill</button>\r\n        <table class=\"table\">\r\n            <thead>\r\n                <tr>\r\n                    <th scope=\"col\">#</th>\r\n                    <th scope=\"col\">Skill Name</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr [formGroup]=\"skillGroup\" *ngFor=\"let skillGroup of employeeFormGroup.controls.skills.controls;let i = index;\">\r\n                    <th scope=\"row\">{{i+ 1}}</th>\r\n                    <td><input type=\"text\" formControlName=\"skillName\" class=\"form-control\" />\r\n                        <small class=\"form-text text-danger\" *ngIf=\"skillGroup.controls.skillName.errors\">{{skillGroup.controls.skillName.errors.unique.message}}<br/></small>\t\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n\r\n        <button [disabled]=\"!employeeFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n    </form>\r\n</div>",
    "model": null,
    "modelName": null,
    "jsonName": null,
    "json": null
  },
  "messageExample": {
    "notes": null,
    "component": null,
    "html": null,
    "model": "RxwebValidators.unique({message: 'You must enter a unique value'})",
    "modelName": null,
    "jsonName": null,
    "json": null
  },
  "message": {
    "notes": [
      
    ],
    "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, FormArray } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-unique-message-validator',\r\n    templateUrl: './unique-message.component.html'\r\n})\r\nexport class UniqueMessageValidatorComponent implements OnInit {\r\n    employeeFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.employeeFormGroup = this.formBuilder.group({\r\n              hobbies:this.formBuilder.array([\r\n                this.getHobbyFormGroup()\r\n              ])\r\n        });\r\n    }\r\n\r\n      addHobby(){\r\n        let hobbiesArray = <FormArray>this.employeeFormGroup.controls.hobbies;\r\n        hobbiesArray.push(this.getHobbyFormGroup());\r\n      }\r\n  \r\n      getHobbyFormGroup(){\r\n        return this.formBuilder.group({\r\n          hobbyName:['',RxwebValidators.unique({message: 'You must enter a unique value'})]\r\n        })\r\n      }\r\n}",
    "html": "<div>\r\n    <form [formGroup]=\"employeeFormGroup\">\r\n\r\n        <h4>Hobby Name</h4>\r\n        <button class=\"btn btn-primary\" (click)=\"addHobby()\">Add Hobby</button>\r\n        <table class=\"table\">\r\n            <thead>\r\n                <tr>\r\n                    <th scope=\"col\">#</th>\r\n                    <th scope=\"col\">Hobby Name</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr [formGroup]=\"hobbyGroup\" *ngFor=\"let hobbyGroup of employeeFormGroup.controls.hobbies.controls;let i = index;\">\r\n                    <th scope=\"row\">{{i+ 1}}</th>\r\n                    <td><input type=\"text\" formControlName=\"hobbyName\" class=\"form-control\" /><small class=\"form-text text-danger\" *ngIf=\"hobbyGroup.controls.hobbyName.errors\">{{hobbyGroup.controls.hobbyName.errors.unique.message}}<br/></small>\t</td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n        <button [disabled]=\"!employeeFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n    </form>\r\n</div>",
    "model": null,
    "modelName": null,
    "jsonName": null,
    "json": null
  },
  "add": {
    "notes": [
      
    ],
    "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, FormArray } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-unique-add-validator',\r\n    templateUrl: './unique-add.component.html'\r\n})\r\nexport class UniqueAddValidatorComponent implements OnInit {\r\n    employeeFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.employeeFormGroup = this.formBuilder.group({\r\n            fullName:[''], \r\n            skills:this.formBuilder.array([\r\n              this.getSkillFormGroup()\r\n            ])\r\n        });\r\n    }\r\n\r\n    addSkill(){\r\n        let skillsArray = <FormArray>this.employeeFormGroup.controls.skills;\r\n        skillsArray.push(this.getSkillFormGroup());\r\n      }\r\n  \r\n      getSkillFormGroup(){\r\n        return this.formBuilder.group({\r\n          skillName:['',RxwebValidators.unique()]\r\n        })\r\n      }\r\n\r\n}\r\n",
    "html": "<div>\r\n    <form [formGroup]=\"employeeFormGroup\">\r\n\r\n        <h4>Skills</h4>\r\n        <button class=\"btn btn-primary\" (click)=\"addSkill()\">Add Skill</button>\r\n        <table class=\"table\">\r\n            <thead>\r\n                <tr>\r\n                    <th scope=\"col\">#</th>\r\n                    <th scope=\"col\">Skill Name</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr [formGroup]=\"skillGroup\" *ngFor=\"let skillGroup of employeeFormGroup.controls.skills.controls;let i = index;\">\r\n                    <th scope=\"row\">{{i+ 1}}</th>\r\n                    <td><input type=\"text\" formControlName=\"skillName\" class=\"form-control\" />\r\n                    <small class=\"form-text text-danger\" *ngIf=\"skillGroup.controls.skillName.errors\">{{skillGroup.controls.skillName.errors.unique.message}}<br/></small>\t\r\n                    </td>\r\n                </tr>\r\n                \r\n            </tbody>\r\n        </table>\r\n\r\n        <button [disabled]=\"!employeeFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n    </form>\r\n</div>",
    "model": null,
    "modelName": null,
    "jsonName": null,
    "json": null
  }
}