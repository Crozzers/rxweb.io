{
  "complete": {
    "notes": [
      
    ],
    "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormArray } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { Employee } from './employee.model';\r\n\r\n@Component({\r\n    selector: 'app-unique-complete-template-driven-validation-directives',\r\n    templateUrl: './unique-complete.component.html'\r\n})\r\nexport class UniqueCompleteTemplateDrivenValidationDirectivesComponent implements OnInit {\r\n    employeeFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder) { }\r\n\r\n    ngOnInit() {\r\n        let employee = new Employee();\r\n        employee.skillName.push();\r\n        employee.companyName.push();\r\n        employee.hobbyName.push();\r\n        this.employeeFormGroup = this.formBuilder.formGroup(employee);\r\n    }\r\n\r\n    completeSkill(){\r\n        let skillsArray = <FormArray>this.employeeFormGroup.controls.skills;\r\n        skillsArray.push(this.getSkillFormGroup());\r\n      }\r\n\r\n      getSkillFormGroup(){\r\n        return this.formBuilder.group({\r\n          skillName: ['']\r\n        })\r\n      }\r\n\r\n      completeCompany(){\r\n        let companiesArray = <FormArray>this.employeeFormGroup.controls.companies;\r\n        companiesArray.push(this.getCompanyFormGroup());\r\n      }\r\n\r\n      getCompanyFormGroup(){\r\n        return this.formBuilder.group({\r\n          companyName: ['']\r\n        })\r\n      }\r\n\r\n      completeHobby(){\r\n        let hobbiesArray = <FormArray>this.employeeFormGroup.controls.hobbies;\r\n        hobbiesArray.push(this.getHobbyFormGroup());\r\n      }\r\n\r\n      getHobbyFormGroup(){\r\n        return this.formBuilder.group({\r\n          hobbyName: ['']\r\n        })\r\n      }\r\n\r\n}",
    "html": "<div>\r\n    <form [formGroup]=\"employeeFormGroup\">\r\n\r\n        <div class=\"form-group\">\r\n            <label>Full Name</label>\r\n            <input type=\"text\" formControlName=\"fullName\" class=\"form-control\" />\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n            <label>Skills</label>\r\n            <button class=\"btn btn-primary\" (click)=\"addSkill()\">Add Skill</button>\r\n        </div>\r\n        <table class=\"table\">\r\n            <thead>\r\n                <tr>\r\n                    <th scope=\"col\">#</th>\r\n                    <th scope=\"col\">Skill Name</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr [formGroup]=\"item\" *ngFor=\"let item of employeeFormGroup.controls.skills.controls; let i = index;\">\r\n                    <th scope=\"row\">{{ i+1}}</th>\r\n                    <td><input type=\"text\" formControlName=\"skillName\" class=\"form-control\" unique />\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n\r\n            <div class=\"form-group\">\r\n                    <label>Companies</label>\r\n                    <button class=\"btn btn-primary\" (click)=\"addcompany()\">Add Company</button>\r\n                </div>\r\n                <table class=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">#</th>\r\n                            <th scope=\"col\">Company Name</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr [formGroup]=\"item\" *ngFor=\"let item of employeeFormGroup.controls.companies.controls; let i = index;\">\r\n                            <th scope=\"row\">{{ i+1}}</th>\r\n                            <td><input type=\"text\" formControlName=\"companyName\" class=\"form-control\" [unique]=\"{'conditionalExpression':'x => x.fullName == \\'Bharat Patel\\''}\" />\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n\r\n                <div class=\"form-group\">\r\n                        <label>Hobbies</label>\r\n                        <button class=\"btn btn-primary\" (click)=\"addHobby()\">Add Hobby</button>\r\n                    </div>\r\n                    <table class=\"table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"col\">#</th>\r\n                                <th scope=\"col\">Hobby</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr [formGroup]=\"item\" *ngFor=\"let item of employeeFormGroup.controls.hobbies.controls; let i = index;\">\r\n                                <th scope=\"row\">{{ i+1}}</th>\r\n                                <td><input type=\"text\" formControlName=\"hobbyName\" class=\"form-control\"  [unique]=\"{'message':'You must enter a unique value'}\"/>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n        <button [disabled]=\"!employeeFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n    </form>\r\n</div>",
    "model": "export class Skill {\r\n\r\n\r\n    department: string;\r\n\r\n   \r\n    skillName: string[];\r\n    \r\n\r\n    companyName: string[];\r\n    \r\n  \r\n\thobbies: string[];\r\n\r\n}\r\n\r\nexport class Employee {\r\n\r\n \r\n    fullName:string;\r\n\r\n\t\r\n    skillName: Skill[];    \r\n    \r\n\r\n    companyName: Skill[];\r\n    \r\n\r\n\thobbyName: Skill[];\r\n\r\n}",
    "modelName": "employee.model.ts",
    "jsonName": null,
    "json": null
  },
  "conditionalExpressionExampleFunction": {
    "notes": null,
    "component": null,
    "html": null,
    "model": "[unique]=\"{'conditionalExpression':'x => x.fullName == \\'Bharat Patel\\''}\"",
    "modelName": null,
    "jsonName": null,
    "json": null
  },
  "conditionalExpression": {
    "notes": [
      
    ],
    "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormArray } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { Employee } from './employee.model';\r\n\r\n@Component({\r\n    selector: 'app-unique-conditionalExpression-template-driven-validation-directives',\r\n    templateUrl: './unique-conditional-expression.component.html'\r\n})\r\nexport class UniqueConditionalExpressionTemplateDrivenValidationDirectivesComponent implements OnInit {\r\n    employeeFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder) { }\r\n\r\n    ngOnInit() {\r\n        let employee = new Employee();\r\n        employee.companyName.push();\r\n        this.employeeFormGroup = this.formBuilder.formGroup(employee);\r\n    }\r\n\r\n      completeCompany(){\r\n        let companiesArray = <FormArray>this.employeeFormGroup.controls.companies;\r\n        companiesArray.push(this.getCompanyFormGroup());\r\n      }\r\n\r\n      getCompanyFormGroup(){\r\n        return this.formBuilder.group({\r\n          companyName: ['']\r\n        })\r\n      }\r\n\r\n}",
    "html": "<div>\r\n    <form [formGroup]=\"employeeFormGroup\">\r\n\r\n        <div class=\"form-group\">\r\n            <label>Full Name</label>\r\n            <input type=\"text\" formControlName=\"fullName\" class=\"form-control\" />\r\n        </div>\r\n\r\n            <div class=\"form-group\">\r\n                    <label>Companies</label>\r\n                    <button class=\"btn btn-primary\" (click)=\"addcompany()\">Add Company</button>\r\n                </div>\r\n                <table class=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">#</th>\r\n                            <th scope=\"col\">Company Name</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr [formGroup]=\"item\" *ngFor=\"let item of employeeFormGroup.controls.companies.controls; let i = index;\">\r\n                            <th scope=\"row\">{{ i+1}}</th>\r\n                            <td><input type=\"text\" formControlName=\"companyName\" class=\"form-control\"  [unique]=\"{'conditionalExpression':'x => x.fullName == \\'Bharat Patel\\''}\" />\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n\r\n        <button [disabled]=\"!employeeFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n    </form>\r\n</div>",
    "model": "export class Skill {\r\n\r\n    department: string;\r\n    \r\n    companyName: string[];\r\n\r\n}\r\n\r\nexport class Employee {\r\n\r\n    fullName:string;\r\n\r\n    companyName: Skill[];\r\n\r\n}",
    "modelName": "employee.model.ts",
    "jsonName": null,
    "json": null
  },
  "conditionalExpressionExampleString": {
    "notes": null,
    "component": null,
    "html": null,
    "model": "[time]=\"{'conditionalExpression':'x => x.entryPlace == \\'Lunch Room\\''}\"",
    "modelName": null,
    "jsonName": null,
    "json": null
  },
  "additionalValidationExample": {
    "notes": null,
    "component": null,
    "html": null,
    "model": "[time]=\"{'allowSeconds':true}\"",
    "modelName": null,
    "jsonName": null,
    "json": null
  },
  "allowSeconds": {
    "notes": [
      
    ],
    "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormArray } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { Employee } from './employee.model';\r\n\r\n@Component({\r\n    selector: 'app-unique-additionalValidation-template-driven-validation-directives',\r\n    templateUrl: './unique-additional-validation.component.html'\r\n})\r\nexport class UniqueAdditionalValidationTemplateDrivenValidationDirectivesComponent implements OnInit {\r\n    employeeFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder) { }\r\n\r\n    ngOnInit() {\r\n        let employee = new Employee();\r\n        employee.companyName.push();\r\n        this.employeeFormGroup = this.formBuilder.formGroup(employee);\r\n    }\r\n\r\n      completeCompany(){\r\n        let companiesArray = <FormArray>this.employeeFormGroup.controls.companies;\r\n        companiesArray.push(this.getCompanyFormGroup());\r\n      }\r\n\r\n      getCompanyFormGroup(){\r\n        return this.formBuilder.group({\r\n          companyName: ['']\r\n        })\r\n      }\r\n\r\n}",
    "html": "<div>\r\n    <form [formGroup]=\"employeeFormGroup\">\r\n\r\n        <div class=\"form-group\">\r\n            <label>Full Name</label>\r\n            <input type=\"text\" formControlName=\"fullName\" class=\"form-control\" />\r\n        </div>\r\n\r\n            <div class=\"form-group\">\r\n                    <label>Companies</label>\r\n                    <button class=\"btn btn-primary\" (click)=\"addcompany()\">Add Company</button>\r\n                </div>\r\n                <table class=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">#</th>\r\n                            <th scope=\"col\">Company Name</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr [formGroup]=\"item\" *ngFor=\"let item of employeeFormGroup.controls.companies.controls; let i = index;\">\r\n                            <th scope=\"row\">{{ i+1}}</th>\r\n                            <td><input type=\"text\" formControlName=\"companyName\" class=\"form-control\"   />\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n\r\n        <button [disabled]=\"!employeeFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n    </form>\r\n</div>",
    "model": "export class Skill {\r\n\r\n    department: string;\r\n    \r\n    companyName: string[];\r\n\r\n}\r\n\r\nexport class Employee {\r\n\r\n    fullName:string;\r\n\r\n    companyName: Skill[];\r\n\r\n}\r\n",
    "modelName": "employee.model.ts",
    "jsonName": null,
    "json": null
  },
  "messageExample": {
    "notes": null,
    "component": null,
    "html": null,
    "model": "[unique]=\"{'message':'You must enter a unique value'}\"",
    "modelName": null,
    "jsonName": null,
    "json": null
  },
  "message": {
    "notes": [
      
    ],
    "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormArray } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { Employee } from './employee.model';\r\n\r\n@Component({\r\n    selector: 'app-unique-message-template-driven-validation-directives',\r\n    templateUrl: './unique-message.component.html'\r\n})\r\nexport class UniqueMessageTemplateDrivenValidationDirectivesComponent implements OnInit {\r\n    employeeFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder) { }\r\n\r\n    ngOnInit() {\r\n        let employee = new Employee();\r\n        employee.hobbyName.push();\r\n        this.employeeFormGroup = this.formBuilder.formGroup(employee);\r\n    }\r\n    \r\n      completeHobby(){\r\n        let hobbiesArray = <FormArray>this.employeeFormGroup.controls.hobbies;\r\n        hobbiesArray.push(this.getHobbyFormGroup());\r\n      }\r\n\r\n      getHobbyFormGroup(){\r\n        return this.formBuilder.group({\r\n          hobbyName: ['']\r\n        })\r\n      }\r\n\r\n}",
    "html": "<div>\r\n    <form [formGroup]=\"employeeFormGroup\">\r\n\r\n            <div class=\"form-group\">\r\n            <label>Hobbies</label>\r\n            <button class=\"btn btn-primary\" (click)=\"addHobby()\">Add Hobby</button>\r\n        </div>\r\n        <table class=\"table\">\r\n            <thead>\r\n                <tr>\r\n                    <th scope=\"col\">#</th>\r\n                    <th scope=\"col\">Hobby</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr [formGroup]=\"item\" *ngFor=\"let item of employeeFormGroup.controls.hobbies.controls; let i = index;\">\r\n                    <th scope=\"row\">{{ i+1}}</th>\r\n                    <td><input type=\"text\" formControlName=\"hobbyName\" class=\"form-control\"  [unique]=\"{'message':'You must enter a unique value'}\" />\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n        <button [disabled]=\"!employeeFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n    </form>\r\n</div>",
    "model": "export class Skill {\r\n\r\n    department: string;\r\n\r\n\thobbies: string[];\r\n\r\n}\r\n\r\nexport class Employee {\r\n\r\n    fullName:string;\r\n\r\n\thobbyName: Skill[];\r\n\r\n}",
    "modelName": "employee.model.ts",
    "jsonName": null,
    "json": null
  },
  "add": {
    "notes": [
      
    ],
    "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormArray } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { Employee } from './employee.model';\r\n\r\n@Component({\r\n    selector: 'app-unique-add-template-driven-validation-directives',\r\n    templateUrl: './unique-add.component.html'\r\n})\r\nexport class UniqueAddTemplateDrivenValidationDirectivesComponent implements OnInit {\r\n    employeeFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder) { }\r\n\r\n    ngOnInit() {\r\n        let employee = new Employee();\r\n        employee.skillName.push();\r\n        this.employeeFormGroup = this.formBuilder.formGroup(employee);\r\n    }\r\n\r\n    addSkill(){\r\n        let skillsArray = <FormArray>this.employeeFormGroup.controls.skills;\r\n        skillsArray.push(this.getSkillFormGroup());\r\n      }\r\n      getSkillFormGroup(){\r\n        return this.formBuilder.group({\r\n          skillName: ['']\r\n        })\r\n      }\r\n\r\n}",
    "html": "<div>\r\n    <form [formGroup]=\"employeeFormGroup\">\r\n        <div class=\"form-group\">\r\n            <label>Full Name</label>\r\n            <input type=\"text\" formControlName=\"fullName\" class=\"form-control\" />\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label>Skills</label>\r\n            <button class=\"btn btn-primary\" (click)=\"addSkill()\">Add Skill</button>\r\n        </div>\r\n        <table class=\"table\">\r\n            <thead>\r\n                <tr>\r\n                    <th scope=\"col\">#</th>\r\n                    <th scope=\"col\">Skill Name</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr [formGroup]=\"item\" *ngFor=\"let item of employeeFormGroup.controls.skills.controls; let i = index;\">\r\n                    <th scope=\"row\">{{ i+1}}</th>\r\n                    <td><input type=\"text\" formControlName=\"skillName\" class=\"form-control\" unique/></td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n        <button [disabled]=\"!employeeFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n    </form>\r\n</div>",
    "model": "\r\n\r\nexport class Skill {\r\n\r\n\tskillName: string[];\r\n\r\n}\r\n\r\nexport class Employee {\r\n\r\n    fullName:string;\r\n\r\n\tskillName: Skill[];\r\n\r\n}\r\n\r\n",
    "modelName": "employee.model.ts",
    "jsonName": null,
    "json": null
  }
}