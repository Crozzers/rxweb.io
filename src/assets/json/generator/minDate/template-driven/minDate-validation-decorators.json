{"complete":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-minDate-complete-template-driven-validation-decorators',\r\n    templateUrl: './min-date-complete.component.html'\r\n})\r\nexport class MinDateCompleteTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\" [rxwebForm]=\"userForm\" [model]=\"user\">\r\n    <div class=\"form-group\">\r\n      <label>User Name</label>\r\n\t    <input type=\"text\" name=\"userName\" [(ngModel)]=\"user.userName\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Birth Date' or 'Admission Date', then you need to add 'User Name' input as 'Bharat'<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.userName?.errors\">{{userForm.controls?.userName?.errors?.minDate.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Allocation Date</label>\r\n\t    <input type=\"text\" name=\"allocationDate\" [(ngModel)]=\"user.allocationDate\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">you can enter MinDate upto 30th july 2018<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.allocationDate?.errors\">{{userForm.controls?.allocationDate?.errors?.minDate.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Admission Date</label>\r\n\t    <input type=\"text\" name=\"admissionDate\" [(ngModel)]=\"user.admissionDate\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">To apply the validation of Min Date on 'Admission Date' field, then enter the value 'Bharat' in 'User Name' textbox and you can enter minDate as 30th july 2018<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.admissionDate?.errors\">{{userForm.controls?.admissionDate?.errors?.minDate.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Registration Date</label>\r\n\t    <input type=\"text\" name=\"registrationDate\" [(ngModel)]=\"user.registrationDate\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">you can enter MinDate upto 30th july 2018<br/></small>\r\n      <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.registrationDate?.errors\">{{userForm.controls?.registrationDate?.errors?.minDate.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Enrollment Date</label>\r\n\t    <input type=\"text\" name=\"enrollmentDate\" [(ngModel)]=\"user.enrollmentDate\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">you can enter MinDate upto 30th july 2018<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.enrollmentDate?.errors\">{{userForm.controls?.enrollmentDate?.errors?.minDate.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Last Registration Date</label>\r\n\t    <input type=\"text\" name=\"lastRegistrationDate\" [(ngModel)]=\"user.lastRegistrationDate\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">you can enter MinDate upto value mentioned in fieldName<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.lastRegistrationDate?.errors\">{{userForm.controls?.lastRegistrationDate?.errors?.minDate.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Confirmation Date</label>\r\n\t    <input type=\"text\" name=\"confirmationDate\" [(ngModel)]=\"user.confirmationDate\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">you can enter MinDate upto value mentioned in fieldName<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.confirmationDate?.errors\">{{userForm.controls?.confirmationDate?.errors?.minDate.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  minDate,prop, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class User {\r\n\r\n\t@prop()\r\n\tuserName: string;\r\n\r\n\t@minDate({value:'07/30/2018' }) \r\n\tallocationDate: string;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@minDate({value:'07/30/2018'  ,conditionalExpression:(x,y) => x.userName == \"Bharat\"  }) \r\n\tbirthDate: string;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@minDate({value:'07/30/2018'  ,conditionalExpression:'x => x.userName == \"Bharat\"' }) \r\n\tadmissionDate: string;\r\n\t\r\n\t\r\n\t@minDate({value:'07/30/2018'  ,message:'{{0}} exceeds the Minimum Date Limit' }) \r\n\tregistrationDate: string;\r\n\t\r\n\t\r\n\t@prop()\r\n\tenrollmentDate: string;\r\n\r\n\t@minDate({fieldName:'enrollmentDate' }) \r\n\tlastRegistrationDate: string;\r\n\t\r\n\t\r\n\t@minDate({value:'07/30/2018'  ,operator:'>' }) \r\n\tconfirmationDate: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"user.model.ts","json":{}},"valueExample":{"notes":null,"component":null,"html":null,"model":"@minDate({value:'07/30/2018' }) \r\nallocationDate: string;\r\n","modelName":null,"json":{}},"value":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-minDate-value-template-driven-validation-decorators',\r\n    templateUrl: './min-date-value.component.html'\r\n})\r\nexport class MinDateValueTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\" [rxwebForm]=\"userForm\" [model]=\"user\">\r\n    <div class=\"form-group\">\r\n      <label>Allocation Date</label>\r\n\t    <input type=\"text\" name=\"allocationDate\" [(ngModel)]=\"user.allocationDate\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">you can enter MinDate upto 30th july 2018<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.allocationDate?.errors\">{{userForm.controls?.allocationDate?.errors?.minDate.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  minDate, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class User {\r\n\r\n\t@minDate({value:'07/30/2018' }) \r\n\tallocationDate: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"user.model.ts","json":{}},"valueExampleFunction":{"notes":null,"component":null,"html":null,"model":"@minDate({value:'07/30/2018'  ,conditionalExpression:(x,y) => x.userName == \"Bharat\"  }) \r\nbirthDate: string;\r\n","modelName":null,"json":{}},"conditionalExpressionExampleFunction":{"notes":null,"component":null,"html":null,"model":"@minDate({value:'07/30/2018'  ,conditionalExpression:(x,y) => x.userName == \"Bharat\"  }) \r\nbirthDate: string;\r\n","modelName":null,"json":{}},"conditionalExpression":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-minDate-conditionalExpression-template-driven-validation-decorators',\r\n    templateUrl: './min-date-conditional-expression.component.html'\r\n})\r\nexport class MinDateConditionalExpressionTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\" [rxwebForm]=\"userForm\" [model]=\"user\">\r\n    <div class=\"form-group\">\r\n      <label>User Name</label>\r\n\t    <input type=\"text\" name=\"userName\" [(ngModel)]=\"user.userName\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Birth Date' or 'Admission Date', then you need to add 'User Name' input as 'Bharat'<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.userName?.errors\">{{userForm.controls?.userName?.errors?.minDate.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Admission Date</label>\r\n\t    <input type=\"text\" name=\"admissionDate\" [(ngModel)]=\"user.admissionDate\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">To apply the validation of Min Date on 'Admission Date' field, then enter the value 'Bharat' in 'User Name' textbox and you can enter minDate as 30th july 2018<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.admissionDate?.errors\">{{userForm.controls?.admissionDate?.errors?.minDate.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  minDate,prop, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class User {\r\n\r\n\t@prop()\r\n\tuserName: string;\r\n\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@minDate({value:'07/30/2018'  ,conditionalExpression:'x => x.userName == \"Bharat\"' }) \r\n\tadmissionDate: string;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@minDate({value:'07/30/2018'  ,conditionalExpression:(x,y) => x.userName == \"Bharat\"  }) \r\n\tbirthDate: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"user.model.ts","json":{}},"valueExampleString":{"notes":null,"component":null,"html":null,"model":"@minDate({value:'07/30/2018'  ,conditionalExpression:'x => x.userName == \"Bharat\"' }) \r\nadmissionDate: string;\r\n","modelName":null,"json":{}},"conditionalExpressionExampleString":{"notes":null,"component":null,"html":null,"model":"@minDate({value:'07/30/2018'  ,conditionalExpression:'x => x.userName == \"Bharat\"' }) \r\nadmissionDate: string;\r\n","modelName":null,"json":{}},"messageExample":{"notes":null,"component":null,"html":null,"model":"@minDate({value:'07/30/2018'  ,message:'{{0}} exceeds the Minimum Date Limit' }) \r\nregistrationDate: string;\r\n","modelName":null,"json":{}},"message":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-minDate-message-template-driven-validation-decorators',\r\n    templateUrl: './min-date-message.component.html'\r\n})\r\nexport class MinDateMessageTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\" [rxwebForm]=\"userForm\" [model]=\"user\">\r\n    <div class=\"form-group\">\r\n      <label>Registration Date</label>\r\n\t    <input type=\"text\" name=\"registrationDate\" [(ngModel)]=\"user.registrationDate\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">you can enter MinDate upto 30th july 2018<br/></small>\r\n      <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.registrationDate?.errors\">{{userForm.controls?.registrationDate?.errors?.minDate.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  minDate, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class User {\r\n\r\n\t@minDate({value:'07/30/2018'  ,message:'{{0}} exceeds the Minimum Date Limit' }) \r\n\tregistrationDate: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"user.model.ts","json":{}},"fieldNameExample":{"notes":null,"component":null,"html":null,"model":"@minDate({fieldName:'enrollmentDate' }) \r\nlastRegistrationDate: string;\r\n","modelName":null,"json":{}},"fieldName":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-minDate-fieldName-template-driven-validation-decorators',\r\n    templateUrl: './min-date-field-name.component.html'\r\n})\r\nexport class MinDateFieldNameTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\" [rxwebForm]=\"userForm\" [model]=\"user\">\r\n    <div class=\"form-group\">\r\n      <label>Enrollment Date</label>\r\n\t    <input type=\"text\" name=\"enrollmentDate\" [(ngModel)]=\"user.enrollmentDate\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">you can enter MinDate upto 30th july 2018<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.enrollmentDate?.errors\">{{userForm.controls?.enrollmentDate?.errors?.minDate.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Last Registration Date</label>\r\n\t    <input type=\"text\" name=\"lastRegistrationDate\" [(ngModel)]=\"user.lastRegistrationDate\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">you can enter MinDate upto value mentioned in fieldName<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.lastRegistrationDate?.errors\">{{userForm.controls?.lastRegistrationDate?.errors?.minDate.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  minDate,prop, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class User {\r\n\r\n\t@prop()\r\n\tenrollmentDate: string;\r\n\r\n\t@minDate({fieldName:'enrollmentDate' }) \r\n\tlastRegistrationDate: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"user.model.ts","json":{}},"operatorExample":{"notes":null,"component":null,"html":null,"model":"@minDate({value:'07/30/2018'  ,operator:'>' }) \r\nconfirmationDate: string;\r\n","modelName":null,"json":{}},"operator":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-minDate-operator-template-driven-validation-decorators',\r\n    templateUrl: './min-date-operator.component.html'\r\n})\r\nexport class MinDateOperatorTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\" [rxwebForm]=\"userForm\" [model]=\"user\">\r\n    <div class=\"form-group\">\r\n      <label>Confirmation Date</label>\r\n\t    <input type=\"text\" name=\"confirmationDate\" [(ngModel)]=\"user.confirmationDate\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">you can enter MinDate upto value mentioned in fieldName<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.confirmationDate?.errors\">{{userForm.controls?.confirmationDate?.errors?.minDate.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  minDate, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class User {\r\n\r\n\t@minDate({value:'07/30/2018'  ,operator:'>' }) \r\n\tconfirmationDate: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"user.model.ts","json":{}},"add":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-minDate-add-template-driven-validation-decorators',\r\n    templateUrl: './min-date-add.component.html'\r\n})\r\nexport class MinDateAddTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\" [rxwebForm]=\"userForm\" [model]=\"user\">\r\n    <div class=\"form-group\">\r\n      <label>Registration Date</label>\r\n\t    <input type=\"text\" name=\"registrationDate\" [(ngModel)]=\"user.registrationDate\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">you can enter Min Date upto 30th july 2018<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.registrationDate?.errors\">{{userForm.controls?.registrationDate?.errors?.minDate.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  minDate, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class User {\r\n\r\n\t@minDate({value:'07/30/2018' }) \r\n\tregistrationDate: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"user.model.ts","json":{}}}