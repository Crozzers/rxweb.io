{"rightSidebarLinks":[{"id":"adding-multiple-languages-globally","title":"adding-multiple-languages-globally","subLink":null},{"id":"managingmultilingualvalidationmessagescentrally","title":"Managing Multilingual Validation Messages Centrally","subLink":[]},{"id":"addingthetranslateobjectinthecomponent","title":"Adding the Translate object in the component","subLink":[]},{"id":"formingthejson","title":"Forming the Json","subLink":[]}],"title":"Adding Multilingual Validation Messages Globally","description":"","validatorType":"template-driven","validationTypeTitle":"Template Driven","type":"simple","gitDocPath":"https://github.com/rxweb/rxweb.io/edit/master/docs/angular/learn/advance/adding-multiple-languages-globally.md","category":"learn","subCategory":null,"linkTitle":"adding-mutilingual-validation-messages-globally","tabArray":{},"innerHtml":null,"htmlContent":"<p class='showHideElement' >In our application we have mutiple languages based upon which the data is retrieved, while accessing the data in the forms, we are in a need to access validation messages acccording to the language and the validation message. </p>\r\n<p class='showHideElement' >In case of creating reactive forms and showing the validation messages based upon the error-messages coming in the form, we manage the messages in a centralized way, these messages are configured into the <a class=\"redirect-link\" href=\"/api/reactive-form-config\" target=\"_blank\">ReactiveFormConfig</a> of the application.</p>\r\n<p class='showHideElement' >While accessing the multilingual data in the application we need to translate these validation messages based upon the error type.</p>\r\n<div class='row page-section' id= 'managingmultilingualvalidationmessagescentrally'>\r\n<div class='col-lg-12'>\r\n<h2>Managing Multilingual Validation Messages Centrally<a title='Link to this heading' class='link-header' href='/learn/adding-mutilingual-validation-messages-globally/template-driven/directives#managingmultilingualvalidationmessagescentrally'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >For registering the validation messages centrally, the first step is to be add the ReactiveFormConfig globally in the app component. Below code represents the app component of the application</p>\r\n<div component=\"app-code\" key=\"adding-mutilingual-validation-messages-globally-complete-model\"></div> \r\n</div></div>\r\n<div class='row page-section' id= 'addingthetranslateobjectinthecomponent'>\r\n<div class='col-lg-12'>\r\n<h2>Adding the Translate object in the component<a title='Link to this heading' class='link-header' href='/learn/adding-mutilingual-validation-messages-globally/template-driven/directives#addingthetranslateobjectinthecomponent'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Add the <a class=\"redirect-link\" href=\"/ngx-translate-extension/decorator\" target=\"_blank\">@translate</a> in the app component to resolve the translation keys. </p>\r\n<div component=\"app-code\" key=\"adding-mutilingual-validation-messages-globally-complete-component\"></div> \r\n</div></div>\r\n<div class='row page-section' id= 'formingthejson'>\r\n<div class='col-lg-12'>\r\n<h2>Forming the Json<a title='Link to this heading' class='link-header' href='/learn/adding-mutilingual-validation-messages-globally/template-driven/directives#formingthejson'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Forming the json based upon validation messages in the respective language global files as below :</p>\r\n<div component=\"app-code\" key=\"adding-mutilingual-validation-messages-globally-complete-json\"></div>\r\n<div class=\"container\">\r\n</div>\r\n</div></div>\r\n"}