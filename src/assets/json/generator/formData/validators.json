{"rightSidebarLinks":[{"id":"post as formdata of reactive form value","title":"Post as FormData of Reactive Form value","subLink":null},{"id":"sendingformdatatoserver","title":"Sending formData to server","subLink":[]}],"title":"Post as FormData of Reactive Form value","description":"","validatorType":"validators","validationTypeTitle":"Validators","type":"tabs","category":"how-to","linkTitle":"formData","tabArray":{},"innerHtml":null,"htmlContent":"<p class='showHideElement' >As we are working large enterprise service oriented applications, There may need to post the data object as FormData instead of JSON.</p>\r\n<p class='showHideElement' >Now, This can be easily done with the RxFormBuilder. This provides a 'toFormData()' method which converts the FormGroup value into the FormData. </p>\r\n<p class='showHideElement' >Let's create a FormGroup and use the method of 'toFormData' while posting the user data.</p>\r\n<div class='row page-section' id= 'sendingformdatatoserver'>\r\n<div class='col-lg-12'>\r\n<h2>Sending formData to server<a title='Link to this heading' class='link-header' href='/how-to/formData/validators#sendingformdatatoserver'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >To send the formData to server, You have to use RxFormBuilder service to create FormGroup in the component.</p>\r\n<div component=\"app-code\" key=\"formadata-complete-component\"></div> \r\n<p class='showHideElement' >Next, we need to write html code.</p>\r\n<div component=\"app-code\" key=\"formadata-complete-html\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-formadata-complete\"></div>\r\n</div></div>\r\n"}