{"complete":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-mask-complete-template-driven-validation-decorators',\r\n    templateUrl: './mask-complete.component.html'\r\n})\r\nexport class MaskCompleteTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\" [rxwebForm]=\"userForm\" [model]=\"user\">\r\n    <div class=\"form-group\">\r\n      <label>FirstName</label>\r\n\t    <input type=\"text\" name=\"firstName\" [(ngModel)]=\"user.firstName\"  class=\"form-control\" />\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.firstName?.errors\">{{userForm.controls?.firstName?.errors?.mask.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Phone Number</label>\r\n\t    <input type=\"text\" name=\"phoneNumber\" [(ngModel)]=\"user.phoneNumber\"  class=\"form-control\" />\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.phoneNumber?.errors\">{{userForm.controls?.phoneNumber?.errors?.mask.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>ZipCode</label>\r\n\t    <input type=\"text\" name=\"zipcode\" [(ngModel)]=\"user.zipcode\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">If you want to apply conditionalExpression on 'ZipCode', then enter 'Bharat' in 'First Name'<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.zipcode?.errors\">{{userForm.controls?.zipcode?.errors?.mask.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Contact Number</label>\r\n\t    <input type=\"text\" name=\"contactNumber\" [(ngModel)]=\"user.contactNumber\"  class=\"form-control\" />\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.contactNumber?.errors\">{{userForm.controls?.contactNumber?.errors?.mask.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Alternate Contact Number</label>\r\n\t    <input type=\"text\" name=\"alternateContactNumber\" [(ngModel)]=\"user.alternateContactNumber\"  class=\"form-control\" />\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.alternateContactNumber?.errors\">{{userForm.controls?.alternateContactNumber?.errors?.mask.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  mask,prop, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class User {\r\n\r\n\t@prop()\r\n\tfirstName: string;\r\n\r\n\t@mask({mask:'(999)-999 9999' }) \r\n\tphoneNumber: string;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@mask({mask:'999-999'  ,conditionalExpression:(x,y)=> x.firstName == \"Bharat\" }) \r\n\tpostalCode: string;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@mask({mask:'9999'  ,conditionalExpression:'x => x.firstName == \"Bharat\"' }) \r\n\tzipcode: string;\r\n\t\r\n\t\r\n\t//Shows custom message\r\n\t@mask({mask:'999-9999999'  ,message:'Enter a valid Contact Number' }) \r\n\tcontactNumber: string;\r\n\t\r\n\t\r\n\t//Shows custom message based on message key\r\n\t@mask({mask:'9999999999'  ,messageKey:'maskMessageKey' }) \r\n\talternateContactNumber: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"user.model.ts","json":{}},"maskExample":{"notes":null,"component":null,"html":null,"model":"@mask({mask:'(999)-999 9999' }) \r\nphoneNumber: string;\r\n","modelName":null,"json":{}},"mask":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-mask-mask-template-driven-validation-decorators',\r\n    templateUrl: './mask-mask.component.html'\r\n})\r\nexport class MaskMaskTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\" [rxwebForm]=\"userForm\" [model]=\"user\">\r\n    <div class=\"form-group\">\r\n      <label>Phone Number</label>\r\n\t    <input type=\"text\" name=\"phoneNumber\" [(ngModel)]=\"user.phoneNumber\"  class=\"form-control\" />\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.phoneNumber?.errors\">{{userForm.controls?.phoneNumber?.errors?.mask.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  mask, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class User {\r\n\r\n\t@mask({mask:'(999)-999 9999' }) \r\n\tphoneNumber: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"user.model.ts","json":{}},"maskExampleFunction":{"notes":null,"component":null,"html":null,"model":"@mask({mask:'999-999'  ,conditionalExpression:(x,y)=> x.firstName == \"Bharat\" }) \r\npostalCode: string;\r\n","modelName":null,"json":{}},"conditionalExpressionExampleFunction":{"notes":null,"component":null,"html":null,"model":"@mask({mask:'999-999'  ,conditionalExpression:(x,y)=> x.firstName == \"Bharat\" }) \r\npostalCode: string;\r\n","modelName":null,"json":{}},"conditionalExpression":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-mask-conditionalExpression-template-driven-validation-decorators',\r\n    templateUrl: './mask-conditional-expression.component.html'\r\n})\r\nexport class MaskConditionalExpressionTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\" [rxwebForm]=\"userForm\" [model]=\"user\">\r\n    <div class=\"form-group\">\r\n      <label>FirstName</label>\r\n\t    <input type=\"text\" name=\"firstName\" [(ngModel)]=\"user.firstName\"  class=\"form-control\" />\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.firstName?.errors\">{{userForm.controls?.firstName?.errors?.mask.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>ZipCode</label>\r\n\t    <input type=\"text\" name=\"zipcode\" [(ngModel)]=\"user.zipcode\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">If you want to apply conditionalExpression on 'ZipCode', then enter 'Bharat' in 'First Name'<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.zipcode?.errors\">{{userForm.controls?.zipcode?.errors?.mask.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  mask,prop, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class User {\r\n\r\n\t@prop()\r\n\tfirstName: string;\r\n\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@mask({mask:'9999'  ,conditionalExpression:'x => x.firstName == \"Bharat\"' }) \r\n\tzipcode: string;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@mask({mask:'999-999'  ,conditionalExpression:(x,y)=> x.firstName == \"Bharat\" }) \r\n\tpostalCode: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"user.model.ts","json":{}},"maskExampleString":{"notes":null,"component":null,"html":null,"model":"@mask({mask:'9999'  ,conditionalExpression:'x => x.firstName == \"Bharat\"' }) \r\nzipcode: string;\r\n","modelName":null,"json":{}},"conditionalExpressionExampleString":{"notes":null,"component":null,"html":null,"model":"@mask({mask:'9999'  ,conditionalExpression:'x => x.firstName == \"Bharat\"' }) \r\nzipcode: string;\r\n","modelName":null,"json":{}},"messageExample":{"notes":null,"component":null,"html":null,"model":"@mask({mask:'999-9999999'  ,message:'Enter a valid Contact Number' }) \r\ncontactNumber: string;\r\n","modelName":null,"json":{}},"message":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-mask-message-template-driven-validation-decorators',\r\n    templateUrl: './mask-message.component.html'\r\n})\r\nexport class MaskMessageTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\" [rxwebForm]=\"userForm\" [model]=\"user\">\r\n    <div class=\"form-group\">\r\n      <label>Contact Number</label>\r\n\t    <input type=\"text\" name=\"contactNumber\" [(ngModel)]=\"user.contactNumber\"  class=\"form-control\" />\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.contactNumber?.errors\">{{userForm.controls?.contactNumber?.errors?.mask.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  mask, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class User {\r\n\r\n\t//Shows custom message\r\n\t@mask({mask:'999-9999999'  ,message:'Enter a valid Contact Number' }) \r\n\tcontactNumber: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"user.model.ts","json":{}},"messageKeyExample":{"notes":null,"component":null,"html":null,"model":"@mask({mask:'9999999999'  ,messageKey:'maskMessageKey' }) \r\nalternateContactNumber: string;\r\n","modelName":null,"json":{}},"messageKey":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-mask-messageKey-template-driven-validation-decorators',\r\n    templateUrl: './mask-message-key.component.html'\r\n})\r\nexport class MaskMessageKeyTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\" [rxwebForm]=\"userForm\" [model]=\"user\">\r\n    <div class=\"form-group\">\r\n      <label>Alternate Contact Number</label>\r\n\t    <input type=\"text\" name=\"alternateContactNumber\" [(ngModel)]=\"user.alternateContactNumber\"  class=\"form-control\" />\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.alternateContactNumber?.errors\">{{userForm.controls?.alternateContactNumber?.errors?.mask.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  mask, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class User {\r\n\r\n\t//Shows custom message based on message key\r\n\t@mask({mask:'9999999999'  ,messageKey:'maskMessageKey' }) \r\n\talternateContactNumber: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"user.model.ts","json":{}},"add":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-mask-add-template-driven-validation-decorators',\r\n    templateUrl: './mask-add.component.html'\r\n})\r\nexport class MaskAddTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\" [rxwebForm]=\"userForm\" [model]=\"user\">\r\n    <div class=\"form-group\">\r\n      <label>Phone Number</label>\r\n\t    <input type=\"text\" name=\"phoneNumber\" [(ngModel)]=\"user.phoneNumber\"  class=\"form-control\" />\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.phoneNumber?.errors\">{{userForm.controls?.phoneNumber?.errors?.mask.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  mask, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class User {\r\n\r\n\t@mask({mask:'(999)-999 9999' }) \r\n\tphoneNumber: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"user.model.ts","json":{}}}