{
    "complete": {
        "notes": "Async validation",
        "component": "import { Component, OnInit } from \"@angular/core\";\r\nimport { DynamicFormBuildConfig, DynamicFormConfiguration, RxDynamicFormBuilder } from \"@rxweb/reactive-dynamic-forms\";\r\nimport { AsyncCustomValidation } from './async-validation.model'\r\n\r\n@Component({\r\n    selector: 'app-asyncvalidation-complete',\r\n    templateUrl: './asyncvalidation-complete.component.html'\r\n})\r\n\r\nexport class AsyncvalidationCompleteComponent implements OnInit {\r\n\r\n    serverData: Array<{ [key: string]: any }> = [\r\n        {\r\n            name: \"nationality\",\r\n            type: \"text\",\r\n            modelName:'validationModel',\r\n            ui: {\r\n                label: 'Nationality'\r\n            }\r\n        }\r\n    ]\r\n    \r\n    uiBindings: string[] = [\"nationality\"];\r\n    \r\n    dynamicFormBuildConfig: DynamicFormBuildConfig;\r\n    \r\n    dynamicFormConfiguration: DynamicFormConfiguration;\r\n    \r\n    constructor(private formBuilder: RxDynamicFormBuilder) { }\r\n    \r\n    ngOnInit() {\r\n        this.dynamicFormConfiguration = {\r\n            controlConfigModels: [{ modelName: 'validationModel', model: AsyncCustomValidation }],\r\n          }\r\n        this.dynamicFormBuildConfig = this.formBuilder.formGroup(this.serverData, this.dynamicFormConfiguration);\r\n    }\r\n}",
        "html": "<form [formGroup]=\"dynamicFormBuildConfig.formGroup\">\r\n    <div viewMode=\"basic\" [rxwebDynamicForm]=\"dynamicFormBuildConfig\" [uiBindings]=\"uiBindings\"></div>\r\n</form>",
        "model": "import { FormControlConfig } from \"@rxweb/reactive-dynamic-forms\";\r\nimport { AbstractControl } from \"@angular/forms\"\r\nexport class AsyncCustomValidation extends FormControlConfig {\r\n\r\n    asyncValidator = (control: AbstractControl) => {\r\n        let promise = new Promise<any>((resolve, reject) => {\r\n        \r\n            if(control.value == \"India\")\r\n                resolve(null);\r\n            else\r\n                resolve({ custom: {message:\"Indian nationality required\"}})\r\n        });\r\n        return promise;\r\n    }\r\n\r\n}",
        "modelName": "async-validation.model.ts",
        "json": {}
    }
}