{
  "complete": {
    "notes": [],
    "component": "import { Component, OnInit } from '@angular\/core';\r\nimport { FormGroup, FormBuilder } from \"@angular\/forms\"\r\nimport { RxwebValidators } from '@rxweb\/reactive-form-validators';\r\nimport { of } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'app-greaterThanEqualToAsync-complete-validator',\r\n    templateUrl: '.\/greater-than-equal-to-async-complete.component.html'\r\n})\r\nexport class GreaterThanEqualToAsyncCompleteValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n            admissionAge:['',], \r\n            retiermentAge:['',[], RxwebValidators.greaterThanEqualToAsync({validatorConfig:of({fieldName:'admissionAge'})})], \r\n            minimumAge:['',[], RxwebValidators.greaterThanEqualToAsync({validatorConfig:of({value:18})})], \r\n            otherAge:['',[], RxwebValidators.greaterThanEqualToAsync({validatorConfig:of({fieldName:'admissionAge'  ,message:'Please enter number greater than or equal to 1.'})})], \r\n            joiningAge:['',[], RxwebValidators.greaterThanEqualToAsync({validatorConfig:of({fieldName:'admissionAge'  ,messageKey:'greaterThanEqualToMessageKey'})})], \r\n       });\r\n    }\r\n}\r\n",
    "html": "<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Admission Age<\/label>\r\n      <input type=\"text\" formControlName=\"admissionAge\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.admissionAge.errors\">{{userFormGroup.controls.admissionAge.errors.greaterThanEqualTo.message}}<br/><\/small>\t\r\n    <\/div>\r\n    <div class=\"form-group\">\r\n      <label>Retirement Age<\/label>\r\n      <input type=\"text\" formControlName=\"retiermentAge\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Retirement Age should be greater than equal to Admission Age<br/><\/small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.retiermentAge.errors\">{{userFormGroup.controls.retiermentAge.errors.greaterThanEqualTo.message}}<br/><\/small>\t\r\n    <\/div>\r\n    <div class=\"form-group\">\r\n      <label>Minimum Age<\/label>\r\n      <input type=\"text\" formControlName=\"minimumAge\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.minimumAge.errors\">{{userFormGroup.controls.minimumAge.errors.greaterThanEqualTo.message}}<br/><\/small>\t\r\n    <\/div>\r\n    <div class=\"form-group\">\r\n      <label>Other Age<\/label>\r\n      <input type=\"text\" formControlName=\"otherAge\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows custom message<br/><\/small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.otherAge.errors\">{{userFormGroup.controls.otherAge.errors.greaterThanEqualTo.message}}<br/><\/small>\t\r\n    <\/div>\r\n    <div class=\"form-group\">\r\n      <label>Joining Age<\/label>\r\n      <input type=\"text\" formControlName=\"joiningAge\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows custom message based on message key<br/><\/small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.joiningAge.errors\">{{userFormGroup.controls.joiningAge.errors?.greaterThanEqualToMessageKey?.message}}<br/><\/small>\t\t\r\n    <\/div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit<\/button>\r\n  <\/form>\r\n<\/div>\r\n",
    "model": null,
    "modelName": null,
    "json": {}
  },
  "fieldNameExample": {
    "notes": null,
    "component": null,
    "html": null,
    "model": "RxwebValidators.greaterThanEqualToAsync({validatorConfig:of({fieldName:'admissionAge'})});\r\n",
    "modelName": null,
    "json": {}
  },
  "fieldName": {
    "notes": [],
    "component": "import { Component, OnInit } from '@angular\/core';\r\nimport { FormGroup, FormBuilder } from \"@angular\/forms\"\r\nimport { RxwebValidators } from '@rxweb\/reactive-form-validators';\r\nimport { of } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'app-greaterThanEqualToAsync-fieldName-validator',\r\n    templateUrl: '.\/greater-than-equal-to-async-field-name.component.html'\r\n})\r\nexport class GreaterThanEqualToAsyncFieldNameValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n            admissionAge:['',], \r\n            retiermentAge:['',[], RxwebValidators.greaterThanEqualToAsync({validatorConfig:of({fieldName:'admissionAge'})})], \r\n       });\r\n    }\r\n}\r\n",
    "html": "<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Admission Age<\/label>\r\n      <input type=\"text\" formControlName=\"admissionAge\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.admissionAge.errors\">{{userFormGroup.controls.admissionAge.errors.greaterThanEqualTo.message}}<br/><\/small>\t\r\n    <\/div>\r\n    <div class=\"form-group\">\r\n      <label>Retirement Age<\/label>\r\n      <input type=\"text\" formControlName=\"retiermentAge\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Retirement Age should be greater than equal to Admission Age<br/><\/small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.retiermentAge.errors\">{{userFormGroup.controls.retiermentAge.errors.greaterThanEqualTo.message}}<br/><\/small>\t\r\n    <\/div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit<\/button>\r\n  <\/form>\r\n<\/div>\r\n",
    "model": null,
    "modelName": null,
    "json": {}
  },
  "valueExample": {
    "notes": null,
    "component": null,
    "html": null,
    "model": "RxwebValidators.greaterThanEqualToAsync({validatorConfig:of({value:18})});\r\n",
    "modelName": null,
    "json": {}
  },
  "value": {
    "notes": [],
    "component": "import { Component, OnInit } from '@angular\/core';\r\nimport { FormGroup, FormBuilder } from \"@angular\/forms\"\r\nimport { RxwebValidators } from '@rxweb\/reactive-form-validators';\r\nimport { of } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'app-greaterThanEqualToAsync-value-validator',\r\n    templateUrl: '.\/greater-than-equal-to-async-value.component.html'\r\n})\r\nexport class GreaterThanEqualToAsyncValueValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n            minimumAge:['',[], RxwebValidators.greaterThanEqualToAsync({validatorConfig:of({value:18})})], \r\n       });\r\n    }\r\n}\r\n",
    "html": "<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Minimum Age<\/label>\r\n      <input type=\"text\" formControlName=\"minimumAge\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.minimumAge.errors\">{{userFormGroup.controls.minimumAge.errors.greaterThanEqualTo.message}}<br/><\/small>\t\r\n    <\/div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit<\/button>\r\n  <\/form>\r\n<\/div>\r\n",
    "model": null,
    "modelName": null,
    "json": {}
  },
  "messageExample": {
    "notes": null,
    "component": null,
    "html": null,
    "model": "RxwebValidators.greaterThanEqualToAsync({validatorConfig:of({fieldName:'admissionAge'  ,message:'Please enter number greater than or equal to 1.'})});\r\n",
    "modelName": null,
    "json": {}
  },
  "message": {
    "notes": [],
    "component": "import { Component, OnInit } from '@angular\/core';\r\nimport { FormGroup, FormBuilder } from \"@angular\/forms\"\r\nimport { RxwebValidators } from '@rxweb\/reactive-form-validators';\r\nimport { of } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'app-greaterThanEqualToAsync-message-validator',\r\n    templateUrl: '.\/greater-than-equal-to-async-message.component.html'\r\n})\r\nexport class GreaterThanEqualToAsyncMessageValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n            otherAge:['',[], RxwebValidators.greaterThanEqualToAsync({validatorConfig:of({fieldName:'admissionAge'  ,message:'Please enter number greater than or equal to 1.'})})], \r\n       });\r\n    }\r\n}\r\n",
    "html": "<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Other Age<\/label>\r\n      <input type=\"text\" formControlName=\"otherAge\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows custom message<br/><\/small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.otherAge.errors\">{{userFormGroup.controls.otherAge.errors.greaterThanEqualTo.message}}<br/><\/small>\t\r\n    <\/div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit<\/button>\r\n  <\/form>\r\n<\/div>\r\n",
    "model": null,
    "modelName": null,
    "json": {}
  },
  "messageKeyExample": {
    "notes": null,
    "component": null,
    "html": null,
    "model": "RxwebValidators.greaterThanEqualToAsync({validatorConfig:of({fieldName:'admissionAge'  ,messageKey:'greaterThanEqualToMessageKey'})});\r\n",
    "modelName": null,
    "json": {}
  },
  "messageKey": {
    "notes": [],
    "component": "import { Component, OnInit } from '@angular\/core';\r\nimport { FormGroup, FormBuilder } from \"@angular\/forms\"\r\nimport { RxwebValidators } from '@rxweb\/reactive-form-validators';\r\nimport { of } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'app-greaterThanEqualToAsync-messageKey-validator',\r\n    templateUrl: '.\/greater-than-equal-to-async-message-key.component.html'\r\n})\r\nexport class GreaterThanEqualToAsyncMessageKeyValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n            joiningAge:['',[], RxwebValidators.greaterThanEqualToAsync({validatorConfig:of({fieldName:'admissionAge'  ,messageKey:'greaterThanEqualToMessageKey'})})], \r\n       });\r\n    }\r\n}\r\n",
    "html": "<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Joining Age<\/label>\r\n      <input type=\"text\" formControlName=\"joiningAge\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows custom message based on message key<br/><\/small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.joiningAge.errors\">{{userFormGroup.controls.joiningAge.errors.greaterThanEqualToMessageKey.message}}<br/><\/small>\t\t\r\n    <\/div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit<\/button>\r\n  <\/form>\r\n<\/div>\r\n",
    "model": null,
    "modelName": null,
    "json": {}
  },
  "dynamic": {
    "notes": [],
    "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormBuilderConfiguration,RxFormBuilder} from '@rxweb/reactive-form-validators';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n    selector: 'app-greaterThanEqualToAsync-dynamic-validator',\r\n    templateUrl: './greater-than-equal-to-async-dynamic.component.html'\r\n})\r\nexport class GreaterThanEqualToAsyncDynamicValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: RxFormBuilder , private http: HttpClient )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n\t\tlet formBuilderConfiguration = new FormBuilderConfiguration();\r\n\t\tthis.http.get('assets/examples/reactive-form-validators/validators/greaterThanEqualToAsync/dynamic/dynamic.json?v='+environment.appVersion).subscribe(dynamic => {\r\n\t\t\tformBuilderConfiguration.dynamicValidation = JSON.parse(JSON.stringify(dynamic));\r\n\t\t\tvar user = { admissionAge:'', retiermentAge:'', minimumAge:'', otherAge:'', joiningAge:'',  }\r\n\t\t\tthis.userFormGroup = this.formBuilder.group(user,formBuilderConfiguration);\r\n\t\t})\r\n    }\r\n}\r\n",
    "html": "<div>\r\n  <form  *ngIf=\"userFormGroup\"  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Admission Age<\/label>\r\n      <input type=\"text\" formControlName=\"admissionAge\" class=\"form-control\"   />\r\n      <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.admissionAge.errors\">{{userFormGroup.controls.admissionAge.errors.greaterThanEqualTo.message}}<br/><\/small>\r\n    <\/div>\r\n    <div class=\"form-group\">\r\n      <label>Retirement Age<\/label>\r\n      <input type=\"text\" formControlName=\"retiermentAge\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Retirement Age should be greater than equal to Admission Age<br/><\/small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.retiermentAge.errors\">{{userFormGroup.controls.retiermentAge.errors.greaterThanEqualTo.message}}<br/><\/small>\t\r\n    <\/div>\r\n    <div class=\"form-group\">\r\n      <label>Minimum Age<\/label>\r\n      <input type=\"text\" formControlName=\"minimumAge\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.minimumAge.errors\">{{userFormGroup.controls.minimumAge.errors.greaterThanEqualTo.message}}<br/><\/small>\t\r\n    <\/div>\r\n    <div class=\"form-group\">\r\n      <label>Other Age<\/label>\r\n      <input type=\"text\" formControlName=\"otherAge\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows custom message<br/><\/small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.otherAge.errors\">{{userFormGroup.controls.otherAge.errors.greaterThanEqualTo.message}}<br/><\/small>\t\r\n    <\/div>\r\n    <div class=\"form-group\">\r\n      <label>Joining Age<\/label>\r\n      <input type=\"text\" formControlName=\"joiningAge\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows custom message based on message key<br/><\/small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.joiningAge.errors\">{{userFormGroup.controls.joiningAge.errors.greaterThanEqualToMessageKey.message}}<br/><\/small>\t\t\r\n    <\/div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit<\/button>\r\n  <\/form>\r\n<\/div>\r\n",
    "model": null,
    "modelName": null,
    "json": {
      "dynamic.json": {
        "admissionAge": {},
        "retiermentAge": {
          "greaterThanEqualToAsync": {
            "fieldName": "admissionAge"
          }
        },
        "minimumAge": {
          "greaterThanEqualToAsync": {
            "value": "18"
          }
        },
        "otherAge": {
          "greaterThanEqualToAsync": {
            "fieldName": "admissionAge",
            "message": "Please enter number greater than or equal to 1."
          }
        },
        "joiningAge": {
          "greaterThanEqualToAsync": {
            "fieldName": "admissionAge",
            "messageKey": "greaterThanEqualToMessageKey"
          }
        }
      }
    }
  },
  "add": {
    "notes": [],
    "component": "import { Component, OnInit } from '@angular\/core';\r\nimport { FormGroup, FormBuilder } from \"@angular\/forms\"\r\nimport { RxwebValidators } from '@rxweb\/reactive-form-validators';\r\nimport { of } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'app-greaterThanEqualToAsync-add-validator',\r\n    templateUrl: '.\/greater-than-equal-to-async-add.component.html'\r\n})\r\nexport class GreaterThanEqualToAsyncAddValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n            age:['',], \r\n            voterAge:['',[], RxwebValidators.greaterThanEqualToAsync({validatorConfig:of({fieldName:'age'})})], \r\n       });\r\n    }\r\n}\r\n",
    "html": "<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Age<\/label>\r\n      <input type=\"text\" formControlName=\"age\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.age.errors\">{{userFormGroup.controls.age.errors.greaterThanEqualTo.message}}<br/><\/small>\t\r\n    <\/div>\r\n    <div class=\"form-group\">\r\n      <label>Voter Age<\/label>\r\n      <input type=\"text\" formControlName=\"voterAge\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This is checking greater than equal to validation for Voter Age must be greater than equal to age.<br/><\/small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.voterAge.errors\">{{userFormGroup.controls.voterAge.errors.greaterThanEqualTo.message}}<br/><\/small>\t\r\n    <\/div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit<\/button>\r\n  <\/form>\r\n<\/div>\r\n",
    "model": null,
    "modelName": null,
    "json": {}
  }
}