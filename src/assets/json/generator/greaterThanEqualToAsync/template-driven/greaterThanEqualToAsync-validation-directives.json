{"complete":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-greaterThanEqualToAsync-complete-template-driven-validation-directives',\r\n    templateUrl: './greater-than-equal-to-async-complete.component.html'\r\n})\r\nexport class GreaterThanEqualToAsyncCompleteTemplateDrivenValidationDirectivesComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\" [rxwebForm]=\"userForm\" [model]=\"user\">\r\n    <div class=\"form-group\">\r\n      <label>Admission Age</label>\r\n\t    <input type=\"text\" name=\"admissionAge\" [(ngModel)]=\"user.admissionAge\"  class=\"form-control\" />\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.admissionAge?.errors\">{{userForm.controls?.admissionAge?.errors?.greaterThanEqualToAsync.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Retirement Age</label>\r\n\t    <input type=\"text\" name=\"retiermentAge\" [(ngModel)]=\"user.retiermentAge\"  class=\"form-control\" [rxgreaterThanEqualToAsync]=\"{'fieldName':'admissionAge'}\"/>\r\n\r\n      <small class=\"form-text text-muted\">Retirement Age should be greater than equal to Admission Age<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.retiermentAge?.errors\">{{userForm.controls?.retiermentAge?.errors?.greaterThanEqualToAsync.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Minimum Age</label>\r\n\t    <input type=\"text\" name=\"minimumAge\" [(ngModel)]=\"user.minimumAge\"  class=\"form-control\" [rxgreaterThanEqualToAsync]=\"{'value':18}\"/>\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.minimumAge?.errors\">{{userForm.controls?.minimumAge?.errors?.greaterThanEqualToAsync.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Other Age</label>\r\n\t    <input type=\"text\" name=\"otherAge\" [(ngModel)]=\"user.otherAge\"  class=\"form-control\" [rxgreaterThanEqualToAsync]=\"{'fieldName':'admissionAge','message':'Please enter number greater than or equal to 1.'}\"/>\r\n\r\n      <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.otherAge?.errors\">{{userForm.controls?.otherAge?.errors?.greaterThanEqualToAsync.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Joining Age</label>\r\n\t    <input type=\"text\" name=\"joiningAge\" [(ngModel)]=\"user.joiningAge\"  class=\"form-control\" [rxgreaterThanEqualToAsync]=\"{'fieldName':'admissionAge','messageKey':'greaterThanEqualToMessageKey'}\"/>\r\n\r\n      <small class=\"form-text text-muted\">Shows custom message based on message key<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.joiningAge?.errors\">{{userForm.controls?.joiningAge?.errors?.greaterThanEqualToAsync.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class User {\r\n\r\n\tadmissionAge: number;\r\n\r\n\tretiermentAge: number;\r\n\t\r\n\t\r\n\tminimumAge: number;\r\n\t\r\n\t\r\n\totherAge: number;\r\n\t\r\n\t\r\n\tjoiningAge: number;\r\n\t\r\n\t\r\n}\r\n","modelName":"user.model.ts","json":{}},"fieldNameExample":{"notes":null,"component":null,"html":null,"model":"[greaterThanEqualToAsync]=\"{'fieldName':'admissionAge'}\"","modelName":null,"json":{}},"fieldName":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-greaterThanEqualToAsync-fieldName-template-driven-validation-directives',\r\n    templateUrl: './greater-than-equal-to-async-field-name.component.html'\r\n})\r\nexport class GreaterThanEqualToAsyncFieldNameTemplateDrivenValidationDirectivesComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\" [rxwebForm]=\"userForm\" [model]=\"user\">\r\n    <div class=\"form-group\">\r\n      <label>Admission Age</label>\r\n\t    <input type=\"text\" name=\"admissionAge\" [(ngModel)]=\"user.admissionAge\"  class=\"form-control\" />\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.admissionAge?.errors\">{{userForm.controls?.admissionAge?.errors?.greaterThanEqualToAsync.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Retirement Age</label>\r\n\t    <input type=\"text\" name=\"retiermentAge\" [(ngModel)]=\"user.retiermentAge\"  class=\"form-control\" [rxgreaterThanEqualToAsync]=\"{'fieldName':'admissionAge'}\"/>\r\n\r\n      <small class=\"form-text text-muted\">Retirement Age should be greater than equal to Admission Age<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.retiermentAge?.errors\">{{userForm.controls?.retiermentAge?.errors?.greaterThanEqualToAsync.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class User {\r\n\r\n\tadmissionAge: number;\r\n\r\n\tretiermentAge: number;\r\n\t\r\n\t\r\n}\r\n","modelName":"user.model.ts","json":{}},"valueExample":{"notes":null,"component":null,"html":null,"model":"[greaterThanEqualToAsync]=\"{'value':18}\"","modelName":null,"json":{}},"value":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-greaterThanEqualToAsync-value-template-driven-validation-directives',\r\n    templateUrl: './greater-than-equal-to-async-value.component.html'\r\n})\r\nexport class GreaterThanEqualToAsyncValueTemplateDrivenValidationDirectivesComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\" [rxwebForm]=\"userForm\" [model]=\"user\">\r\n    <div class=\"form-group\">\r\n      <label>Minimum Age</label>\r\n\t    <input type=\"text\" name=\"minimumAge\" [(ngModel)]=\"user.minimumAge\"  class=\"form-control\" [rxgreaterThanEqualToAsync]=\"{'value':18}\"/>\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.minimumAge?.errors\">{{userForm.controls?.minimumAge?.errors?.greaterThanEqualToAsync.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class User {\r\n\r\n\tminimumAge: number;\r\n\t\r\n\t\r\n}\r\n","modelName":"user.model.ts","json":{}},"messageExample":{"notes":null,"component":null,"html":null,"model":"[greaterThanEqualToAsync]=\"{'fieldName':'admissionAge','message':'Please enter number greater than or equal to 1.'}\"","modelName":null,"json":{}},"message":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-greaterThanEqualToAsync-message-template-driven-validation-directives',\r\n    templateUrl: './greater-than-equal-to-async-message.component.html'\r\n})\r\nexport class GreaterThanEqualToAsyncMessageTemplateDrivenValidationDirectivesComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\" [rxwebForm]=\"userForm\" [model]=\"user\">\r\n    <div class=\"form-group\">\r\n      <label>Other Age</label>\r\n\t    <input type=\"text\" name=\"otherAge\" [(ngModel)]=\"user.otherAge\"  class=\"form-control\" [rxgreaterThanEqualToAsync]=\"{'fieldName':'admissionAge','message':'Please enter number greater than or equal to 1.'}\"/>\r\n\r\n      <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.otherAge?.errors\">{{userForm.controls?.otherAge?.errors?.greaterThanEqualToAsync.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class User {\r\n\r\n\totherAge: number;\r\n\t\r\n\t\r\n}\r\n","modelName":"user.model.ts","json":{}},"messageKeyExample":{"notes":null,"component":null,"html":null,"model":"[greaterThanEqualToAsync]=\"{'fieldName':'admissionAge','messageKey':'greaterThanEqualToMessageKey'}\"","modelName":null,"json":{}},"messageKey":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-greaterThanEqualToAsync-messageKey-template-driven-validation-directives',\r\n    templateUrl: './greater-than-equal-to-async-message-key.component.html'\r\n})\r\nexport class GreaterThanEqualToAsyncMessageKeyTemplateDrivenValidationDirectivesComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\" [rxwebForm]=\"userForm\" [model]=\"user\">\r\n    <div class=\"form-group\">\r\n      <label>Joining Age</label>\r\n\t    <input type=\"text\" name=\"joiningAge\" [(ngModel)]=\"user.joiningAge\"  class=\"form-control\" [rxgreaterThanEqualToAsync]=\"{'fieldName':'admissionAge','messageKey':'greaterThanEqualToMessageKey'}\"/>\r\n\r\n      <small class=\"form-text text-muted\">Shows custom message based on message key<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.joiningAge?.errors\">{{userForm.controls?.joiningAge?.errors?.greaterThanEqualToAsync.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class User {\r\n\r\n\tjoiningAge: number;\r\n\t\r\n\t\r\n}\r\n","modelName":"user.model.ts","json":{}},"add":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-greaterThanEqualToAsync-add-template-driven-validation-directives',\r\n    templateUrl: './greater-than-equal-to-async-add.component.html'\r\n})\r\nexport class GreaterThanEqualToAsyncAddTemplateDrivenValidationDirectivesComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\" [rxwebForm]=\"userForm\" [model]=\"user\">\r\n    <div class=\"form-group\">\r\n      <label>Age</label>\r\n\t    <input type=\"text\" name=\"age\" [(ngModel)]=\"user.age\"  class=\"form-control\" />\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.age?.errors\">{{userForm.controls?.age?.errors?.greaterThanEqualToAsync.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Voter Age</label>\r\n\t    <input type=\"text\" name=\"voterAge\" [(ngModel)]=\"user.voterAge\"  class=\"form-control\" [rxgreaterThanEqualToAsync]=\"{'fieldName':'age'}\"/>\r\n\r\n      <small class=\"form-text text-muted\">This is checking greater than equal to validation for Voter Age must be greater than equal to age.<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.voterAge?.errors\">{{userForm.controls?.voterAge?.errors?.greaterThanEqualToAsync.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class User {\r\n\r\n\tage: number;\r\n\r\n\tvoterAge: number;\r\n\t\r\n\t\r\n}\r\n","modelName":"user.model.ts","json":{}}}