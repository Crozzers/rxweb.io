{"complete":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-rangeAsync-complete-validator',\r\n    templateUrl: './range-async-complete.component.html'\r\n})\r\nexport class RangeAsyncCompleteValidatorComponent implements OnInit {\r\n    employeeInfoFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.employeeInfoFormGroup = this.formBuilder.group({\r\n            age:['', RxwebValidators.rangeAsync({validatorConfig:of({minimumNumber:18  ,maximumNumber:60})})], \r\n            salary:['', RxwebValidators.rangeAsync({validatorConfig:of({minimumNumber:1000  ,maximumNumber:200000  ,message:'Your Salary should be between 1000 to 200000.'})})], \r\n            noOfprojects:['', RxwebValidators.rangeAsync({validatorConfig:of({minimumNumber:1  ,maximumNumber:10  ,messageKey:'rangeMessageKey'})})], \r\n       })});\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"employeeInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Employee Age</label>\r\n      <input type=\"text\" formControlName=\"age\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Age Should be between 18 to 60.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"employeeInfoFormGroup.controls.age.errors\">{{employeeInfoFormGroup.controls.age.errors.range.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Salary</label>\r\n      <input type=\"text\" formControlName=\"salary\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message<br/></small>\r\n      <small class=\"form-text text-muted\">Please enter salary between 1000 to 200000<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"employeeInfoFormGroup.controls.salary.errors\">{{employeeInfoFormGroup.controls.salary.errors.range.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Number of Projects</label>\r\n      <input type=\"text\" formControlName=\"noOfprojects\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message using message key<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"employeeInfoFormGroup.controls.noOfprojects.errors\">{{employeeInfoFormGroup.controls.noOfprojects.errors.rangeMessageKey.message}}<br/></small>\t\t\r\n    </div>\r\n    <button [disabled]=\"!employeeInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"json":{}},"minimumNumberExample":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.rangeAsync({validatorConfig:of({minimumNumber:18  ,maximumNumber:60})});\r\n","modelName":null,"json":{}},"minimumNumber":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-rangeAsync-minimumNumber-validator',\r\n    templateUrl: './range-async-minimum-number.component.html'\r\n})\r\nexport class RangeAsyncMinimumNumberValidatorComponent implements OnInit {\r\n    employeeInfoFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.employeeInfoFormGroup = this.formBuilder.group({\r\n            age:['', RxwebValidators.rangeAsync({validatorConfig:of({minimumNumber:18  ,maximumNumber:60})})], \r\n       })});\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"employeeInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Employee Age</label>\r\n      <input type=\"text\" formControlName=\"age\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Age Should be between 18 to 60.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"employeeInfoFormGroup.controls.age.errors\">{{employeeInfoFormGroup.controls.age.errors.range.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!employeeInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"json":{}},"maximumNumberExample":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.rangeAsync({validatorConfig:of({minimumNumber:18  ,maximumNumber:60})});\r\n","modelName":null,"json":{}},"maximumNumber":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-rangeAsync-maximumNumber-validator',\r\n    templateUrl: './range-async-maximum-number.component.html'\r\n})\r\nexport class RangeAsyncMaximumNumberValidatorComponent implements OnInit {\r\n    employeeInfoFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.employeeInfoFormGroup = this.formBuilder.group({\r\n            age:['', RxwebValidators.rangeAsync({validatorConfig:of({minimumNumber:18  ,maximumNumber:60})})], \r\n       })});\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"employeeInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Employee Age</label>\r\n      <input type=\"text\" formControlName=\"age\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Age Should be between 18 to 60.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"employeeInfoFormGroup.controls.age.errors\">{{employeeInfoFormGroup.controls.age.errors.range.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!employeeInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"json":{}},"messageExample":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.rangeAsync({validatorConfig:of({minimumNumber:1000  ,maximumNumber:200000  ,message:'Your Salary should be between 1000 to 200000.'})});\r\n","modelName":null,"json":{}},"message":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-rangeAsync-message-validator',\r\n    templateUrl: './range-async-message.component.html'\r\n})\r\nexport class RangeAsyncMessageValidatorComponent implements OnInit {\r\n    employeeInfoFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.employeeInfoFormGroup = this.formBuilder.group({\r\n            salary:['', RxwebValidators.rangeAsync({validatorConfig:of({minimumNumber:1000  ,maximumNumber:200000  ,message:'Your Salary should be between 1000 to 200000.'})})], \r\n       })});\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"employeeInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Salary</label>\r\n      <input type=\"text\" formControlName=\"salary\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message<br/></small>\r\n      <small class=\"form-text text-muted\">Please enter salary between 1000 to 200000<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"employeeInfoFormGroup.controls.salary.errors\">{{employeeInfoFormGroup.controls.salary.errors.range.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!employeeInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"json":{}},"messageKeyExample":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.rangeAsync({validatorConfig:of({minimumNumber:1  ,maximumNumber:10  ,messageKey:'rangeMessageKey'})});\r\n","modelName":null,"json":{}},"messageKey":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-rangeAsync-messageKey-validator',\r\n    templateUrl: './range-async-message-key.component.html'\r\n})\r\nexport class RangeAsyncMessageKeyValidatorComponent implements OnInit {\r\n    employeeInfoFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.employeeInfoFormGroup = this.formBuilder.group({\r\n            noOfprojects:['', RxwebValidators.rangeAsync({validatorConfig:of({minimumNumber:1  ,maximumNumber:10  ,messageKey:'rangeMessageKey'})})], \r\n       })});\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"employeeInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Number of Projects</label>\r\n      <input type=\"text\" formControlName=\"noOfprojects\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message using message key<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"employeeInfoFormGroup.controls.noOfprojects.errors\">{{employeeInfoFormGroup.controls.noOfprojects.errors.rangeMessageKey.message}}<br/></small>\t\t\r\n    </div>\r\n    <button [disabled]=\"!employeeInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"json":{}},"dynamic":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormBuilderConfiguration,RxFormBuilder} from '@rxweb/reactive-form-validators';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n    selector: 'app-rangeAsync-dynamic-validator',\r\n    templateUrl: './range-async-dynamic.component.html'\r\n})\r\nexport class RangeAsyncDynamicValidatorComponent implements OnInit {\r\n    employeeInfoFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: RxFormBuilder , private http: HttpClient )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n\t\tlet formBuilderConfiguration = new FormBuilderConfiguration();\r\n\t\tthis.http.get('assets/examples/reactive-form-validators/validators/rangeAsync/dynamic/dynamic.json?v='+environment.appVersion).subscribe(dynamic => {\r\n\t\t\tformBuilderConfiguration.dynamicValidation = JSON.parse(JSON.stringify(dynamic));\r\n\t\t\tvar employeeInfo = { age:'', salary:'', noOfprojects:'',  }\r\n\t\t\tthis.employeeInfoFormGroup = this.formBuilder.group(employeeInfo,formBuilderConfiguration);\r\n\t\t})\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  *ngIf=\"employeeInfoFormGroup\"  [formGroup]=\"employeeInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Employee Age</label>\r\n      <input type=\"text\" formControlName=\"age\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Age Should be between 18 to 60.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"employeeInfoFormGroup.controls.age.errors\">{{employeeInfoFormGroup.controls.age.errors.range.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Salary</label>\r\n      <input type=\"text\" formControlName=\"salary\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message<br/></small>\r\n      <small class=\"form-text text-muted\">Please enter salary between 1000 to 200000<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"employeeInfoFormGroup.controls.salary.errors\">{{employeeInfoFormGroup.controls.salary.errors.range.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Number of Projects</label>\r\n      <input type=\"text\" formControlName=\"noOfprojects\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message using message key<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"employeeInfoFormGroup.controls.noOfprojects.errors\">{{employeeInfoFormGroup.controls.noOfprojects.errors.rangeMessageKey.message}}<br/></small>\t\t\r\n    </div>\r\n    <button [disabled]=\"!employeeInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"json":{"dynamic.json":"{\"age\":{\"rangeAsync\":{\"minimumNumber\":\"18\",\"maximumNumber\":\"60\"}},\"salary\":{\"rangeAsync\":{\"minimumNumber\":\"1000\",\"maximumNumber\":\"200000\",\"message\":\"Your Salary should be between 1000 to 200000.\"}},\"noOfprojects\":{\"rangeAsync\":{\"minimumNumber\":\"1\",\"maximumNumber\":\"10\",\"messageKey\":\"rangeMessageKey\"}}}"}},"add":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-rangeAsync-add-validator',\r\n    templateUrl: './range-async-add.component.html'\r\n})\r\nexport class RangeAsyncAddValidatorComponent implements OnInit {\r\n    employeeInfoFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.employeeInfoFormGroup = this.formBuilder.group({\r\n            age:['', RxwebValidators.rangeAsync({validatorConfig:of({minimumNumber:18  ,maximumNumber:60})})], \r\n       })});\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"employeeInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Employee Age</label>\r\n      <input type=\"text\" formControlName=\"age\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Please enter Employee Age between 18 to 60<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"employeeInfoFormGroup.controls.age.errors\">{{employeeInfoFormGroup.controls.age.errors.range.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!employeeInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"json":{}}}