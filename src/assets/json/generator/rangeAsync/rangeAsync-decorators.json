{"complete":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { EmployeeInfo } from './employee-info.model';\r\n\r\n@Component({\r\n    selector: 'app-rangeAsync-complete',\r\n    templateUrl: './range-async-complete.component.html'\r\n})\r\nexport class RangeAsyncCompleteComponent implements OnInit {\r\n    employeeInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let employeeInfo = new EmployeeInfo();\r\n        this.employeeInfoFormGroup = this.formBuilder.formGroup(employeeInfo);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"employeeInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Employee Age</label>\r\n      <input type=\"text\" formControlName=\"age\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Age Should be between 18 to 60.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"employeeInfoFormGroup.controls.age.errors\">{{employeeInfoFormGroup.controls.age.errors.range.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Salary</label>\r\n      <input type=\"text\" formControlName=\"salary\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message<br/></small>\r\n      <small class=\"form-text text-muted\">Please enter salary between 1000 to 200000<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"employeeInfoFormGroup.controls.salary.errors\">{{employeeInfoFormGroup.controls.salary.errors.range.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Number of Projects</label>\r\n      <input type=\"text\" formControlName=\"noOfprojects\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message using message key<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"employeeInfoFormGroup.controls.noOfprojects.errors\">{{employeeInfoFormGroup.controls.noOfprojects.errors.rangeMessageKey.message}}<br/></small>\t\t\r\n    </div>\r\n    <button [disabled]=\"!employeeInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  rangeAsync, } from   \"@rxweb/reactive-form-validators\" \r\n\rimport { of } from \"rxjs\" \r\n\r\n   \r\n\r\nexport class EmployeeInfo {\r\n\r\n\t@rangeAsync({validatorConfig:of({minimumNumber:18  ,maximumNumber:60})}) \r\n\tage: number;\r\n\t\r\n\t\r\n\t@rangeAsync({validatorConfig:of({minimumNumber:1000  ,maximumNumber:200000  ,message:'Your Salary should be between 1000 to 200000.'})}) \r\n\tsalary: number;\r\n\t\r\n\t\r\n\t@rangeAsync({validatorConfig:of({minimumNumber:1  ,maximumNumber:10  ,messageKey:'rangeMessageKey'})}) \r\n\tnoOfprojects: number;\r\n\t\r\n\t\r\n}\r\n","modelName":"employee-info.model.ts","json":{}},"minimumNumberExample":{"notes":null,"component":null,"html":null,"model":"@rangeAsync({validatorConfig:of({minimumNumber:18  ,maximumNumber:60})}) \r\nage: number;\r\n","modelName":null,"json":{}},"minimumNumber":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { EmployeeInfo } from './employee-info.model';\r\n\r\n@Component({\r\n    selector: 'app-rangeAsync-minimumNumber',\r\n    templateUrl: './range-async-minimum-number.component.html'\r\n})\r\nexport class RangeAsyncMinimumNumberComponent implements OnInit {\r\n    employeeInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let employeeInfo = new EmployeeInfo();\r\n        this.employeeInfoFormGroup = this.formBuilder.formGroup(employeeInfo);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"employeeInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Employee Age</label>\r\n      <input type=\"text\" formControlName=\"age\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Age Should be between 18 to 60.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"employeeInfoFormGroup.controls.age.errors\">{{employeeInfoFormGroup.controls.age.errors.range.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!employeeInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  rangeAsync, } from   \"@rxweb/reactive-form-validators\" \r\n\rimport { of } from \"rxjs\" \r\n\r\n   \r\n\r\nexport class EmployeeInfo {\r\n\r\n\t@rangeAsync({validatorConfig:of({minimumNumber:18  ,maximumNumber:60})}) \r\n\tage: number;\r\n\t\r\n\t\r\n}\r\n","modelName":"employee-info.model.ts","json":{}},"maximumNumberExample":{"notes":null,"component":null,"html":null,"model":"@rangeAsync({validatorConfig:of({minimumNumber:18  ,maximumNumber:60})}) \r\nage: number;\r\n","modelName":null,"json":{}},"maximumNumber":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { EmployeeInfo } from './employee-info.model';\r\n\r\n@Component({\r\n    selector: 'app-rangeAsync-maximumNumber',\r\n    templateUrl: './range-async-maximum-number.component.html'\r\n})\r\nexport class RangeAsyncMaximumNumberComponent implements OnInit {\r\n    employeeInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let employeeInfo = new EmployeeInfo();\r\n        this.employeeInfoFormGroup = this.formBuilder.formGroup(employeeInfo);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"employeeInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Employee Age</label>\r\n      <input type=\"text\" formControlName=\"age\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Age Should be between 18 to 60.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"employeeInfoFormGroup.controls.age.errors\">{{employeeInfoFormGroup.controls.age.errors.range.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!employeeInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  rangeAsync, } from   \"@rxweb/reactive-form-validators\" \r\n\rimport { of } from \"rxjs\" \r\n\r\n   \r\n\r\nexport class EmployeeInfo {\r\n\r\n\t@rangeAsync({validatorConfig:of({minimumNumber:18  ,maximumNumber:60})}) \r\n\tage: number;\r\n\t\r\n\t\r\n}\r\n","modelName":"employee-info.model.ts","json":{}},"messageExample":{"notes":null,"component":null,"html":null,"model":"@rangeAsync({validatorConfig:of({minimumNumber:1000  ,maximumNumber:200000  ,message:'Your Salary should be between 1000 to 200000.'})}) \r\nsalary: number;\r\n","modelName":null,"json":{}},"message":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { EmployeeInfo } from './employee-info.model';\r\n\r\n@Component({\r\n    selector: 'app-rangeAsync-message',\r\n    templateUrl: './range-async-message.component.html'\r\n})\r\nexport class RangeAsyncMessageComponent implements OnInit {\r\n    employeeInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let employeeInfo = new EmployeeInfo();\r\n        this.employeeInfoFormGroup = this.formBuilder.formGroup(employeeInfo);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"employeeInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Salary</label>\r\n      <input type=\"text\" formControlName=\"salary\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message<br/></small>\r\n      <small class=\"form-text text-muted\">Please enter salary between 1000 to 200000<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"employeeInfoFormGroup.controls.salary.errors\">{{employeeInfoFormGroup.controls.salary.errors.range.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!employeeInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  rangeAsync, } from   \"@rxweb/reactive-form-validators\" \r\n\rimport { of } from \"rxjs\" \r\n\r\n   \r\n\r\nexport class EmployeeInfo {\r\n\r\n\t@rangeAsync({validatorConfig:of({minimumNumber:1000  ,maximumNumber:200000  ,message:'Your Salary should be between 1000 to 200000.'})}) \r\n\tsalary: number;\r\n\t\r\n\t\r\n}\r\n","modelName":"employee-info.model.ts","json":{}},"messageKeyExample":{"notes":null,"component":null,"html":null,"model":"@rangeAsync({validatorConfig:of({minimumNumber:1  ,maximumNumber:10  ,messageKey:'rangeMessageKey'})}) \r\nnoOfprojects: number;\r\n","modelName":null,"json":{}},"messageKey":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { EmployeeInfo } from './employee-info.model';\r\n\r\n@Component({\r\n    selector: 'app-rangeAsync-messageKey',\r\n    templateUrl: './range-async-message-key.component.html'\r\n})\r\nexport class RangeAsyncMessageKeyComponent implements OnInit {\r\n    employeeInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let employeeInfo = new EmployeeInfo();\r\n        this.employeeInfoFormGroup = this.formBuilder.formGroup(employeeInfo);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"employeeInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Number of Projects</label>\r\n      <input type=\"text\" formControlName=\"noOfprojects\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message using message key<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"employeeInfoFormGroup.controls.noOfprojects.errors\">{{employeeInfoFormGroup.controls.noOfprojects.errors.rangeMessageKey.message}}<br/></small>\t\t\r\n    </div>\r\n    <button [disabled]=\"!employeeInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  rangeAsync, } from   \"@rxweb/reactive-form-validators\" \r\n\rimport { of } from \"rxjs\" \r\n\r\n   \r\n\r\nexport class EmployeeInfo {\r\n\r\n\t@rangeAsync({validatorConfig:of({minimumNumber:1  ,maximumNumber:10  ,messageKey:'rangeMessageKey'})}) \r\n\tnoOfprojects: number;\r\n\t\r\n\t\r\n}\r\n","modelName":"employee-info.model.ts","json":{}},"dynamic":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\nimport { FormBuilderConfiguration,} from '@rxweb/reactive-form-validators';\r\n\r\nimport { EmployeeInfo } from './employee-info.model';\r\n\r\n@Component({\r\n    selector: 'app-rangeAsync-dynamic',\r\n    templateUrl: './range-async-dynamic.component.html'\r\n})\r\nexport class RangeAsyncDynamicComponent implements OnInit {\r\n    employeeInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder,private http: HttpClient    ) { }\r\n\r\n    ngOnInit() {\r\n        let employeeInfo = new EmployeeInfo();\r\n        let formBuilderConfiguration = new FormBuilderConfiguration();\r\n\t\tthis.http.get('assets/examples/reactive-form-validators/decorators/rangeAsync/dynamic/dynamic.json?v=' + environment.appVersion).subscribe(dynamic => {\r\n            formBuilderConfiguration.dynamicValidation = JSON.parse(JSON.stringify(dynamic));\r\n\t\t\tthis.employeeInfoFormGroup = this.formBuilder.formGroup(employeeInfo,formBuilderConfiguration);\r\n       })})\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  *ngIf=\"employeeInfoFormGroup\"  [formGroup]=\"employeeInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Employee Age</label>\r\n      <input type=\"text\" formControlName=\"age\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Age Should be between 18 to 60.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"employeeInfoFormGroup.controls.age.errors\">{{employeeInfoFormGroup.controls.age.errors.range.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Salary</label>\r\n      <input type=\"text\" formControlName=\"salary\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message<br/></small>\r\n      <small class=\"form-text text-muted\">Please enter salary between 1000 to 200000<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"employeeInfoFormGroup.controls.salary.errors\">{{employeeInfoFormGroup.controls.salary.errors.range.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Number of Projects</label>\r\n      <input type=\"text\" formControlName=\"noOfprojects\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message using message key<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"employeeInfoFormGroup.controls.noOfprojects.errors\">{{employeeInfoFormGroup.controls.noOfprojects.errors.rangeMessageKey.message}}<br/></small>\t\t\r\n    </div>\r\n    <button [disabled]=\"!employeeInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  rangeAsync,prop, } from   \"@rxweb/reactive-form-validators\" \r\n\rimport { of } from \"rxjs\" \r\n\r\n   \r\n\r\nexport class EmployeeInfo {\r\n\r\n\t@prop()\r\n\tage: number;\r\n\r\n\t@prop()\r\n\tsalary: number;\r\n\r\n\t@prop()\r\n\tnoOfprojects: number;\r\n\r\n}\r\n","modelName":"employee-info.model.ts","json":{"dynamic.json":"{\"age\":{\"rangeAsync\":{\"minimumNumber\":\"18\",\"maximumNumber\":\"60\"}},\"salary\":{\"rangeAsync\":{\"minimumNumber\":\"1000\",\"maximumNumber\":\"200000\",\"message\":\"Your Salary should be between 1000 to 200000.\"}},\"noOfprojects\":{\"rangeAsync\":{\"minimumNumber\":\"1\",\"maximumNumber\":\"10\",\"messageKey\":\"rangeMessageKey\"}}}"}},"add":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { EmployeeInfo } from './employee-info.model';\r\n\r\n@Component({\r\n    selector: 'app-rangeAsync-add',\r\n    templateUrl: './range-async-add.component.html'\r\n})\r\nexport class RangeAsyncAddComponent implements OnInit {\r\n    employeeInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let employeeInfo = new EmployeeInfo();\r\n        this.employeeInfoFormGroup = this.formBuilder.formGroup(employeeInfo);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"employeeInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Employee Age</label>\r\n      <input type=\"text\" formControlName=\"age\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Please enter Employee Age between 18 to 60<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"employeeInfoFormGroup.controls.age.errors\">{{employeeInfoFormGroup.controls.age.errors.range.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!employeeInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  rangeAsync, } from   \"@rxweb/reactive-form-validators\" \r\n\rimport { of } from \"rxjs\" \r\n\r\n   \r\n\r\nexport class EmployeeInfo {\r\n\r\n\t@rangeAsync({validatorConfig:of({minimumNumber:18  ,maximumNumber:60})}) \r\n\tage: number;\r\n\t\r\n\t\r\n}\r\n","modelName":"employee-info.model.ts","json":{}},"edit":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { EmployeeInfo } from './employee-info.model';\r\n\r\n@Component({\r\n    selector: 'app-rangeAsync-edit',\r\n    templateUrl: './range-async-edit.component.html'\r\n})\r\nexport class RangeAsyncEditComponent implements OnInit {\r\n    employeeInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder,private http: HttpClient    ) { }\r\n\r\n    ngOnInit() {\r\n        this.http.get('assets/examples/reactive-form-validators/decorators/rangeAsync/edit/employee-info-data.json?v=' + environment.appVersion).subscribe(employeeInfo => {\r\n            this.employeeInfoFormGroup = this.formBuilder.formGroup<EmployeeInfo>(EmployeeInfo,employeeInfo);\r\n       })})\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  *ngIf=\"employeeInfoFormGroup\"  [formGroup]=\"employeeInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Employee Age</label>\r\n      <input type=\"text\" formControlName=\"age\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Please enter Employee Age between 18 to 60<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"employeeInfoFormGroup.controls.age.errors\">{{employeeInfoFormGroup.controls.age.errors.range.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!employeeInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  rangeAsync, } from   \"@rxweb/reactive-form-validators\" \r\n\rimport { of } from \"rxjs\" \r\n\r\n   \r\n\r\nexport class EmployeeInfo {\r\n\r\n\t@rangeAsync({validatorConfig:of({minimumNumber:18  ,maximumNumber:60})}) \r\n\tage: number;\r\n\t\r\n\t\r\n}\r\n","modelName":"employee-info.model.ts","json":{"employee-info-data.json":"{\"age\":\"26\"}"}}}