{"complete":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-ip-complete',\r\n    templateUrl: './ip-complete.component.html'\r\n})\r\nexport class IpCompleteComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\t\t\t\tipTypes = [ \"V4\", \"V6\", \"AnyOne\",];\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Ip Type</label>\r\n      <select formControlName=\"ipType\" class=\"form-control\">\r\n\t\t<option [value]=\"item\" *ngFor=\"let item of ipTypes\">{{item}}</option>\r\n      </select>\r\n      <small class=\"form-text text-muted\">Based on selection of ip type conditional validation is applied<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.ipType.errors\">{{userFormGroup.controls.ipType.errors.ip.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>IP V4</label>\r\n      <input type=\"text\" formControlName=\"ipV4\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This validation is applied when input value is not IP V4 Type<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.ipV4.errors\">{{userFormGroup.controls.ipV4.errors.ip.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>IP V6</label>\r\n      <input type=\"text\" formControlName=\"ipV6\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This validation is applied when input value is not IP V6 Type<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.ipV6.errors\">{{userFormGroup.controls.ipV6.errors.ip.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Any IP Type</label>\r\n      <input type=\"text\" formControlName=\"anyIPType\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This validation is applied when input value is not any type of IP<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.anyIPType.errors\">{{userFormGroup.controls.anyIPType.errors.ip.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>IP V4 CIDR</label>\r\n      <input type=\"text\" formControlName=\"ipV4Cidr\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This validation allowed ip version 4 and for supernetting Ips<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.ipV4Cidr.errors\">{{userFormGroup.controls.ipV4Cidr.errors.ip.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>IP V6 CIDR</label>\r\n      <input type=\"text\" formControlName=\"ipV6Cidr\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This validation allowed ip version 6 and for supernetting Ips<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.ipV6Cidr.errors\">{{userFormGroup.controls.ipV6Cidr.errors.ip.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>IP V6 Conditional</label>\r\n      <input type=\"text\" formControlName=\"ipV6Conditional\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This validation allowed ip version 6 and if ip type is IPV6 and conditionally validated<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.ipV6Conditional.errors\">{{userFormGroup.controls.ipV6Conditional.errors.ip.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>IP V4 Custom Message</label>\r\n      <input type=\"text\" formControlName=\"ipV4Message\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This validation allowed ip version 4 it display custom message<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.ipV4Message.errors\">{{userFormGroup.controls.ipV4Message.errors.ip.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  ip,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t@prop()\r\n\tipType: string;\r\n\r\n\t@ip({version:1 }) \r\n\tipV4: string;\r\n\r\n\t@ip({version:2 }) \r\n\tipV6: string;\r\n\r\n\t@ip({version:3 }) \r\n\tanyIPType: string;\r\n\r\n\t@ip({version:1  ,isCidr:true }) \r\n\tipV4Cidr: string;\r\n\r\n\t@ip({version:2  ,isCidr:true }) \r\n\tipV6Cidr: string;\r\n\r\n\t@ip({conditionalExpression:'(x,y) => x.ipType == \"V6\"'  ,version:2 }) \r\n\tipV6Conditional: string;\r\n\r\n\t@ip({version:1  ,message:'Please Enter IP V4 type Only' }) \r\n\tipV4Message: string;\r\n\r\n}\r\n","modelName":"user.model.ts","jsonName":null,"json":null},"versionExample":{"notes":null,"component":null,"html":null,"model":"@ip({version:1 }) \r\nipV4: string;\r\n","modelName":null,"jsonName":null,"json":null},"version":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-ip-version',\r\n    templateUrl: './ip-version.component.html'\r\n})\r\nexport class IpVersionComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>IP V4</label>\r\n      <input type=\"text\" formControlName=\"ipV4\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This validation is applied when input value is not IP V4 Type<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.ipV4.errors\">{{userFormGroup.controls.ipV4.errors.ip.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  ip, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t@ip({version:1 }) \r\n\tipV4: string;\r\n\r\n}\r\n","modelName":"user.model.ts","jsonName":null,"json":null},"isCidrExample":{"notes":null,"component":null,"html":null,"model":"@ip({version:1  ,isCidr:true }) \r\nipV4Cidr: string;\r\n","modelName":null,"jsonName":null,"json":null},"isCidr":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-ip-isCidr',\r\n    templateUrl: './ip-is-cidr.component.html'\r\n})\r\nexport class IpIsCidrComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>IP V4 CIDR</label>\r\n      <input type=\"text\" formControlName=\"ipV4Cidr\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This validation allowed ip version 4 and for supernetting Ips<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.ipV4Cidr.errors\">{{userFormGroup.controls.ipV4Cidr.errors.ip.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  ip, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t@ip({version:1  ,isCidr:true }) \r\n\tipV4Cidr: string;\r\n\r\n}\r\n","modelName":"user.model.ts","jsonName":null,"json":null},"conditionalExpressionExample":{"notes":null,"component":null,"html":null,"model":"@ip({conditionalExpression:'(x,y) => x.ipType == \"V6\"'  ,version:2 }) \r\nipV6Conditional: string;\r\n","modelName":null,"jsonName":null,"json":null},"conditionalExpression":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-ip-conditionalExpression',\r\n    templateUrl: './ip-conditional-expression.component.html'\r\n})\r\nexport class IpConditionalExpressionComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\t\t\t\tipTypes = [ \"V4\", \"V6\", \"AnyOne\",];\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Ip Type</label>\r\n      <select formControlName=\"ipType\" class=\"form-control\">\r\n\t\t<option [value]=\"item\" *ngFor=\"let item of ipTypes\">{{item}}</option>\r\n      </select>\r\n      <small class=\"form-text text-muted\">Based on selection of ip type conditional validation is applied<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.ipType.errors\">{{userFormGroup.controls.ipType.errors.ip.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>IP V6 Conditional</label>\r\n      <input type=\"text\" formControlName=\"ipV6Conditional\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This validation allowed ip version 6 and if ip type is IPV6 and conditionally validated<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.ipV6Conditional.errors\">{{userFormGroup.controls.ipV6Conditional.errors.ip.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  ip,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t@prop()\r\n\tipType: string;\r\n\r\n\t@ip({conditionalExpression:'(x,y) => x.ipType == \"V6\"'  ,version:2 }) \r\n\tipV6Conditional: string;\r\n\r\n}\r\n","modelName":"user.model.ts","jsonName":null,"json":null},"messageExample":{"notes":null,"component":null,"html":null,"model":"@ip({version:1  ,message:'Please Enter IP V4 type Only' }) \r\nipV4Message: string;\r\n","modelName":null,"jsonName":null,"json":null},"message":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-ip-message',\r\n    templateUrl: './ip-message.component.html'\r\n})\r\nexport class IpMessageComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>IP V4 Custom Message</label>\r\n      <input type=\"text\" formControlName=\"ipV4Message\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This validation allowed ip version 4 it display custom message<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.ipV4Message.errors\">{{userFormGroup.controls.ipV4Message.errors.ip.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  ip, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t@ip({version:1  ,message:'Please Enter IP V4 type Only' }) \r\n\tipV4Message: string;\r\n\r\n}\r\n","modelName":"user.model.ts","jsonName":null,"json":null},"dynamic":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\nimport { FormBuilderConfiguration,} from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-ip-dynamic',\r\n    templateUrl: './ip-dynamic.component.html'\r\n})\r\nexport class IpDynamicComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\t\t\t\tipTypes = [ \"V4\", \"V6\", \"AnyOne\",];\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder,private http: HttpClient    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        let formBuilderConfiguration = new FormBuilderConfiguration();\r\n\t\tthis.http.get('assets/examples/reactive-form-validators/decorators/ip/dynamic/dynamic.json').subscribe(dynamic => {\r\n            formBuilderConfiguration.dynamicValidation = JSON.parse(JSON.stringify(dynamic));\r\n\t\t\tthis.userFormGroup = this.formBuilder.formGroup(user,formBuilderConfiguration);\r\n        })\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  *ngIf=\"userFormGroup\"  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Ip Type</label>\r\n      <select formControlName=\"ipType\" class=\"form-control\">\r\n\t\t<option [value]=\"item\" *ngFor=\"let item of ipTypes\">{{item}}</option>\r\n      </select>\r\n      <small class=\"form-text text-muted\">Based on selection of ip type conditional validation is applied<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.ipType.errors\">{{userFormGroup.controls.ipType.errors.ip.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>IP V4</label>\r\n      <input type=\"text\" formControlName=\"ipV4\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This validation is applied when input value is not IP V4 Type<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.ipV4.errors\">{{userFormGroup.controls.ipV4.errors.ip.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>IP V6</label>\r\n      <input type=\"text\" formControlName=\"ipV6\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This validation is applied when input value is not IP V6 Type<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.ipV6.errors\">{{userFormGroup.controls.ipV6.errors.ip.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Any IP Type</label>\r\n      <input type=\"text\" formControlName=\"anyIPType\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This validation is applied when input value is not any type of IP<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.anyIPType.errors\">{{userFormGroup.controls.anyIPType.errors.ip.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>IP V4 CIDR</label>\r\n      <input type=\"text\" formControlName=\"ipV4Cidr\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This validation allowed ip version 4 and for supernetting Ips<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.ipV4Cidr.errors\">{{userFormGroup.controls.ipV4Cidr.errors.ip.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>IP V6 CIDR</label>\r\n      <input type=\"text\" formControlName=\"ipV6Cidr\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This validation allowed ip version 6 and for supernetting Ips<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.ipV6Cidr.errors\">{{userFormGroup.controls.ipV6Cidr.errors.ip.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>IP V4 Custom Message</label>\r\n      <input type=\"text\" formControlName=\"ipV4Message\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This validation allowed ip version 4 it display custom message<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.ipV4Message.errors\">{{userFormGroup.controls.ipV4Message.errors.ip.message}}<br/></small>\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  ip,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t@prop()\r\n\tipType: string;\r\n\r\n\t@prop()\r\n\tipV4: string;\r\n\r\n\t@prop()\r\n\tipV6: string;\r\n\r\n\t@prop()\r\n\tanyIPType: string;\r\n\r\n\t@prop()\r\n\tipV4Cidr: string;\r\n\r\n\t@prop()\r\n\tipV6Cidr: string;\r\n\r\n\t@prop()\r\n\tipV4Message: string;\r\n\r\n}\r\n","modelName":"user.model.ts","jsonName":"dynamic.json","json":"{\"ipType\":{},\"ipV4\":{\"ip\":{\"version\":\"1\"}},\"ipV6\":{\"ip\":{\"version\":\"2\"}},\"anyIPType\":{\"ip\":{\"version\":\"3\"}},\"ipV4Cidr\":{\"ip\":{\"version\":\"1\",\"isCidr\":\"true\"}},\"ipV6Cidr\":{\"ip\":{\"version\":\"2\",\"isCidr\":\"true\"}},\"ipV4Message\":{\"ip\":{\"version\":\"1\",\"message\":\"Please Enter IP V4 type Only\"}}}"},"add":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-ip-add',\r\n    templateUrl: './ip-add.component.html'\r\n})\r\nexport class IpAddComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>IP V4</label>\r\n      <input type=\"text\" formControlName=\"ipV4\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This validation is applied when input value is not IP V4 Type<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.ipV4.errors\">{{userFormGroup.controls.ipV4.errors.ip.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  ip, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t@ip({version:1 }) \r\n\tipV4: string;\r\n\r\n}\r\n","modelName":"user.model.ts","jsonName":null,"json":null},"edit":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-ip-edit',\r\n    templateUrl: './ip-edit.component.html'\r\n})\r\nexport class IpEditComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder,private http: HttpClient    ) { }\r\n\r\n    ngOnInit() {\r\n        this.http.get('assets/examples/reactive-form-validators/decorators/ip/edit/user-data.json').subscribe(user => {\r\n            this.userFormGroup = this.formBuilder.formGroup<User>(User,user);\r\n        })\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  *ngIf=\"userFormGroup\"  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>IP V4</label>\r\n      <input type=\"text\" formControlName=\"ipV4\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This validation is applied when input value is not IP V4 Type<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.ipV4.errors\">{{userFormGroup.controls.ipV4.errors.ip.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  ip, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t@ip({version:1 }) \r\n\tipV4: string;\r\n\r\n}\r\n","modelName":"user.model.ts","jsonName":"user-data.json","json":"{\"ipV4\":\"192.0.2.1\"}"}}