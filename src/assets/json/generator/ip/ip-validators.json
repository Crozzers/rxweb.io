{"complete":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-ip-complete-validator',\r\n    templateUrl: './ip-complete.component.html'\r\n})\r\nexport class IpCompleteValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n\t\t\t\tipTypes = [ \"V4\", \"V6\", \"AnyOne\",];\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n            ipType:['',], \r\n            ipV4:['', RxwebValidators.ip({version:1 })], \r\n            ipV6:['', RxwebValidators.ip({version:2 })], \r\n            anyIPType:['', RxwebValidators.ip({version:3 })], \r\n            ipV4Cidr:['', RxwebValidators.ip({version:1  ,isCidr:true })], \r\n            ipV6Cidr:['', RxwebValidators.ip({version:2  ,isCidr:true })], \r\n            ipV6Conditional:['', RxwebValidators.ip({conditionalExpression:'(x,y) => x.ipType == \"V6\"'  ,version:2 })], \r\n            ipV4Conditional:['', RxwebValidators.ip({conditionalExpression:'x => x.ipType == \"V4\"'  ,version:1 })], \r\n            ipV4Message:['', RxwebValidators.ip({version:1  ,message:'Please Enter IP V4 type Only' })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Ip Type</label>\r\n      <select formControlName=\"ipType\" class=\"form-control\">\r\n\t\t<option [value]=\"item\" *ngFor=\"let item of ipTypes\">{{item}}</option>\r\n      </select>\r\n      <small class=\"form-text text-muted\">Based on selection of ip type conditional validation is applied<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.ipType.errors\">{{userFormGroup.controls.ipType.errors.ip.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>IP V4</label>\r\n      <input type=\"text\" formControlName=\"ipV4\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This validation is applied when input value is not IP V4 Type<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.ipV4.errors\">{{userFormGroup.controls.ipV4.errors.ip.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>IP V6</label>\r\n      <input type=\"text\" formControlName=\"ipV6\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This validation is applied when input value is not IP V6 Type<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.ipV6.errors\">{{userFormGroup.controls.ipV6.errors.ip.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Any IP Type</label>\r\n      <input type=\"text\" formControlName=\"anyIPType\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This validation is applied when input value is not any type of IP<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.anyIPType.errors\">{{userFormGroup.controls.anyIPType.errors.ip.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>IP V4 CIDR</label>\r\n      <input type=\"text\" formControlName=\"ipV4Cidr\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This validation allowed ip version 4 and for supernetting Ips<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.ipV4Cidr.errors\">{{userFormGroup.controls.ipV4Cidr.errors.ip.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>IP V6 CIDR</label>\r\n      <input type=\"text\" formControlName=\"ipV6Cidr\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This validation allowed ip version 6 and for supernetting Ips<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.ipV6Cidr.errors\">{{userFormGroup.controls.ipV6Cidr.errors.ip.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>IP V6 Conditional</label>\r\n      <input type=\"text\" formControlName=\"ipV6Conditional\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This validation allowed ip version 6 and if ip type is IPV6 and conditionally validated<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.ipV6Conditional.errors\">{{userFormGroup.controls.ipV6Conditional.errors.ip.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>IP V4 Conditional</label>\r\n      <input type=\"text\" formControlName=\"ipV4Conditional\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This validation allowed ip version 6 and if ip type is IPV6 and conditionally validated<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.ipV4Conditional.errors\">{{userFormGroup.controls.ipV4Conditional.errors.ip.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>IP V4 Custom Message</label>\r\n      <input type=\"text\" formControlName=\"ipV4Message\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This validation allowed ip version 4 it display custom message<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.ipV4Message.errors\">{{userFormGroup.controls.ipV4Message.errors.ip.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"json":{}},"versionExample":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.ip({version:1 });\r\n","modelName":null,"json":{}},"version":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-ip-version-validator',\r\n    templateUrl: './ip-version.component.html'\r\n})\r\nexport class IpVersionValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n            ipV4:['', RxwebValidators.ip({version:1 })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>IP V4</label>\r\n      <input type=\"text\" formControlName=\"ipV4\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This validation is applied when input value is not IP V4 Type<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.ipV4.errors\">{{userFormGroup.controls.ipV4.errors.ip.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"json":{}},"isCidrExample":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.ip({version:1  ,isCidr:true });\r\n","modelName":null,"json":{}},"isCidr":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-ip-isCidr-validator',\r\n    templateUrl: './ip-is-cidr.component.html'\r\n})\r\nexport class IpIsCidrValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n            ipV4Cidr:['', RxwebValidators.ip({version:1  ,isCidr:true })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>IP V4 CIDR</label>\r\n      <input type=\"text\" formControlName=\"ipV4Cidr\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This validation allowed ip version 4 and for supernetting Ips<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.ipV4Cidr.errors\">{{userFormGroup.controls.ipV4Cidr.errors.ip.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"json":{}},"conditionalExpressionExampleFunction":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.ip({conditionalExpression:'(x,y) => x.ipType == \"V6\"'  ,version:2 });\r\n","modelName":null,"json":{}},"conditionalExpression":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-ip-conditionalExpression-validator',\r\n    templateUrl: './ip-conditional-expression.component.html'\r\n})\r\nexport class IpConditionalExpressionValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n\t\t\t\tipTypes = [ \"V4\", \"V6\", \"AnyOne\",];\r\n\t\r\n\t\r\n\t\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n            ipType:['',], \r\n            ipV4Conditional:['', RxwebValidators.ip({conditionalExpression:'x => x.ipType == \"V4\"'  ,version:1 })], \r\n            ipV6Conditional:['', RxwebValidators.ip({conditionalExpression:'(x,y) => x.ipType == \"V6\"'  ,version:2 })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Ip Type</label>\r\n      <select formControlName=\"ipType\" class=\"form-control\">\r\n\t\t<option [value]=\"item\" *ngFor=\"let item of ipTypes\">{{item}}</option>\r\n      </select>\r\n      <small class=\"form-text text-muted\">Based on selection of ip type conditional validation is applied<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.ipType.errors\">{{userFormGroup.controls.ipType.errors.ip.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>IP V4 Conditional</label>\r\n      <input type=\"text\" formControlName=\"ipV4Conditional\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This validation allowed ip version 6 and if ip type is IPV6 and conditionally validated<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.ipV4Conditional.errors\">{{userFormGroup.controls.ipV4Conditional.errors.ip.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>IP V6 Conditional</label>\r\n      <input type=\"text\" formControlName=\"ipV6Conditional\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This validation allowed ip version 6 and if ip type is IPV6 and conditionally validated<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.ipV6Conditional.errors\">{{userFormGroup.controls.ipV6Conditional.errors.ip.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"json":{}},"versionExampleFunction":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.ip({conditionalExpression:'(x,y) => x.ipType == \"V6\"'  ,version:2 });\r\n","modelName":null,"json":{}},"conditionalExpressionExampleString":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.ip({conditionalExpression:'x => x.ipType == \"V4\"'  ,version:1 });\r\n","modelName":null,"json":{}},"versionExampleString":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.ip({conditionalExpression:'x => x.ipType == \"V4\"'  ,version:1 });\r\n","modelName":null,"json":{}},"messageExample":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.ip({version:1  ,message:'Please Enter IP V4 type Only' });\r\n","modelName":null,"json":{}},"message":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-ip-message-validator',\r\n    templateUrl: './ip-message.component.html'\r\n})\r\nexport class IpMessageValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n            ipV4Message:['', RxwebValidators.ip({version:1  ,message:'Please Enter IP V4 type Only' })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>IP V4 Custom Message</label>\r\n      <input type=\"text\" formControlName=\"ipV4Message\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This validation allowed ip version 4 it display custom message<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.ipV4Message.errors\">{{userFormGroup.controls.ipV4Message.errors.ip.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"json":{}},"dynamic":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormBuilderConfiguration,RxFormBuilder} from '@rxweb/reactive-form-validators';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n    selector: 'app-ip-dynamic-validator',\r\n    templateUrl: './ip-dynamic.component.html'\r\n})\r\nexport class IpDynamicValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n\t\t\t\tipTypes = [ \"V4\", \"V6\", \"AnyOne\",];\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\tconstructor(\r\n        private formBuilder: RxFormBuilder , private http: HttpClient )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n\t\tlet formBuilderConfiguration = new FormBuilderConfiguration();\r\n\t\tthis.http.get('assets/examples/reactive-form-validators/validators/ip/dynamic/dynamic.json?v='+environment.appVersion).subscribe(dynamic => {\r\n\t\t\tformBuilderConfiguration.dynamicValidation = JSON.parse(JSON.stringify(dynamic));\r\n\t\t\tvar user = { ipType:'', ipV4:'', ipV6:'', anyIPType:'', ipV4Cidr:'', ipV6Cidr:'', ipV6Conditional:'', ipV4Conditional:'', ipV4Message:'',  }\r\n\t\t\tthis.userFormGroup = this.formBuilder.group(user,formBuilderConfiguration);\r\n\t\t})\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  *ngIf=\"userFormGroup\"  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Ip Type</label>\r\n      <select formControlName=\"ipType\" class=\"form-control\">\r\n\t\t<option [value]=\"item\" *ngFor=\"let item of ipTypes\">{{item}}</option>\r\n      </select>\r\n      <small class=\"form-text text-muted\">Based on selection of ip type conditional validation is applied<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.ipType.errors\">{{userFormGroup.controls.ipType.errors.ip.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>IP V4</label>\r\n      <input type=\"text\" formControlName=\"ipV4\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This validation is applied when input value is not IP V4 Type<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.ipV4.errors\">{{userFormGroup.controls.ipV4.errors.ip.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>IP V6</label>\r\n      <input type=\"text\" formControlName=\"ipV6\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This validation is applied when input value is not IP V6 Type<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.ipV6.errors\">{{userFormGroup.controls.ipV6.errors.ip.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Any IP Type</label>\r\n      <input type=\"text\" formControlName=\"anyIPType\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This validation is applied when input value is not any type of IP<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.anyIPType.errors\">{{userFormGroup.controls.anyIPType.errors.ip.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>IP V4 CIDR</label>\r\n      <input type=\"text\" formControlName=\"ipV4Cidr\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This validation allowed ip version 4 and for supernetting Ips<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.ipV4Cidr.errors\">{{userFormGroup.controls.ipV4Cidr.errors.ip.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>IP V6 CIDR</label>\r\n      <input type=\"text\" formControlName=\"ipV6Cidr\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This validation allowed ip version 6 and for supernetting Ips<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.ipV6Cidr.errors\">{{userFormGroup.controls.ipV6Cidr.errors.ip.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>IP V4 Conditional</label>\r\n      <input type=\"text\" formControlName=\"ipV4Conditional\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This validation allowed ip version 6 and if ip type is IPV6 and conditionally validated<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.ipV4Conditional.errors\">{{userFormGroup.controls.ipV4Conditional.errors.ip.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>IP V4 Custom Message</label>\r\n      <input type=\"text\" formControlName=\"ipV4Message\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This validation allowed ip version 4 it display custom message<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.ipV4Message.errors\">{{userFormGroup.controls.ipV4Message.errors.ip.message}}<br/></small>\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"json":{"dynamic.json":"{\"ipType\":{},\"ipV4\":{\"ip\":{\"version\":\"1\"}},\"ipV6\":{\"ip\":{\"version\":\"2\"}},\"anyIPType\":{\"ip\":{\"version\":\"3\"}},\"ipV4Cidr\":{\"ip\":{\"version\":\"1\",\"isCidr\":\"true\"}},\"ipV6Cidr\":{\"ip\":{\"version\":\"2\",\"isCidr\":\"true\"}},\"ipV4Conditional\":{\"ip\":{\"conditionalExpression\":\"x => x.ipType == \\\"V4\\\"\",\"version\":\"1\"}},\"ipV4Message\":{\"ip\":{\"version\":\"1\",\"message\":\"Please Enter IP V4 type Only\"}}}"}},"add":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-ip-add-validator',\r\n    templateUrl: './ip-add.component.html'\r\n})\r\nexport class IpAddValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n            ipV4:['', RxwebValidators.ip({version:1 })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>IP V4</label>\r\n      <input type=\"text\" formControlName=\"ipV4\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This validation is applied when input value is not IP V4 Type<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.ipV4.errors\">{{userFormGroup.controls.ipV4.errors.ip.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"json":{}}}