{"rightSidebarLinks":[{"id":"exception-handling","title":"ExceptionHandlingAndLogging","subLink":null},{"id":"handleexception","title":"Handle Exception","subLink":[]},{"id":"seealso","title":"See Also","subLink":[]}],"title":"ExceptionHandlingAndLogging","description":"","validatorType":"decorators","validationTypeTitle":"Decorators","type":"simple","category":"security","subCategory":null,"linkTitle":"exceptionhandlingandlogging","tabArray":{},"innerHtml":null,"htmlContent":"<p class='showHideElement' >Exception handling and logging keeps a trace of all the exceptions that occur whenever any request is made to the APIs. <span class='highlighted'>IExceptionHandlerFeature</span> of Microsoft.AspNetCore.Diagnostics gives information about the error occured and the path. The error object of the same contains information of message, source, stacktrace and targetsite which provides the necessary information to detect the cause of the exception. Further the <span class='highlighted'>LogAsync</span> method of <span class='highlighted'>RxWeb.Core.Logging</span> will log the exception details in the database based upon the exception and the context.</p>\r\n<div class='row page-section' id= 'handleexception'>\r\n<div class='col-lg-12'>\r\n<h2>Handle Exception<a title='Link to this heading' class='link-header' href='/security/exceptionhandlingandlogging#handleexception'><i class='fa fa-link'></i></a></h2>\r\n\r\n<div class='model-ts'><pre><code>\r\n        private static void HandleException(this IApplicationBuilder applicationBuilder)\r\n        {\r\n            applicationBuilder.UseExceptionHandler(errorApp =>\r\n            {\r\n                errorApp.Run(async context =>\r\n                {\r\n                    var errorFeature = context.Features.Get<IExceptionHandlerFeature>();\r\n                    var exception = errorFeature.Error;\r\n\t\t\t\t\tvar traceId = await exception.LogAsync(context);\r\n                    context.Response.ContentType = \"application/json;\";\r\n                    await context.Response.WriteAsync(\"Error Has Occured.\");\r\n                });\r\n            });\r\n        }\r\n</code></pre></div>\r\n</div></div>\r\n<div class='row page-section' id= 'seealso'>\r\n<div class='col-lg-12'>\r\n<h2>See Also<a title='Link to this heading' class='link-header' href='/security/exceptionhandlingandlogging#seealso'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Ip Safelist</p>\r\n</div></div>\r\n"}