{"rightSidebarLinks":[{"id":"project-creation","title":"Project Creation","subLink":null},{"id":"projectcreation","title":"Project Creation","subLink":[]},{"id":"examinetheprojectstructure","title":"Examine the Project Structure","subLink":[]},{"id":"models","title":"Models","subLink":[]},{"id":"boundedcontext","title":"BoundedContext","subLink":[]},{"id":"unitofwork","title":"Unit Of Work","subLink":[]},{"id":"infrastructure","title":"Infrastructure","subLink":[]},{"id":"domain","title":"Domain","subLink":[]},{"id":"api","title":"Api","subLink":[]},{"id":"databasetables","title":"Database Tables","subLink":[]},{"id":"applicationobjects","title":"Application Objects","subLink":[]},{"id":"githubissues","title":"Project Creation Github Issues","subLink":null}],"title":"Project Creation","description":"","validatorType":"decorators","validationTypeTitle":"Decorators","type":"simple","gitDocPath":null,"category":"step-by-step-guide","subCategory":null,"linkTitle":"project-creation","tabArray":{},"innerHtml":null,"htmlContent":"<div class='row page-section' id= 'projectcreation'>\r\n<div class='col-lg-12'>\r\n<h2>Project Creation<a title='Link to this heading' class='link-header' href='/step-by-step-guide/project-creation#projectcreation'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >In this section we discuss about the creation of project through rxwebcore cli and understand the created project structure and database tables. </p>\r\n<p class='showHideElement' >Let's consider a case of <span class='highlighted'>HumanResourceApplication</span>, this application we will extend in our other sub-modules like multitenancy, multilingual management, data-validation, data-sanitization and many more extensive features with the optimum code in there respective sections of <a>EntityFrameworkCore</a>, Security, Performance, Data validation, Data Sanitization.   </p>\r\n<blockquote class='showHideElement' ><p>Before firing the below command there must be Database server having two blank databases. the Main database and Log database. The <span class='highlighted'>Main</span> is used for your application specific data operations and <span class='highlighted'>Log</span> database is used for Logging related information like Request Log, Exception Log and Entity Log. As the CLI will generate few necessary tables in both database which will be helpful for the project.</p></blockquote>\r\n<p class='showHideElement' >Lets understand the rxwebcore CLI command options for creating a project. </p>\r\n<div class='model-ts command-ts'><pre><code class='command'>\r\nrxwebcore --new &ltProject_Name&gt\r\n</code></pre></div>\r\n<p class='showHideElement' >The above stated command represents that you can create a new project by specifying the project name through the <span class='highlighted'>--new</span> option, As discussed above Let's create a Human Resource Application project with the name <span class='highlighted'>HumanResourceApplication</span>, Fire Below command in your command prompt under respective folder where you want to create this project:</p>\r\n<div class='model-ts command-ts'><pre><code class='command'>\r\nrxwebcore --new HumanResourceApplication\r\n</code></pre></div>\r\n<p class='showHideElement' >By running this command. It will ask connection string of main and log database. The connection string should be in the format of :</p>\r\n<p class='showHideElement' >Windows based authentication connection string :</p>\r\n<p class='showHideElement' >Example :</p>\r\n<p class='showHideElement' >SQL user based authentication connection string :</p>\r\n<p class='showHideElement' >Example : </p>\r\n<p class='showHideElement' >>One question may arise, <b>Why I have to provide the both database connection string before creating a Project ?</b></p>\r\n<p class='showHideElement' >As the web server and database server is different and both are powerful in the respective area, hence we don't want to mingle up two things under one hood like database migration activities through the web project.</p>\r\n</div></div>\r\n<div class='row page-section' id= 'examinetheprojectstructure'>\r\n<div class='col-lg-12'>\r\n<h2>Examine the Project Structure<a title='Link to this heading' class='link-header' href='/step-by-step-guide/project-creation#examinetheprojectstructure'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >As RxWeb follows the practices of <span class='highlighted'>Clean Architecture</span>, Based upon this the project structure is divided into several layers of Models, domain services, Application core and API which adds the practices of seperation of concerns for simplification and maintanable code. </p>\r\n<p class='showHideElement' >The project solution contains six projects. They are : </p>\r\n<p class='showHideElement' >1. Models</p>\r\n<p class='showHideElement' >2. BoundedContext </p>\r\n<p class='showHideElement' >3. UnitOfWork</p>\r\n<p class='showHideElement' >4. Infrastructure</p>\r\n<p class='showHideElement' >5. Domain</p>\r\n<p class='showHideElement' >6. Api</p>\r\n</div></div>\r\n<div class='row page-section' id= 'models'>\r\n<div class='col-lg-12'>\r\n<h2>Models<a title='Link to this heading' class='link-header' href='/step-by-step-guide/project-creation#models'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >The primary purpose of this project is to define POCO models/Enums/Interfaces which can be used in application wide. Some of the files/folders are already defined. Some of these folders and files are defined when you create the project.</p>\r\n</div></div>\r\n<div class='row page-section' id= 'boundedcontext'>\r\n<div class='col-lg-12'>\r\n<h2>BoundedContext<a title='Link to this heading' class='link-header' href='/step-by-step-guide/project-creation#boundedcontext'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >This project contains BoundedContexts which are made based upon the defined modules. Each context can work independently based upon its </p>\r\n<p class='showHideElement' >concept. It has <span class='highlighted'>MainSqlDbContext</span> which is used to resolve the database connection based upon the configuration of the app setting through the  GetConnection method of <span class='highlighted'>BaseDbContext</span>. For performing multitenancy and connection resilency <span class='highlighted'>BaseBoundedDbContext</span> is used. The Bounded context will inherit from <span class='highlighted'>BaseBoundedDbContext</span> for resolving database configurations.</p>\r\n</div></div>\r\n<div class='row page-section' id= 'unitofwork'>\r\n<div class='col-lg-12'>\r\n<h2>Unit Of Work<a title='Link to this heading' class='link-header' href='/step-by-step-guide/project-creation#unitofwork'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >This project contains <span class='highlighted'>Uow</span> class for its respective BoundedContext to follow repository pattern which provides methods through which the data can be manipulated. It has <span class='highlighted'>BaseUow</span> which uses the <span class='highlighted'>IRepositoryProvider</span> and the <span class='highlighted'>IDbContext</span> to provide the <span class='highlighted'>CoreUnitOfWork</span> methods to the particular domain. Each domain contains a folder having Uow classes which are used in the controllers.   </p>\r\n</div></div>\r\n<div class='row page-section' id= 'infrastructure'>\r\n<div class='col-lg-12'>\r\n<h2>Infrastructure<a title='Link to this heading' class='link-header' href='/step-by-step-guide/project-creation#infrastructure'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >This project covers methods of necessary actions and implementation which are used application wide like determining user access and access permission, email and sms provider, authorize token etc  </p>\r\n<p class='showHideElement' >It contains default generated files which include:</p>\r\n<p class='showHideElement' >* Proving application token using <span class='highlighted'>ApplicationTokenProvider</span>.</p>\r\n<p class='showHideElement' >* Get UserClaim of logged user with <span class='highlighted'>AccessPermissionHandler</span>.</p>\r\n<p class='showHideElement' >* Authorizing token using <span class='highlighted'>TokenAuthorizer</span>.</p>\r\n<p class='showHideElement' >* Module wise access of a user using <span class='highlighted'>UserAccessConfigInfo</span>.</p>\r\n</div></div>\r\n<div class='row page-section' id= 'domain'>\r\n<div class='col-lg-12'>\r\n<h2>Domain<a title='Link to this heading' class='link-header' href='/step-by-step-guide/project-creation#domain'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Domain project contains Domain services which are made whenever <span class='highlighted'>high complexity</span> APIs are made. This means that whenever a domain controller is made, it will make a domain class  for adding custom <span class='highlighted'>business logic</span> of the domain which will be generated in the Domain project under its module's folder and its reference will be given in the controller.</p>\r\n</div></div>\r\n<div class='row page-section' id= 'api'>\r\n<div class='col-lg-12'>\r\n<h2>Api<a title='Link to this heading' class='link-header' href='/step-by-step-guide/project-creation#api'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >The Api project is the .Net core based web application which is the start of the project. It contains application settings, Controllers, necessery injected services like security, performance etc.</p>\r\n<p class='showHideElement' >* <span class='highlighted'>app.settings.json</span> is the json configuration of the application in which database <span class='highlighted'>connection string</span>, connection resilency configuration, MultiTenant details, security and other details are stored.</p>\r\n<p class='showHideElement' >* <span class='highlighted'>Controllers</span> folder contains rest APIs.</p>\r\n<p class='showHideElement' >  It has <span class='highlighted'>Core</span> folder having </p>\r\n<p class='showHideElement' >  1) <span class='highlighted'>Authentication</span> Controller : Used for login(Verifying user), token generation.</p>\r\n<p class='showHideElement' >  2) <span class='highlighted'>Authorize</span> Controller : Used for get access modules(acess permissions, logout and refresh token)  </p>\r\n<p class='showHideElement' >* Bootstrap contains implementations of <span class='highlighted'>ConfigurationOptions</span>, <span class='highlighted'>Performance</span>, <span class='highlighted'>Security</span>, <span class='highlighted'>Validations</span> etc </p>\r\n</div></div>\r\n<div class='row page-section' id= 'databasetables'>\r\n<div class='col-lg-12'>\r\n<h2>Database Tables<a title='Link to this heading' class='link-header' href='/step-by-step-guide/project-creation#databasetables'><i class='fa fa-link'></i></a></h2>\r\n\r\n<strong>Main Database</strong>\r\n<p class='showHideElement' >The main database contains all the default tables which are necessary for fulfuling the basic functionalties like authorization and authentication, application objects, localization and globalization etc.. </p>\r\n</div></div>\r\n<div class='row page-section' id= 'applicationobjects'>\r\n<div class='col-lg-12'>\r\n<h2>Application Objects<a title='Link to this heading' class='link-header' href='/step-by-step-guide/project-creation#applicationobjects'><i class='fa fa-link'></i></a></h2>\r\n\r\n</div></div>\r\n<div class=\"row page-section\" id=\"githubissues\">\r\n<div class=\"col-lg-12\">\r\n<div component=\"app-github-issue\"></div>\r\n</div>\r\n</div>\r\n<div component=\"app-contribution\"></div>\r\n"}