{"rightSidebarLinks":[{"id":"creating-tables","title":"Creating Tables","subLink":null},{"id":"creatingtableandviews","title":"Creating Table and Views","subLink":[]}],"title":"Creating Tables","description":"","validatorType":"decorators","validationTypeTitle":"Decorators","type":"simple","gitDocPath":"https://github.com/rxweb/rxweb.io/edit/master/docs/rx-web-core/tours-of-contoso-app/Beginner/creating-tables.md","category":"beginner","subCategory":null,"linkTitle":"overview","tabArray":{},"innerHtml":null,"htmlContent":"<div class='row page-section' id= 'creatingtableandviews'>\r\n<div class='col-lg-12'>\r\n<h2>Creating Table and Views<a title='Link to this heading' class='link-header' href='/beginner/overview#creatingtableandviews'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Tables are one of the most-used database objects where collection of related data is held in a table format within a SQL server database and designing a proper table is essential for any application (which is <span class='highlighted'>Contoso University</span> in our case), as the appropriate table structure plays a vital role. For read operations we use view,  this act as an intermediate between real tables schema & programmability.</p>\r\n<a class=\"redirect-link\">If you don't want to see the Table and View creation steps and would like to see the final SQL script. Not a problem! , you can fork it on Github</a>\r\n<img src='/assets/rxwebcore/Images/student-course.PNG' alt='Student And Course'>\r\n<ul class=\"bullet-list\">\r\n  <li>Standard Naming Conventions</li> \r\n  <li>Creating Database</li>\r\n  <li>Creating Course and Student Table</li>\r\n  <li>Create necessary views</li>\r\n</ul>\r\n<p class=\"step-title mt-5\">Standard Naming Convention</p>\r\n<p class='showHideElement' >Designing database tables by adopting a proper naming convention can easily help you and others to identify the purpose and usage of every table. A well-defined table name defines all the information about itsself, like type of object, work of object, what does it contain etc.</p>\r\n<ul class=\"bullet-list\">\r\n  <li>Table name should be in plural form as every table entity contain multiples records. For example: Students, Courses</li> \r\n  <li>Each table and column name should be in pascal case. PascalCase is a naming convention in which the first letter of each word in a compound word is capitalized. For example: StudentCourses</li>\r\n  <li>Each table must contain a single-column primary key, which should be an auto-increment column. It should be prefixed with the singular form of the table name. For example: StudentId, CourseId.</li>\r\n</ul>\r\n<p class=\"step-title mt-5\">Creating Database</p>\r\n<p class='showHideElement' >Before creating tables and views, we need to create the database (if its not created). Here i am creating a database named as HumanResourceDb & HumanResourceLogDb. The HumanResourceLogDb will be used for logging purpose, we will not create any table in this, But will create Courses and Students table in the HumanResourceDb.</p>\r\n<p class=\"step-title mt-5\">Creating Course and Student Table</p>\r\n<p class='showHideElement' >As previously mentioned, we are creating a <span class='highlighted'>Contoso University application</span>, <span class='highlighted'>Courses</span> and <span class='highlighted'>Students</span> table are a major part of this application. <span class='highlighted'>CREATE TABLE</span> keyword is used for creating a new table. The name of the table should be unique based on the data you are planning to store on a table.</p>\r\n<a class=\"redirect-link\">View Courses Table SQL Script</a>\r\n<br/>\r\n<button class=\"btn btn-default\">Download The Code</button>\r\n<div class='model-ts'><pre><code>\r\nCREATE TABLE dbo.Courses\r\n( \r\n  CourseId int NOT NULL IDENTITY(1,1) PRIMARY KEY,\r\n  CourseName [varchar](50) NOT NULL \r\n);\r\n</code></pre></div>\r\n<div class='model-ts'><pre><code>\r\nCREATE TABLE dbo.Students\r\n(\r\n   StudentId int NOT NULL IDENTITY(1,1) PRIMARY KEY,\r\n   StudentName [varchar](50) NOT NULL,\r\n   RollNumber int NOT NULL,\r\n   Age int NOT NULL,\r\n   Gender [varchar](10) NOT NULL,\r\n   EmailId [varchar](30) NOT NULL,\r\n   CourseId int FOREIGN KEY REFERENCES Courses(CourseId) );  \r\n);\r\n</code></pre></div>\r\n</div></div>\r\n"}