{
    "complete": {
        "notes": [],
        "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder,Validators, FormArray } from \"@angular/forms\"\r\nimport { RxwebValidators,RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-formbuilderconfiguration-complete',\r\n    templateUrl: './formbuilderconfiguration-complete.component.html'\r\n})\r\nexport class FormbuilderconfigurationCompleteComponent implements OnInit {\r\n    userInfoFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: RxFormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.userInfoFormGroup = this.formBuilder.group({\r\n          userName:['',Validators.required],\r\n          password:['',[Validators.required,Validators.min(5)]],\r\n          confirmPassword:['',RxwebValidators.compare({fieldName:'password'})],\r\n          address:{\r\n            areaName:''\r\n          },\r\n          hobbies:[\r\n          {\r\n            name:''\r\n          }]\r\n        });\r\n    }\r\n\r\n    getFormArray(){\r\n      let formarray = this.userInfoFormGroup.controls.hobbies as FormArray;\r\n      return formarray.controls;\r\n    }\r\n}",
        "html": "<div>\r\n    <form  [formGroup]=\"userInfoFormGroup\">\r\n      <div class=\"form-group\">\r\n        <label>User Name</label>\r\n        <input type=\"text\" formControlName=\"userName\" class=\"form-control\"  />\r\n  \r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label>Password</label>\r\n        <input type=\"text\" formControlName=\"password\" class=\"form-control\"  />\r\n  \r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label>ConfirmPassword</label>\r\n        <input type=\"text\" formControlName=\"confirmPassword\" class=\"form-control\"  />\r\n      \r\n      </div>\r\n      <div class=\"form-group\" [formGroup]=\"userInfoFormGroup.controls.address\">\r\n        <label>Address</label>\r\n        <input type=\"text\" formControlName=\"areaName\" class=\"form-control\"  />\r\n    \r\n      </div>\r\n      <div class=\"form-group\" [formGroup]=\"hobbyGroup\" *ngFor=\"let hobbyGroup of getFormArray()\">\r\n        <label>name</label>\r\n        <input type=\"text\" formControlName=\"name\" class=\"form-control\"  />\r\n    \r\n      </div>\r\n      <button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n    </form>\r\n  </div>\r\n  ",
        "model": null,
        "modelName": null,
        "json": {}
    },
    "add": {
        "notes": [],
        "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-formgroup-add',\r\n    templateUrl: './formgroup-add.component.html'\r\n})\r\nexport class FormgroupAddComponent implements OnInit {\r\n    userInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        this.userInfoFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n}\r\n",
        "html": "<div>\r\n    <form  [formGroup]=\"userInfoFormGroup\">\r\n      <div class=\"form-group\">\r\n        <label>User Name</label>\r\n        <input type=\"text\" formControlName=\"userName\" class=\"form-control\"  />\r\n  \r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label>Password</label>\r\n        <input type=\"text\" formControlName=\"password\" class=\"form-control\"  />\r\n  \r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label>ConfirmPassword</label>\r\n        <input type=\"text\" formControlName=\"confirmPassword\" class=\"form-control\"  />\r\n      \r\n      </div>\r\n      <div class=\"form-group\" [formGroup]=\"userInfoFormGroup.controls.address\">\r\n        <label>Address</label>\r\n        <input type=\"text\" formControlName=\"areaName\" class=\"form-control\"  />\r\n    \r\n      </div>\r\n      <div class=\"form-group\" [formGroup]=\"hobbyGroup\" *ngFor=\"let hobbyGroup of getFormArray()\">\r\n        <label>name</label>\r\n        <input type=\"text\" formControlName=\"name\" class=\"form-control\"  />\r\n    \r\n      </div>\r\n      <button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n    </form>\r\n  </div>\r\n  ",
        "model": "import {  required } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class User {\r\n\r\n\t@required() \r\n\tfirstName: string;\r\n\t\r\n\t@required()\r\n  lastName:string;\r\n}\r\n",
        "modelName": "user.model.ts",
        "json": {}
    },    
    "group": {
        "component": "group(groupObject: {\r\n        [key: string]: any;\r\n    }, validatorConfig?: FormBuilderConfiguration): FormGroup"
    },
    "formgroup":{
        "component":"export class UserComponent implements OnInit {\r\n    userInfoFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: RxFormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.userInfoFormGroup = this.formBuilder.group({\r\n          userName:['',Validators.required],\r\n          password:['',[Validators.required,Validators.min(5)]],\r\n          confirmPassword:['',RxwebValidators.compare({fieldName:'password'})],\r\n          address:{\r\n            areaName:''\r\n          },\r\n          hobbies:[\r\n          {\r\n            name:''\r\n          }]\r\n        });\r\n    }\r\n}"
    },
    "userobject":{"component":"{\r\n  \"firstName\":\"John\",\r\n  \"lastName\":\"Cena\"\r\n}"},
    "dynamicvalidationrules":{"component":"{\r\n  \"firstName\":{\r\n    \"required\":true\r\n  },\r\n  \"lastName\":{\r\n    \"required\":true\r\n  }\r\n}"},
    "servervalidationrules":{"component":"  this.userInfoFormGroup = this.formBuilder.group({\r\n          firstName:'',\r\n          lastName:''\r\n        },{\r\n          dynamicValidation:{\r\n            \"firstName\":{\r\n              \"required\":true\r\n            },\r\n            \"lastName\":{\r\n              \"required\":true\r\n            }\r\n          }\r\n        });"},
    "validationapproach":{"component":"import { required } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n  @required()\r\n  firstName:string;\r\n\r\n  @required()\r\n  lastName:string;\r\n\r\n}"},
    "addcomponent":{"component":"this.userInfoFormGroup = this.formBuilder.formGroup(User);"},
    "modelinstance":{"component":"this.user = new User();\r\nthis.userInforFormGroup = this.formBuilder.formGroup(this.user);"},
    "serverdata":{"component":"let jObject = {\"firstName\":\"John\",\"lastName\":\"Cena\"};\r\nthis.userInfoFormGroup = this.formBuilder.formGroup(User,jObject);"}
  
}