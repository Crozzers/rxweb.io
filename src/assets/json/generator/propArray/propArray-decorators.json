{
    "add": {
        "notes": null,
        "component": "import { Component, OnInit } from '@angular\/core';\r\nimport { FormGroup,FormArray } from \"@angular\/forms\"\r\n\r\nimport { RxFormBuilder } from '@rxweb\/reactive-form-validators';\r\n\r\nimport { User,Address } from '.\/propArray.model';\r\n\r\n@Component({\r\n    selector: 'app-propArray-add',\r\n    templateUrl: '.\/prop-array-add.component.html'\r\n})\r\nexport class PropArrayAddComponent implements OnInit {\r\n\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        user.addresses = new Array<Address>();\r\n        let address = new Address();\r\n        user.addresses.push(address);\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n        }\r\n\r\n    addAddress(){\r\n      let addresses = this.userFormGroup.controls.addresses as FormArray;\r\n      addresses.push(this.formBuilder.formGroup(Address));\r\n    }\r\n\r\n    onSubmit(){\r\n    }\r\n}\r\n",
        "html": "<form *ngIf=\"userFormGroup\" [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n        <label>Email Address<\/label>\r\n        <input type=\"text\" formControlName=\"emailAddress\" class=\"form-control\" \/>\r\n    <\/div>\r\n    <button class=\"btn btn-primary\" (click)=\"addAddress()\">Add Address<\/button>\r\n    <table class=\"table\">\r\n        <thead>\r\n            <tr>\r\n                <th scope=\"col\">#<\/th>\r\n                <th scope=\"col\">City Name<\/th>\r\n                <th scope=\"col\">Country Name<\/th>\r\n\r\n            <\/tr>\r\n        <\/thead>\r\n        <tbody>\r\n            <tr [formGroup]=\"address\" *ngFor=\"let address of userFormGroup.controls.addresses.controls; let i = index\">\r\n                <th scope=\"row\">{{i + 1}}<\/th>\r\n                <td><input type=\"text\" formControlName=\"city\" class=\"form-control\" \/>\r\n                <\/td>\r\n                <td><input type=\"text\" formControlName=\"country\" class=\"form-control\" \/>\r\n                <\/td>\r\n            <\/tr>\r\n        <\/tbody>\r\n    <\/table>\r\n    <button (click)=\"onSubmit()\" [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit<\/button>\r\n<\/form>",
        "model": "import { prop, propArray } from \"@rxweb\/reactive-form-validators\"\r\n\r\nexport class Address {\r\n  @prop()\r\n  city: string;\r\n\r\n  @prop()\r\n  country: string;\r\n}\r\n\r\nexport class User {\r\n\r\n  @prop()\r\n  emailAddress: string;\r\n\r\n  @propArray(Address)\r\n  addresses: Address[];\r\n}\r\n",
        "modelName": "propArray.model.ts",
        "jsonName": null,
        "json": null
    },
    "server":
    {
        "notes": null,
        "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,FormArray } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder, FormBuilderConfiguration } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User,Address } from './propArray.model';\r\n\r\n@Component({\r\n    selector: 'app-propArray-server',\r\n    templateUrl: './prop-array-server-component.html'\r\n})\r\nexport class PropArrayServerComponent implements OnInit {\r\n\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        user.addresses = new Array<Address>();\r\n        let address = new Address();\r\n        user.addresses.push(address);\r\n        let formBuilderConfiguration = new FormBuilderConfiguration();\r\n        let userData = {\r\n            City:'Ahmedabad',\r\n            Country:'India',\r\n            email_Address:'bharat.patel@gmail.com',\r\n        };\r\n        formBuilderConfiguration.dynamicValidation = JSON.parse(JSON.stringify(userData));\r\n        this.userFormGroup = this.formBuilder.formGroup(user,formBuilderConfiguration);\r\n        }\r\n\r\n    addAddress(){\r\n      let addresses = this.userFormGroup.controls.addresses as FormArray;\r\n      addresses.push(this.formBuilder.formGroup(Address));\r\n    }\r\n\r\n    onSubmit(){\r\n    }\r\n}",
        "html": "<form *ngIf=\"userFormGroup\" [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n        <label>Email Address<\/label>\r\n        <input type=\"text\" formControlName=\"emailAddress\" class=\"form-control\" \/>\r\n    <\/div>\r\n    <button class=\"btn btn-primary\" (click)=\"addAddress()\">Add Address<\/button>\r\n    <table class=\"table\">\r\n        <thead>\r\n            <tr>\r\n                <th scope=\"col\">#<\/th>\r\n                <th scope=\"col\">City Name<\/th>\r\n                <th scope=\"col\">Country Name<\/th>\r\n\r\n            <\/tr>\r\n        <\/thead>\r\n        <tbody>\r\n            <tr [formGroup]=\"address\" *ngFor=\"let address of userFormGroup.controls.addresses.controls; let i = index\">\r\n                <th scope=\"row\">{{i + 1}}<\/th>\r\n                <td><input type=\"text\" formControlName=\"city\" class=\"form-control\" \/>\r\n                <\/td>\r\n                <td><input type=\"text\" formControlName=\"country\" class=\"form-control\" \/>\r\n                <\/td>\r\n            <\/tr>\r\n        <\/tbody>\r\n    <\/table>\r\n    <button (click)=\"onSubmit()\" [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit<\/button>\r\n<\/form>",
        "model": "import { prop, propArray } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class Address {\r\n  @prop({name:'City'})\r\n  city: string;\r\n\r\n  @prop({name:'Country'})\r\n  country: string;\r\n}\r\n\r\nexport class User {\r\n\r\n  @prop({name:'email_address'})\r\n  emailAddress: string;\r\n  \r\n  @propArray(Address)\r\n  addresses: Address[];\r\n}\r\n",
        "modelName": "propArray.model.ts",
        "jsonName": null,
        "json": null
    },
    "default":{
        "notes": null,
        "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,FormArray } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User,Address } from './propArray.model';\r\n\r\n@Component({\r\n    selector: 'app-propArray-default',\r\n    templateUrl: './prop-array-default.component.html'\r\n})\r\nexport class PropArrayDefaultComponent implements OnInit {\r\n\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        user.addresses = new Array<Address>();\r\n        let address = new Address();\r\n        user.addresses.push(address);\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n        }\r\n\r\n    addAddress(){\r\n      let addresses = this.userFormGroup.controls.addresses as FormArray;\r\n      addresses.push(this.formBuilder.formGroup(Address));\r\n    }\r\n\r\n    onSubmit(){\r\n    }\r\n}\r\n",
        "html": "<form *ngIf=\"userFormGroup\" [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n        <label>Email Address<\/label>\r\n        <input type=\"text\" formControlName=\"emailAddress\" class=\"form-control\" \/>\r\n    <\/div>\r\n    <button class=\"btn btn-primary\" (click)=\"addAddress()\">Add Address<\/button>\r\n    <table class=\"table\">\r\n        <thead>\r\n            <tr>\r\n                <th scope=\"col\">#<\/th>\r\n                <th scope=\"col\">City Name<\/th>\r\n                <th scope=\"col\">Country Name<\/th>\r\n\r\n            <\/tr>\r\n        <\/thead>\r\n        <tbody>\r\n            <tr [formGroup]=\"address\" *ngFor=\"let address of userFormGroup.controls.addresses.controls; let i = index\">\r\n                <th scope=\"row\">{{i + 1}}<\/th>\r\n                <td><input type=\"text\" formControlName=\"city\" class=\"form-control\" \/>\r\n                <\/td>\r\n                <td><input type=\"text\" formControlName=\"country\" class=\"form-control\" \/>\r\n                <\/td>\r\n            <\/tr>\r\n        <\/tbody>\r\n    <\/table>\r\n    <button (click)=\"onSubmit()\" [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit<\/button>\r\n<\/form>",
        "model": "import { prop, propArray } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class Address {\r\n  @prop({defaultValue:'Ahmedabad'})\r\n  city: string;\r\n\r\n  @prop({defaultValue:'India'})\r\n  country: string;\r\n}\r\n\r\nexport class User {\r\n\r\n  @prop({defaultValue:'bharat.patel@gmail.com'})\r\n  emailAddress: string;\r\n  \r\n  @propArray(Address)\r\n  addresses: Address[];\r\n}",
        "modelName": "propArray.model.ts",
        "jsonName": null,
        "json": null
    },
    "entity":{
        "notes": null,
        "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormArray } from \"@angular/forms\";\r\nimport { RxFormBuilder, ResetFormType } from '@rxweb/reactive-form-validators';\r\nimport { User, Address, Telephone } from './propArray.model';\r\n\r\n@Component({\r\n    selector: 'app-propArray-entity',\r\n    templateUrl: './prop-array-entity.component.html'\r\n})\r\nexport class PropArrayEntityComponent implements OnInit {\r\n    contactType: string = \"Address\";\r\n    userFormGroup: FormGroup;\r\n    constructor(private formBuilder: RxFormBuilder) { }\r\n    ngOnInit() {\r\n        let user = new User();\r\n        user.contactType = \"Address\";\r\n        user.contacts = new Array<Address>();\r\n        user.contacts = new Array<Telephone>();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n\r\n    }\r\n    addAddress() {\r\n        let addresses = this.userFormGroup.controls.contacts as FormArray;\r\n        addresses.push(this.formBuilder.formGroup(Address));\r\n    }\r\n    addTelephone() {\r\n\r\n        let telephones = this.userFormGroup.controls.contacts as FormArray;\r\n        telephones.push(this.formBuilder.formGroup(Telephone));\r\n    }\r\n    changeValue(value: string) {\r\n\r\n        this.userFormGroup.reset();\r\n        let user = new User();\r\n        this.userFormGroup.controls.contactType.setValue(value);\r\n        user.contactType = value;\r\n        this.contactType = value;\r\n\r\n        if (this.userFormGroup.controls.contactType.value == \"Address\") {\r\n            user.contacts = new Array<Address>();\r\n            let address = new Address();\r\n            user.contacts.push(address);\r\n            this.userFormGroup = this.formBuilder.formGroup(user);\r\n        }\r\n        else {\r\n            user.contacts = new Array<Telephone>();\r\n            let contact = new Telephone();\r\n            user.contacts.push(contact);\r\n            this.userFormGroup = this.formBuilder.formGroup(user);\r\n        }\r\n    }\r\n}\r\n",
        "html": "<form *ngIf=\"userFormGroup\" [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <input type=\"radio\" value=\"Address\" formControlName=\"contactType\" (click)=\"changeValue($event.target.value)\">address\r\n      <input type=\"radio\" value=\"phone\" formControlName=\"contactType\" (click)=\"changeValue($event.target.value)\">phone\r\n      \r\n  </div>\r\n  \r\n   <button class=\"btn btn-primary\" *ngIf=\"userFormGroup.value.contactType == 'Address'\" (click)=\"addAddress()\">Add Address</button>\r\n      <table *ngIf=\"userFormGroup.value.contactType == 'Address'\" class=\"table\">\r\n          <thead>\r\n              <tr>\r\n                  <th scope=\"col\">#</th>\r\n                  <th scope=\"col\">City Name</th>\r\n                  <th scope=\"col\">Country Name</th>\r\n  \r\n              </tr>\r\n          </thead>\r\n          <tbody>\r\n              <tr [formGroup]=\"address\" *ngFor=\"let address of userFormGroup.controls.contacts.controls; let i = index\">\r\n                  <th scope=\"row\">{{i + 1}}</th>\r\n                  <td><input type=\"text\" formControlName=\"city\" class=\"form-control\" />\r\n                  </td>\r\n                  <td><input type=\"text\" formControlName=\"country\" class=\"form-control\" />\r\n                  </td>\r\n              </tr>\r\n          </tbody>\r\n      </table>\r\n  \r\n       <button class=\"btn btn-primary\" *ngIf=\"userFormGroup.value.contactType == 'phone'\" (click)=\"addTelephone()\">Add PhoneNumber</button>\r\n      <table *ngIf=\"userFormGroup.value.contactType == 'phone'\" class=\"table\">\r\n          <thead>\r\n              <tr>\r\n                  <th scope=\"col\">#</th>\r\n                  <th scope=\"col\">Mobile Number</th>\r\n              </tr>\r\n          </thead>\r\n          <tbody>\r\n              <tr [formGroup]=\"telephone\" *ngFor=\"let telephone of userFormGroup.controls.contacts.controls; let i = index\">\r\n                  <th scope=\"row\">{{i + 1}}</th>\r\n                  <td><input type=\"text\" formControlName=\"mobileNumber\" class=\"form-control\" />\r\n                  </td>\r\n              </tr>\r\n          </tbody>\r\n      </table>\r\n      <button (click)=\"onSubmit()\" [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button> \r\n  </form>",
        "model": "import {  required,disable,prop } from \"@rxweb/reactive-form-validators\"\r\nimport { AbstractControl } from \"@angular/forms\"\r\n\r\nimport { propArray } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class Address {\r\n  @prop()\r\n  city: string;\r\n\r\n  @prop()\r\n  country: string;\r\n}\r\nexport class Telephone {\r\n    @prop()\r\n    mobileNumber: number;\r\n}\r\nexport class User {\r\n\r\n  @prop()\r\n  contactType: string;\r\n\r\n   @propArray(undefined, { entityProvider: function () { return this.contactType == \"Address\" ? Address : Telephone } })\r\n    contacts: Telephone[] | Address[]\r\n}",
        "modelName": "propArray.model.ts",
        "jsonName": null,
        "json": null
    }
}