{"complete":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { Contact } from './contact.model';\r\n\r\n@Component({\r\n    selector: 'app-minLengthAsync-complete',\r\n    templateUrl: './min-length-async-complete.component.html'\r\n})\r\nexport class MinLengthAsyncCompleteComponent implements OnInit {\r\n    contactFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let contact = new Contact();\r\n        this.contactFormGroup = this.formBuilder.formGroup(contact);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"contactFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Country Name</label>\r\n      <input type=\"text\" formControlName=\"countryName\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"contactFormGroup.controls.countryName.errors\">{{contactFormGroup.controls.countryName.errors.minLengthAsync.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Mobile No.</label>\r\n      <input type=\"text\" formControlName=\"mobileNo\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Minimum length upto 10 characters.<br/></small>\r\n      <small class=\"form-text text-muted\">Shows message from ReactiveFormConfig.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"contactFormGroup.controls.mobileNo.errors\">{{contactFormGroup.controls.mobileNo.errors.minLengthAsync.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Land line No</label>\r\n      <input type=\"text\" formControlName=\"landLineNo\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Minimum length upto 8 characters.<br/></small>\r\n      <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"contactFormGroup.controls.landLineNo.errors\">{{contactFormGroup.controls.landLineNo.errors.minLengthAsync.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>State Name</label>\r\n      <input type=\"text\" formControlName=\"stateName\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows custom message based on message key<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"contactFormGroup.controls.stateName.errors\">{{contactFormGroup.controls.stateName.errors.minLengthMessageKey.message}}<br/></small>\t\t\r\n    </div>\r\n    <button [disabled]=\"!contactFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  minLengthAsync,prop, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class Contact {\r\n\r\n\t@prop()\r\n\tcountryName: string;\r\n\r\n\t@minLengthAsync({value:10 }) \r\n\tmobileNo: string;\r\n\t\r\n\t\r\n\t@minLengthAsync({value:8  ,message:'Minimum 8 characters are allowed' }) \r\n\tlandLineNo: string;\r\n\t\r\n\t\r\n\t@minLengthAsync({value:3  ,messageKey:'minLengthMessageKey' }) \r\n\tstateName: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"contact.model.ts","json":{}},"valueExample":{"notes":null,"component":null,"html":null,"model":"@minLengthAsync({value:10 }) \r\nmobileNo: string;\r\n","modelName":null,"json":{}},"value":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { Contact } from './contact.model';\r\n\r\n@Component({\r\n    selector: 'app-minLengthAsync-value',\r\n    templateUrl: './min-length-async-value.component.html'\r\n})\r\nexport class MinLengthAsyncValueComponent implements OnInit {\r\n    contactFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let contact = new Contact();\r\n        this.contactFormGroup = this.formBuilder.formGroup(contact);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"contactFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Mobile No.</label>\r\n      <input type=\"text\" formControlName=\"mobileNo\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Minimum length upto 10 characters.<br/></small>\r\n      <small class=\"form-text text-muted\">Shows message from ReactiveFormConfig.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"contactFormGroup.controls.mobileNo.errors\">{{contactFormGroup.controls.mobileNo.errors.minLengthAsync.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!contactFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  minLengthAsync, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class Contact {\r\n\r\n\t@minLengthAsync({value:10 }) \r\n\tmobileNo: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"contact.model.ts","json":{}},"messageExample":{"notes":null,"component":null,"html":null,"model":"@minLengthAsync({value:8  ,message:'Minimum 8 characters are allowed' }) \r\nlandLineNo: string;\r\n","modelName":null,"json":{}},"message":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { Contact } from './contact.model';\r\n\r\n@Component({\r\n    selector: 'app-minLengthAsync-message',\r\n    templateUrl: './min-length-async-message.component.html'\r\n})\r\nexport class MinLengthAsyncMessageComponent implements OnInit {\r\n    contactFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let contact = new Contact();\r\n        this.contactFormGroup = this.formBuilder.formGroup(contact);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"contactFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Land line No</label>\r\n      <input type=\"text\" formControlName=\"landLineNo\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Minimum length upto 8 characters.<br/></small>\r\n      <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"contactFormGroup.controls.landLineNo.errors\">{{contactFormGroup.controls.landLineNo.errors.minLengthAsync.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!contactFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  minLengthAsync, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class Contact {\r\n\r\n\t@minLengthAsync({value:8  ,message:'Minimum 8 characters are allowed' }) \r\n\tlandLineNo: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"contact.model.ts","json":{}},"messageKeyExample":{"notes":null,"component":null,"html":null,"model":"@minLengthAsync({value:3  ,messageKey:'minLengthMessageKey' }) \r\nstateName: string;\r\n","modelName":null,"json":{}},"messageKey":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { Contact } from './contact.model';\r\n\r\n@Component({\r\n    selector: 'app-minLengthAsync-messageKey',\r\n    templateUrl: './min-length-async-message-key.component.html'\r\n})\r\nexport class MinLengthAsyncMessageKeyComponent implements OnInit {\r\n    contactFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let contact = new Contact();\r\n        this.contactFormGroup = this.formBuilder.formGroup(contact);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"contactFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>State Name</label>\r\n      <input type=\"text\" formControlName=\"stateName\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows custom message based on message key<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"contactFormGroup.controls.stateName.errors\">{{contactFormGroup.controls.stateName.errors.minLengthMessageKey.message}}<br/></small>\t\t\r\n    </div>\r\n    <button [disabled]=\"!contactFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  minLengthAsync, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class Contact {\r\n\r\n\t@minLengthAsync({value:3  ,messageKey:'minLengthMessageKey' }) \r\n\tstateName: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"contact.model.ts","json":{}},"dynamic":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\nimport { FormBuilderConfiguration,} from '@rxweb/reactive-form-validators';\r\n\r\nimport { Contact } from './contact.model';\r\n\r\n@Component({\r\n    selector: 'app-minLengthAsync-dynamic',\r\n    templateUrl: './min-length-async-dynamic.component.html'\r\n})\r\nexport class MinLengthAsyncDynamicComponent implements OnInit {\r\n    contactFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder,private http: HttpClient    ) { }\r\n\r\n    ngOnInit() {\r\n        let contact = new Contact();\r\n        let formBuilderConfiguration = new FormBuilderConfiguration();\r\n\t\tthis.http.get('assets/examples/reactive-form-validators/decorators/minLengthAsync/dynamic/dynamic.json?v=' + environment.appVersion).subscribe(dynamic => {\r\n            formBuilderConfiguration.dynamicValidation = JSON.parse(JSON.stringify(dynamic));\r\n\t\t\tthis.contactFormGroup = this.formBuilder.formGroup(contact,formBuilderConfiguration);\r\n        })\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  *ngIf=\"contactFormGroup\"  [formGroup]=\"contactFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Country Name</label>\r\n      <input type=\"text\" formControlName=\"countryName\" class=\"form-control\"   />\r\n      <small class=\"form-text text-danger\" *ngIf=\"contactFormGroup.controls.countryName.errors\">{{contactFormGroup.controls.countryName.errors.minLengthAsync.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Mobile No.</label>\r\n      <input type=\"text\" formControlName=\"mobileNo\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Minimum length upto 10 characters.<br/></small>\r\n      <small class=\"form-text text-muted\">Shows message from ReactiveFormConfig.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"contactFormGroup.controls.mobileNo.errors\">{{contactFormGroup.controls.mobileNo.errors.minLengthAsync.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Land line No</label>\r\n      <input type=\"text\" formControlName=\"landLineNo\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Minimum length upto 8 characters.<br/></small>\r\n      <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"contactFormGroup.controls.landLineNo.errors\">{{contactFormGroup.controls.landLineNo.errors.minLengthAsync.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>State Name</label>\r\n      <input type=\"text\" formControlName=\"stateName\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows custom message based on message key<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"contactFormGroup.controls.stateName.errors\">{{contactFormGroup.controls.stateName.errors.minLengthMessageKey.message}}<br/></small>\t\t\r\n    </div>\r\n    <button [disabled]=\"!contactFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  minLengthAsync,prop, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class Contact {\r\n\r\n\t@prop()\r\n\tcountryName: string;\r\n\r\n\t@prop()\r\n\tmobileNo: string;\r\n\r\n\t@prop()\r\n\tlandLineNo: string;\r\n\r\n\t@prop()\r\n\tstateName: string;\r\n\r\n}\r\n","modelName":"contact.model.ts","json":{"dynamic.json":"{\"countryName\":{},\"mobileNo\":{\"minLengthAsync\":{\"value\":\"10\"}},\"landLineNo\":{\"minLengthAsync\":{\"value\":\"8\",\"message\":\"Minimum 8 characters are allowed\"}},\"stateName\":{\"minLengthAsync\":{\"value\":\"3\",\"messageKey\":\"minLengthMessageKey\"}}}"}},"add":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { Contact } from './contact.model';\r\n\r\n@Component({\r\n    selector: 'app-minLengthAsync-add',\r\n    templateUrl: './min-length-async-add.component.html'\r\n})\r\nexport class MinLengthAsyncAddComponent implements OnInit {\r\n    contactFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let contact = new Contact();\r\n        this.contactFormGroup = this.formBuilder.formGroup(contact);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"contactFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Country Name</label>\r\n      <input type=\"text\" formControlName=\"countryName\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Minimum length upto 3 characters.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"contactFormGroup.controls.countryName.errors\">{{contactFormGroup.controls.countryName.errors.minLengthAsync.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!contactFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  minLengthAsync, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class Contact {\r\n\r\n\t@minLengthAsync({value:3 }) \r\n\tcountryName: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"contact.model.ts","json":{}},"edit":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { Contact } from './contact.model';\r\n\r\n@Component({\r\n    selector: 'app-minLengthAsync-edit',\r\n    templateUrl: './min-length-async-edit.component.html'\r\n})\r\nexport class MinLengthAsyncEditComponent implements OnInit {\r\n    contactFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder,private http: HttpClient    ) { }\r\n\r\n    ngOnInit() {\r\n        this.http.get('assets/examples/reactive-form-validators/decorators/minLengthAsync/edit/contact-data.json?v=' + environment.appVersion).subscribe(contact => {\r\n            this.contactFormGroup = this.formBuilder.formGroup<Contact>(Contact,contact);\r\n        })\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  *ngIf=\"contactFormGroup\"  [formGroup]=\"contactFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Country Name</label>\r\n      <input type=\"text\" formControlName=\"countryName\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Minimum length upto 3 characters.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"contactFormGroup.controls.countryName.errors\">{{contactFormGroup.controls.countryName.errors.minLengthAsync.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!contactFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  minLengthAsync, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class Contact {\r\n\r\n\t@minLengthAsync({value:3 }) \r\n\tcountryName: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"contact.model.ts","json":{"contact-data.json":"{\"countryName\":\"India\"}"}}}