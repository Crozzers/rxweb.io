{"rightSidebarLinks":[{"id":"component-content","title":"component-content","subLink":null},{"id":"languagecontentkeystable","title":"LanguageContentKeys Table","subLink":[]},{"id":"langaugecontentstable","title":"LangaugeContents Table","subLink":[]},{"id":"componentlanguagecontents","title":"ComponentLanguageContents","subLink":[]},{"id":"seealso","title":"See Also","subLink":[]}],"title":"Component Contents","description":"","validatorType":"validators","validationTypeTitle":"Validators","type":"simple","category":"rxwebcore","subCategory":"localization-and-globalization","linkTitle":"componentcontents","tabArray":{},"innerHtml":null,"htmlContent":"<p class='showHideElement' >On the user interface, when multiple components are involved, each of them requires component specific multilingual data based upon which text of placeholder, label etc are displayed. Considering a scenario where the Country entity has three components : List, Add and Edit and they required different component contents. Here is an example of how CountryAdd component data will be formed.</p>\r\n<div class='row page-section' id= 'languagecontentkeystable'>\r\n<div class='col-lg-12'>\r\n<h2>LanguageContentKeys Table<a title='Link to this heading' class='link-header'  href='/rxwebcore/componentcontents/decorators#languagecontentkeystable'><i class='fa fa-link'></i></a></h2>\r\n\r\n<table class=\"table table-bordered\">\r\n<tr><th>LanguageContentKeyId</th><th>KeyName</th><th>IsComponent</th></tr>\r\n<tr><td>1</td><td>CountryAddComponent</td><td>1</td></tr>\r\n</table>\r\n</div></div>\r\n<div class='row page-section' id= 'langaugecontentstable'>\r\n<div class='col-lg-12'>\r\n<h2>LangaugeContents Table<a title='Link to this heading' class='link-header'  href='/rxwebcore/componentcontents/decorators#langaugecontentstable'><i class='fa fa-link'></i></a></h2>\r\n\r\n<table class=\"table table-bordered\">\r\n<tr><th>LanguageContentId</th><th>LanguageContentKeyId</th><th>ContentType</th><th>En</th><th>Fr</th></tr>\r\n<tr><td>1</td><td>1</td><td>t</td><td>Allows Registration</td><td>Permet l'enregistrement</td></tr>\r\n</table>\r\n<blockquote class='showHideElement' ><p>Here contentType will denote the type of the content, here <span class='highlighted'>t</span> means text. For placeholder and label(p and l) respectively</p></blockquote>\r\n</div></div>\r\n<div class='row page-section' id= 'componentlanguagecontents'>\r\n<div class='col-lg-12'>\r\n<h2>ComponentLanguageContents<a title='Link to this heading' class='link-header'  href='/rxwebcore/componentcontents/decorators#componentlanguagecontents'><i class='fa fa-link'></i></a></h2>\r\n\r\n<table class=\"table table-bordered\">\r\n<tr><th>ComponentLanguageContentId</th><th>ComponentKeyId</th><th>LanguageContentId</th><th>En</th><th>Fr</th></tr>\r\n<tr><td>1</td><td>1</td><td>1</td><td>Allows Registration</td><td>Permet l'enregistrement</td></tr>\r\n</table>\r\n<p class='showHideElement' >The second step is to run the command : </p>\r\n<pre><code class='<span class='highlighted'>js'>\r\nrxwebcore --localization --main \r\n</code></pre>\r\n<p class='showHideElement' >This will create </span>.json<span class='highlighted'> file with en and fr json in wwwroot folder of the languagecontents.</p>\r\n<p class='showHideElement' >**AddCountryComponent-en.json** </p>\r\n<pre><code class='</span>js'>\r\n{\"AddCountryComponent_t\":\"Allows Registration\"}\r\n</code></pre>\r\n<p class='showHideElement' >**AddCountryComponent-fr.json** </p>\r\n<pre><code class='<span class='highlighted'>js'>\r\n{\"AddCountryComponent_t\":\"Permet l'enregistrement\"}\r\n</code></pre>\r\n<blockquote class='showHideElement' ><p>The users language will be stored in the Users table as a LanguageCode</p></blockquote>\r\n</div></div>\r\n<div class='row page-section' id= 'seealso'>\r\n<div class='col-lg-12'>\r\n<h2>See Also<a title='Link to this heading' class='link-header'  href='/rxwebcore/componentcontents/decorators#seealso'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Global Content</p>\r\n</div></div>\r\n"}