{"rightSidebarLinks":[{"id":"middleware","title":"middleware","subLink":null},{"id":"middleware","title":"Middleware","subLink":[]},{"id":"global","title":"Global","subLink":[]},{"id":"componentbased","title":"Component Based","subLink":[]}],"title":"middleware","description":"","validatorType":"template-driven","validationTypeTitle":"Template Driven Decorator","type":"simple","gitDocPath":"https://github.com/rxweb/rxweb.io/edit/master/docs/angular/routes/middleware.md","category":"router","subCategory":null,"linkTitle":"middleware","tabArray":{},"innerHtml":null,"htmlContent":"<div class='row page-section' id= 'middleware'>\r\n<div class='col-lg-12'>\r\n<h2>Middleware<a title='Link to this heading' class='link-header' href='/router/middleware/template-driven/decorators#middleware'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >The role of the middleware is to run in the front to make each request which is created by the router at a specific route, Using @rxweb it can be applied at global as well as component level. </p>\r\n</div></div>\r\n<div class='row page-section' id= 'global'>\r\n<div class='col-lg-12'>\r\n<h2>Global<a title='Link to this heading' class='link-header' href='/router/middleware/template-driven/decorators#global'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Global level middleware is set using the RxwebModule which contains a property of middleware where the specific middleware is passed. Whenever any request is made at the global level of the application this middleware is invoked. </p>\r\n<p class='showHideElement' >The below example describes a middleware used at the global level <span class='highlighted'>MessageMiddleware</span> which sends the message to multiple users at the same time</p>\r\n<div component=\"app-code\" key=\"middleware-router-component\"></div> \r\n<p class='showHideElement' >It is passed along with the middleware property of the RxwebModule </p>\r\n</div></div>\r\n<div class='row page-section' id= 'componentbased'>\r\n<div class='col-lg-12'>\r\n<h2>Component Based<a title='Link to this heading' class='link-header' href='/router/middleware/template-driven/decorators#componentbased'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Component specific middleware are applied using <span class='highlighted'>@middleware</span> decorator will is called whenever the route of the particular component is called.</p>\r\n<p class='showHideElement' >Using @middleware helps you to add middleware at the component level. Here is an example of using login middleware for the login component which  </p>\r\n<p class='showHideElement' >gets the anonymous web token generated. </p>\r\n<div component=\"app-code\" key=\"middleware-complete-model\"></div> \r\n<p class='showHideElement' >The second step is to pass the <span class='highlighted'>@middleware</span> decorator into the component as below </p>\r\n<div component=\"app-code\" key=\"middleware-complete-component\"></div> \r\n</div></div>\r\n"}