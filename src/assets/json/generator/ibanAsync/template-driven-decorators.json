{"rightSidebarLinks":[{"id":"ibanasync","title":"ibanAsync","subLink":null},{"id":"whentouse","title":"When to use","subLink":[]},{"id":"basicibanasyncvalidation","title":"Basic ibanAsync Validation","subLink":[]},{"id":"validatorconfig","title":"ValidatorConfig","subLink":[{"title":"message","id":"message","thirdLevelLink":[]},{"title":"messageKey","id":"messagekey","thirdLevelLink":[]}]},{"id":"completeibanasyncexample","title":"Complete ibanAsync Example","subLink":[]}],"title":"ibanAsync","description":"ibanAsync validation  template driven  will allow user to enter only the input in proper Hex Color format.","validatorType":"template-driven","validationTypeTitle":"Template Driven Decorator","type":"tabs","gitDocPath":"https://github.com/rxweb/rxweb.io/edit/master/docs/angular/reactive-forms/reactive-form-validators/async-validators/ibanAsync.md","category":"async-validators","subCategory":null,"linkTitle":"ibanAsync","tabArray":{"complete":[{"tabName":"Example","tabGroupContent":null,"content":"<div component=\"app-example-runner\" ref-component=\"app-ibanAsync-complete\"></div>\r\n"},{"tabName":"Model","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"ibanAsync-complete-model\"></div> \r\n"},{"tabName":"Component","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"ibanAsync-complete-component\"></div> \r\n"},{"tabName":"Html","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"ibanAsync-complete-html\"></div>\r\n"}]},"innerHtml":null,"htmlContent":"<div class=\"title-bar top_title\"><p>ibanAsync</p></div> <div class=\"title-bar\"><p>ibanAsync validation  template driven will validate an international bank account number based upon the country code.</p></div>\r\n<div class='row page-section' id= 'whentouse'>\r\n<div class='col-lg-12'>\r\n<h2 class='showHideElement' >When to use<a title='Link to this heading' class='link-header' href=''/async-validators/ibanAsync/template-driven/decorators#whentouse'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Suppose you want to create a User form, which contains fields like GBBankAccountNumber, BHBankAccountNumber, CHBankAccountNumber, CRBankAccountNumber and you want the user to enter valid international bank account number. Here depending upon the requirement these scenarios may arise.</p>\r\n<ol class='showHideElement'>\r\n    <li>Allow UK account number in GBBankAccountNumber field.</li>\r\n    <li>Adding Custom Message on CHBankAccountNumber field.</li>\r\n    <li>Shows the custom message on <span class='highlighted'>CRBankAccountNumber</span> field by using <span class='highlighted'>messageKey</span> property.</li>\r\n    <data-scope scope=\"['decorator','validator']\">\r\n    <li>Apply ibanAsync validation dynamically based on server rules.</li>\r\n    </data-scope>\r\n</ol>\r\n<p class='showHideElement' >Letâ€™s see how ibanAsync  template driven  fulfil the need.</p>\r\n</div></div>\r\n<div class='row page-section' id= 'basicibanasyncvalidation'>\r\n<div class='col-lg-12'>\r\n<h2>Basic ibanAsync Validation<a title='Link to this heading' class='link-header' href='/async-validators/ibanAsync/template-driven/decorators#basicibanasyncvalidation'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >First we need to create a User class and define a property of Color in the model to achieve the functional need of point 1.</p>\r\n<div component=\"app-code\" key=\"ibanAsync-add-model\"></div> \r\n<p class='showHideElement' >Through Angular FormBuilder service we create FormGroup in the component.</p>\r\n<p class='showHideElement' >Here we have covered Add form operations. </p>\r\n<div component=\"app-code\" key=\"ibanAsync-add-component\"></div> \r\n<p class='showHideElement' >Next, we need to write html code.</p>\r\n<div component=\"app-code\" key=\"ibanAsync-add-html\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-ibanAsync-add\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'validatorconfig'>\r\n<div class='col-lg-12'>\r\n<h2>ValidatorConfig<a title='Link to this heading' class='link-header' href='/async-validators/ibanAsync/template-driven/decorators#validatorconfig'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type : <span class='highlighted'>Observable</span></p>\r\n<p class='showHideElement' >validator config is used to dynamically resolve the value of the property according to the server rules by using the keyword <span class='highlighted'>of</span> as below </p>\r\n<p class='showHideElement' >Below options are not mandatory to use in the <span class='highlighted'>ibanAsync</span> validation. If needed then use the below options.</p>\r\n<table class=\"table table-bordered table-striped showHideElement\">\r\n<tr><th>Option</th><th>Description</th></tr>\r\n<tr><td><a  title=\"message\">message</a></td><td>To override the global configuration message and set the custom error message on respective FormControl</td></tr>\r\n<tr><td><a (click)='scrollTo(\"#messageKey\")' title=\"messageKey\">messageKey</a></td><td>messageKey property of BaseConfig can be used when the user wants to show a different custom validation message on some of their fields. User can define a custom messageKey globally by defining it in ReactiveFormConfig and set it in the message property of the validation.</td></tr>\r\n</table>\r\n</div></div>\r\n<div class='row page-section' id= 'message'>\r\n<div class='col-lg-12'>\r\n<h2>message<a title='Link to this heading' class='link-header' href='/async-validators/ibanAsync/template-driven/decorators#message'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type :  <span class='highlighted'>string</span> </p>\r\n<p class='showHideElement' >To override the global configuration message and set the custom error message on respective FormControl</p>\r\n<div component=\"app-code\" key=\"ibanAsync-messageExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-ibanAsync-message\" title=\"ibanAsync template driven with message\" key=\"message\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'messagekey'>\r\n<div class='col-lg-12'>\r\n<h2>messageKey<a title='Link to this heading' class='link-header' href='/async-validators/ibanAsync/template-driven/decorators#messagekey'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type : <span class='highlighted'>string</span></p>\r\n<p class='showHideElement' >messageKey property of BaseConfig can be used when the user wants to show a different custom validation message on some of their fields. User can define a custom messageKey globally by defining it in ReactiveFormConfig and set it in the message property of the validation.</p>\r\n<div component=\"app-code\" key=\"ibanAsync-messageKeyExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-ibanAsync-messageKey\" title=\"ibanAsync template driven with messageKey\" key=\"messageKey\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'completeibanasyncexample'>\r\n<div class='col-lg-12'>\r\n<h2>Complete ibanAsync Example<a title='Link to this heading' class='link-header' href='/async-validators/ibanAsync/template-driven/decorators#completeibanasyncexample'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >This Complete ibanAsync example which includes all the HexColorConfig properties will fulfil the requirement of scenarios 1, 2, 3,4 and 5</p>\r\n<div component=\"app-tabs\" key=\"complete\"></div>\r\n</div></div>\r\n"}