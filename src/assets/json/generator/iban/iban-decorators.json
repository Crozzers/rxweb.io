{"complete":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-iban-complete',\r\n    templateUrl: './iban-complete.component.html'\r\n})\r\nexport class IbanCompleteComponent implements OnInit {\r\n    userInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let userInfo = new UserInfo();\r\n        this.userInfoFormGroup = this.formBuilder.formGroup(userInfo);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>GBBankAccountNumber</label>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.gBBankAccountNumber.errors\">{{userInfoFormGroup.controls.gBBankAccountNumber.errors.iban.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>BHBankAccountNumber</label>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.bHBankAccountNumber.errors\">{{userInfoFormGroup.controls.bHBankAccountNumber.errors.iban.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>BRBankAccountNumber</label>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.bRBankAccountNumber.errors\">{{userInfoFormGroup.controls.bRBankAccountNumber.errors.iban.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>CRBankAccountNumber</label>\r\n      <small class=\"form-text text-muted\">It shows custom message<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.cRBankAccountNumber.errors\">{{userInfoFormGroup.controls.cRBankAccountNumber.errors.iban.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>CHBankAccountNumber</label>\r\n      <small class=\"form-text text-muted\">custom message based on messageKey<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.cHBankAccountNumber.errors\">{{userInfoFormGroup.controls.cHBankAccountNumber.errors.ibanMessageKey.message}}<br/></small>\t\t\r\n    </div>\r\n    <button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  iban, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class UserInfo {\r\n\r\n\t@iban({countryCode:'US' }) \r\n\tgBBankAccountNumber: string;\r\n\t\r\n\t\r\n\t@iban({countryCode:'BH'  ,conditionalExpression:'x => x.gBBankAccountNumber == \"GB33BUKB20201555555555\"' }) \r\n\tbHBankAccountNumber: string;\r\n\t\r\n\t\r\n\t@iban({countryCode:'BR'  ,conditionalExpression:'(x,y) => x.bRBankAccountNumber == \"GB33BUKB20201555555555\"' }) \r\n\tbRBankAccountNumber: string;\r\n\t\r\n\t\r\n\t@iban({countryCode:'CR'  ,message:'You must enter a Costa Rica account number .' }) \r\n\tcRBankAccountNumber: string;\r\n\t\r\n\t\r\n\t@iban({messageKey:ibanMessageKey  ,countryCode:'CH' }) \r\n\tcHBankAccountNumber: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"user-info.model.ts","json":{}},"countryCodeExample":{"notes":null,"component":null,"html":null,"model":"@iban({countryCode:'US' }) \r\ngBBankAccountNumber: string;\r\n","modelName":null,"json":{}},"countryCode":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-iban-countryCode',\r\n    templateUrl: './iban-country-code.component.html'\r\n})\r\nexport class IbanCountryCodeComponent implements OnInit {\r\n    userInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let userInfo = new UserInfo();\r\n        this.userInfoFormGroup = this.formBuilder.formGroup(userInfo);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>GBBankAccountNumber</label>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.gBBankAccountNumber.errors\">{{userInfoFormGroup.controls.gBBankAccountNumber.errors.iban.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  iban, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class UserInfo {\r\n\r\n\t@iban({countryCode:'US' }) \r\n\tgBBankAccountNumber: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"user-info.model.ts","json":{}},"countryCodeExampleString":{"notes":null,"component":null,"html":null,"model":"@iban({countryCode:'BH'  ,conditionalExpression:'x => x.gBBankAccountNumber == \"GB33BUKB20201555555555\"' }) \r\nbHBankAccountNumber: string;\r\n","modelName":null,"json":{}},"conditionalExpressionExampleString":{"notes":null,"component":null,"html":null,"model":"@iban({countryCode:'BH'  ,conditionalExpression:'x => x.gBBankAccountNumber == \"GB33BUKB20201555555555\"' }) \r\nbHBankAccountNumber: string;\r\n","modelName":null,"json":{}},"countryCodeExampleFunction":{"notes":null,"component":null,"html":null,"model":"@iban({countryCode:'BR'  ,conditionalExpression:'(x,y) => x.bRBankAccountNumber == \"GB33BUKB20201555555555\"' }) \r\nbRBankAccountNumber: string;\r\n","modelName":null,"json":{}},"conditionalExpressionExampleFunction":{"notes":null,"component":null,"html":null,"model":"@iban({countryCode:'BR'  ,conditionalExpression:'(x,y) => x.bRBankAccountNumber == \"GB33BUKB20201555555555\"' }) \r\nbRBankAccountNumber: string;\r\n","modelName":null,"json":{}},"conditionalExpression":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-iban-conditionalExpression',\r\n    templateUrl: './iban-conditional-expression.component.html'\r\n})\r\nexport class IbanConditionalExpressionComponent implements OnInit {\r\n    userInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let userInfo = new UserInfo();\r\n        this.userInfoFormGroup = this.formBuilder.formGroup(userInfo);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>BHBankAccountNumber</label>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.bHBankAccountNumber.errors\">{{userInfoFormGroup.controls.bHBankAccountNumber.errors.iban.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>BRBankAccountNumber</label>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.bRBankAccountNumber.errors\">{{userInfoFormGroup.controls.bRBankAccountNumber.errors.iban.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  iban, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class UserInfo {\r\n\r\n\t@iban({countryCode:'BH'  ,conditionalExpression:'x => x.gBBankAccountNumber == \"GB33BUKB20201555555555\"' }) \r\n\tbHBankAccountNumber: string;\r\n\t\r\n\t\r\n\t@iban({countryCode:'BR'  ,conditionalExpression:'(x,y) => x.bRBankAccountNumber == \"GB33BUKB20201555555555\"' }) \r\n\tbRBankAccountNumber: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"user-info.model.ts","json":{}},"messageExample":{"notes":null,"component":null,"html":null,"model":"@iban({countryCode:'CR'  ,message:'You must enter a Costa Rica account number .' }) \r\ncRBankAccountNumber: string;\r\n","modelName":null,"json":{}},"message":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-iban-message',\r\n    templateUrl: './iban-message.component.html'\r\n})\r\nexport class IbanMessageComponent implements OnInit {\r\n    userInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let userInfo = new UserInfo();\r\n        this.userInfoFormGroup = this.formBuilder.formGroup(userInfo);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>CRBankAccountNumber</label>\r\n      <small class=\"form-text text-muted\">It shows custom message<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.cRBankAccountNumber.errors\">{{userInfoFormGroup.controls.cRBankAccountNumber.errors.iban.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  iban, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class UserInfo {\r\n\r\n\t@iban({countryCode:'CR'  ,message:'You must enter a Costa Rica account number .' }) \r\n\tcRBankAccountNumber: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"user-info.model.ts","json":{}},"messageKeyExample":{"notes":null,"component":null,"html":null,"model":"@iban({messageKey:ibanMessageKey  ,countryCode:'CH' }) \r\ncHBankAccountNumber: string;\r\n","modelName":null,"json":{}},"messageKey":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-iban-messageKey',\r\n    templateUrl: './iban-message-key.component.html'\r\n})\r\nexport class IbanMessageKeyComponent implements OnInit {\r\n    userInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let userInfo = new UserInfo();\r\n        this.userInfoFormGroup = this.formBuilder.formGroup(userInfo);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>CHBankAccountNumber</label>\r\n      <small class=\"form-text text-muted\">custom message based on messageKey<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.cHBankAccountNumber.errors\">{{userInfoFormGroup.controls.cHBankAccountNumber.errors.ibanMessageKey.message}}<br/></small>\t\t\r\n    </div>\r\n    <button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  iban, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class UserInfo {\r\n\r\n\t@iban({messageKey:ibanMessageKey  ,countryCode:'CH' }) \r\n\tcHBankAccountNumber: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"user-info.model.ts","json":{}},"dynamic":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\nimport { FormBuilderConfiguration,} from '@rxweb/reactive-form-validators';\r\n\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-iban-dynamic',\r\n    templateUrl: './iban-dynamic.component.html'\r\n})\r\nexport class IbanDynamicComponent implements OnInit {\r\n    userInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder,private http: HttpClient    ) { }\r\n\r\n    ngOnInit() {\r\n        let userInfo = new UserInfo();\r\n        let formBuilderConfiguration = new FormBuilderConfiguration();\r\n\t\tthis.http.get('assets/examples/reactive-form-validators/decorators/iban/dynamic/dynamic.json?v=' + environment.appVersion).subscribe(dynamic => {\r\n            formBuilderConfiguration.dynamicValidation = JSON.parse(JSON.stringify(dynamic));\r\n\t\t\tthis.userInfoFormGroup = this.formBuilder.formGroup(userInfo,formBuilderConfiguration);\r\n        })\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  *ngIf=\"userInfoFormGroup\"  [formGroup]=\"userInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>GBBankAccountNumber</label>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.gBBankAccountNumber.errors\">{{userInfoFormGroup.controls.gBBankAccountNumber.errors.iban.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>BHBankAccountNumber</label>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.bHBankAccountNumber.errors\">{{userInfoFormGroup.controls.bHBankAccountNumber.errors.iban.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>CRBankAccountNumber</label>\r\n      <small class=\"form-text text-muted\">It shows custom message<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.cRBankAccountNumber.errors\">{{userInfoFormGroup.controls.cRBankAccountNumber.errors.iban.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>CHBankAccountNumber</label>\r\n      <small class=\"form-text text-muted\">custom message based on messageKey<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.cHBankAccountNumber.errors\">{{userInfoFormGroup.controls.cHBankAccountNumber.errors.ibanMessageKey.message}}<br/></small>\t\t\r\n    </div>\r\n    <button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  iban,prop, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class UserInfo {\r\n\r\n\t@prop()\r\n\tgBBankAccountNumber: string;\r\n\r\n\t@prop()\r\n\tbHBankAccountNumber: string;\r\n\r\n\t@prop()\r\n\tcRBankAccountNumber: string;\r\n\r\n\t@prop()\r\n\tcHBankAccountNumber: string;\r\n\r\n}\r\n","modelName":"user-info.model.ts","json":{"dynamic.json":"{\"gBBankAccountNumber\":{\"iban\":{\"countryCode\":\"US\"}},\"bHBankAccountNumber\":{\"iban\":{\"countryCode\":\"BH\",\"conditionalExpression\":\"x => x.gBBankAccountNumber == \\\"GB33BUKB20201555555555\\\"\"}},\"cRBankAccountNumber\":{\"iban\":{\"countryCode\":\"CR\",\"message\":\"You must enter a Costa Rica account number .\"}},\"cHBankAccountNumber\":{\"iban\":{\"messageKey\":\"ibanMessageKey\",\"countryCode\":\"CH\"}}}"}}}