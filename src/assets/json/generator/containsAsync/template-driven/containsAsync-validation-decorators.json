{"complete":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-containsAsync-complete-template-driven-validation-decorators',\r\n    templateUrl: './contains-async-complete.component.html'\r\n})\r\nexport class ContainsAsyncCompleteTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\" [rxwebForm]=\"userForm\" [model]=\"user\">\r\n    <div class=\"form-group\">\r\n      <label>Email Address</label>\r\n\t    <input type=\"text\" name=\"emailAddress\" [(ngModel)]=\"user.emailAddress\"  class=\"form-control\" />\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.emailAddress?.errors\">{{userForm.controls?.emailAddress?.errors?.contains.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Other Email Address</label>\r\n\t    <input type=\"text\" name=\"otherEmailAddress\" [(ngModel)]=\"user.otherEmailAddress\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.otherEmailAddress?.errors\">{{userForm.controls?.otherEmailAddress?.errors?.contains.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Organization Email Address</label>\r\n\t    <input type=\"text\" name=\"organizationEmailAddress\" [(ngModel)]=\"user.organizationEmailAddress\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">custom message based on messageKey<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.organizationEmailAddress?.errors\">{{userForm.controls?.organizationEmailAddress?.errors?.contains.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  containsAsync, } from   \"@rxweb/reactive-form-validators\" \r\n\rimport { of } from \"rxjs\" \r\n\r\n   \r\n\r\nexport class User {\r\n\r\n\t@containsAsync({validatorConfig:of({value:'@gmail.com'})}) \r\n\temailAddress: string;\r\n\t\r\n\t\r\n\t@containsAsync({validatorConfig:of({value:'@gmail.com'  ,message:'Please enter valid gmailId'})}) \r\n\totherEmailAddress: string;\r\n\t\r\n\t\r\n\t@containsAsync({validatorConfig:of({value:'@gmail.com'  ,messageKey:'containsMessageKey'})}) \r\n\torganizationEmailAddress: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"user.model.ts","json":{}},"valueExample":{"notes":null,"component":null,"html":null,"model":"@containsAsync({validatorConfig:of({value:'@gmail.com'})}) \r\nemailAddress: string;\r\n","modelName":null,"json":{}},"value":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-containsAsync-value-template-driven-validation-decorators',\r\n    templateUrl: './contains-async-value.component.html'\r\n})\r\nexport class ContainsAsyncValueTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\" [rxwebForm]=\"userForm\" [model]=\"user\">\r\n    <div class=\"form-group\">\r\n      <label>Email Address</label>\r\n\t    <input type=\"text\" name=\"emailAddress\" [(ngModel)]=\"user.emailAddress\"  class=\"form-control\" />\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.emailAddress?.errors\">{{userForm.controls?.emailAddress?.errors?.contains.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  containsAsync, } from   \"@rxweb/reactive-form-validators\" \r\n\rimport { of } from \"rxjs\" \r\n\r\n   \r\n\r\nexport class User {\r\n\r\n\t@containsAsync({validatorConfig:of({value:'@gmail.com'})}) \r\n\temailAddress: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"user.model.ts","json":{}},"messageExample":{"notes":null,"component":null,"html":null,"model":"@containsAsync({validatorConfig:of({value:'@gmail.com'  ,message:'Please enter valid gmailId'})}) \r\notherEmailAddress: string;\r\n","modelName":null,"json":{}},"message":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-containsAsync-message-template-driven-validation-decorators',\r\n    templateUrl: './contains-async-message.component.html'\r\n})\r\nexport class ContainsAsyncMessageTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\" [rxwebForm]=\"userForm\" [model]=\"user\">\r\n    <div class=\"form-group\">\r\n      <label>Other Email Address</label>\r\n\t    <input type=\"text\" name=\"otherEmailAddress\" [(ngModel)]=\"user.otherEmailAddress\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.otherEmailAddress?.errors\">{{userForm.controls?.otherEmailAddress?.errors?.contains.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  containsAsync, } from   \"@rxweb/reactive-form-validators\" \r\n\rimport { of } from \"rxjs\" \r\n\r\n   \r\n\r\nexport class User {\r\n\r\n\t@containsAsync({validatorConfig:of({value:'@gmail.com'  ,message:'Please enter valid gmailId'})}) \r\n\totherEmailAddress: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"user.model.ts","json":{}},"messageKeyExample":{"notes":null,"component":null,"html":null,"model":"@containsAsync({validatorConfig:of({value:'@gmail.com'  ,messageKey:'containsMessageKey'})}) \r\norganizationEmailAddress: string;\r\n","modelName":null,"json":{}},"messageKey":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-containsAsync-messageKey-template-driven-validation-decorators',\r\n    templateUrl: './contains-async-message-key.component.html'\r\n})\r\nexport class ContainsAsyncMessageKeyTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\" [rxwebForm]=\"userForm\" [model]=\"user\">\r\n    <div class=\"form-group\">\r\n      <label>Organization Email Address</label>\r\n\t    <input type=\"text\" name=\"organizationEmailAddress\" [(ngModel)]=\"user.organizationEmailAddress\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">custom message based on messageKey<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.organizationEmailAddress?.errors\">{{userForm.controls?.organizationEmailAddress?.errors?.contains.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  containsAsync, } from   \"@rxweb/reactive-form-validators\" \r\n\rimport { of } from \"rxjs\" \r\n\r\n   \r\n\r\nexport class User {\r\n\r\n\t@containsAsync({validatorConfig:of({value:'@gmail.com'  ,messageKey:'containsMessageKey'})}) \r\n\torganizationEmailAddress: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"user.model.ts","json":{}},"add":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-containsAsync-add-template-driven-validation-decorators',\r\n    templateUrl: './contains-async-add.component.html'\r\n})\r\nexport class ContainsAsyncAddTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\" [rxwebForm]=\"userForm\" [model]=\"user\">\r\n    <div class=\"form-group\">\r\n      <label>Email Address</label>\r\n\t    <input type=\"text\" name=\"emailAddress\" [(ngModel)]=\"user.emailAddress\"  class=\"form-control\" />\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.emailAddress?.errors\">{{userForm.controls?.emailAddress?.errors?.contains.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  containsAsync, } from   \"@rxweb/reactive-form-validators\" \r\n\rimport { of } from \"rxjs\" \r\n\r\n   \r\n\r\nexport class User {\r\n\r\n\t@containsAsync({validatorConfig:of({value:'@gmail.com'})}) \r\n\temailAddress: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"user.model.ts","json":{}}}