{"complete":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-containsAsync-complete',\r\n    templateUrl: './contains-async-complete.component.html'\r\n})\r\nexport class ContainsAsyncCompleteComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Email Address</label>\r\n      <input type=\"text\" formControlName=\"emailAddress\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.emailAddress.errors\">{{userFormGroup.controls.emailAddress.errors.containsAsync.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Other Email Address</label>\r\n      <input type=\"text\" formControlName=\"otherEmailAddress\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.otherEmailAddress.errors\">{{userFormGroup.controls.otherEmailAddress.errors.containsAsync.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Organization Email Address</label>\r\n      <input type=\"text\" formControlName=\"organizationEmailAddress\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">custom message based on messageKey<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.organizationEmailAddress.errors\">{{userFormGroup.controls.organizationEmailAddress.errors.containsMessageKey.message}}<br/></small>\t\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  containsAsync, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class User {\r\n\r\n\t@containsAsync({value:'@gmail.com' }) \r\n\temailAddress: string;\r\n\t\r\n\t\r\n\t@containsAsync({value:'@gmail.com'  ,message:'Please enter valid gmailId' }) \r\n\totherEmailAddress: string;\r\n\t\r\n\t\r\n\t@containsAsync({value:'@gmail.com'  ,messageKey:'containsMessageKey' }) \r\n\torganizationEmailAddress: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"user.model.ts","json":{}},"valueExample":{"notes":null,"component":null,"html":null,"model":"@containsAsync({value:'@gmail.com' }) \r\nemailAddress: string;\r\n","modelName":null,"json":{}},"value":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-containsAsync-value',\r\n    templateUrl: './contains-async-value.component.html'\r\n})\r\nexport class ContainsAsyncValueComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Email Address</label>\r\n      <input type=\"text\" formControlName=\"emailAddress\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.emailAddress.errors\">{{userFormGroup.controls.emailAddress.errors.containsAsync.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  containsAsync, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class User {\r\n\r\n\t@containsAsync({value:'@gmail.com' }) \r\n\temailAddress: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"user.model.ts","json":{}},"messageExample":{"notes":null,"component":null,"html":null,"model":"@containsAsync({value:'@gmail.com'  ,message:'Please enter valid gmailId' }) \r\notherEmailAddress: string;\r\n","modelName":null,"json":{}},"message":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-containsAsync-message',\r\n    templateUrl: './contains-async-message.component.html'\r\n})\r\nexport class ContainsAsyncMessageComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Other Email Address</label>\r\n      <input type=\"text\" formControlName=\"otherEmailAddress\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.otherEmailAddress.errors\">{{userFormGroup.controls.otherEmailAddress.errors.containsAsync.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  containsAsync, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class User {\r\n\r\n\t@containsAsync({value:'@gmail.com'  ,message:'Please enter valid gmailId' }) \r\n\totherEmailAddress: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"user.model.ts","json":{}},"messageKeyExample":{"notes":null,"component":null,"html":null,"model":"@containsAsync({value:'@gmail.com'  ,messageKey:'containsMessageKey' }) \r\norganizationEmailAddress: string;\r\n","modelName":null,"json":{}},"messageKey":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-containsAsync-messageKey',\r\n    templateUrl: './contains-async-message-key.component.html'\r\n})\r\nexport class ContainsAsyncMessageKeyComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Organization Email Address</label>\r\n      <input type=\"text\" formControlName=\"organizationEmailAddress\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">custom message based on messageKey<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.organizationEmailAddress.errors\">{{userFormGroup.controls.organizationEmailAddress.errors.containsMessageKey.message}}<br/></small>\t\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  containsAsync, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class User {\r\n\r\n\t@containsAsync({value:'@gmail.com'  ,messageKey:'containsMessageKey' }) \r\n\torganizationEmailAddress: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"user.model.ts","json":{}},"dynamic":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\nimport { FormBuilderConfiguration,} from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-containsAsync-dynamic',\r\n    templateUrl: './contains-async-dynamic.component.html'\r\n})\r\nexport class ContainsAsyncDynamicComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder,private http: HttpClient    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        let formBuilderConfiguration = new FormBuilderConfiguration();\r\n\t\tthis.http.get('assets/examples/reactive-form-validators/decorators/containsAsync/dynamic/dynamic.json?v=' + environment.appVersion).subscribe(dynamic => {\r\n            formBuilderConfiguration.dynamicValidation = JSON.parse(JSON.stringify(dynamic));\r\n\t\t\tthis.userFormGroup = this.formBuilder.formGroup(user,formBuilderConfiguration);\r\n        })\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  *ngIf=\"userFormGroup\"  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Email Address</label>\r\n      <input type=\"text\" formControlName=\"emailAddress\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.emailAddress.errors\">{{userFormGroup.controls.emailAddress.errors.containsAsync.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Other Email Address</label>\r\n      <input type=\"text\" formControlName=\"otherEmailAddress\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.otherEmailAddress.errors\">{{userFormGroup.controls.otherEmailAddress.errors.containsAsync.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Organization Email Address</label>\r\n      <input type=\"text\" formControlName=\"organizationEmailAddress\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">custom message based on messageKey<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.organizationEmailAddress.errors\">{{userFormGroup.controls.organizationEmailAddress.errors.containsMessageKey.message}}<br/></small>\t\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  containsAsync,prop, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class User {\r\n\r\n\t@prop()\r\n\temailAddress: string;\r\n\r\n\t@prop()\r\n\totherEmailAddress: string;\r\n\r\n\t@prop()\r\n\torganizationEmailAddress: string;\r\n\r\n}\r\n","modelName":"user.model.ts","json":{"dynamic.json":"{\"emailAddress\":{\"containsAsync\":{\"value\":\"@gmail.com\"}},\"otherEmailAddress\":{\"containsAsync\":{\"value\":\"@gmail.com\",\"message\":\"Please enter valid gmailId\"}},\"organizationEmailAddress\":{\"containsAsync\":{\"value\":\"@gmail.com\",\"messageKey\":\"containsMessageKey\"}}}"}},"add":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-containsAsync-add',\r\n    templateUrl: './contains-async-add.component.html'\r\n})\r\nexport class ContainsAsyncAddComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Email Address</label>\r\n      <input type=\"text\" formControlName=\"emailAddress\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.emailAddress.errors\">{{userFormGroup.controls.emailAddress.errors.containsAsync.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  containsAsync, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class User {\r\n\r\n\t@containsAsync({value:'@gmail.com' }) \r\n\temailAddress: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"user.model.ts","json":{}},"edit":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-containsAsync-edit',\r\n    templateUrl: './contains-async-edit.component.html'\r\n})\r\nexport class ContainsAsyncEditComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder,private http: HttpClient    ) { }\r\n\r\n    ngOnInit() {\r\n        this.http.get('assets/examples/reactive-form-validators/decorators/containsAsync/edit/user-data.json?v=' + environment.appVersion).subscribe(user => {\r\n            this.userFormGroup = this.formBuilder.formGroup<User>(User,user);\r\n        })\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  *ngIf=\"userFormGroup\"  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Email Address</label>\r\n      <input type=\"text\" formControlName=\"emailAddress\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.emailAddress.errors\">{{userFormGroup.controls.emailAddress.errors.containsAsync.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  containsAsync, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class User {\r\n\r\n\t@containsAsync({value:'@gmail.com' }) \r\n\temailAddress: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"user.model.ts","json":{"user-data.json":"{\"emailAddress\":\"john@gmail.com\"}"}}}