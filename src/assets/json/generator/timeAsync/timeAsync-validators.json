{"complete":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-timeAsync-complete-validator',\r\n    templateUrl: './time-async-complete.component.html'\r\n})\r\nexport class TimeAsyncCompleteValidatorComponent implements OnInit {\r\n    attandanceDetailFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.attandanceDetailFormGroup = this.formBuilder.group({\r\n            entryPlace:['',], \r\n            totalOutTime:['', RxwebValidators.timeAsync({allowSeconds:true })], \r\n            exitTime:['', RxwebValidators.timeAsync({message:'You can enter only time format data' })], \r\n            netInTime:['', RxwebValidators.timeAsync({messageKey:'timeMessageKey' })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"attandanceDetailFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Entry Place</label>\r\n      <input type=\"text\" formControlName=\"entryPlace\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.entryPlace.errors\">{{attandanceDetailFormGroup.controls.entryPlace.errors.timeAsync.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Total Time Out</label>\r\n      <input type=\"text\" formControlName=\"totalOutTime\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Allow seconds.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.totalOutTime.errors\">{{attandanceDetailFormGroup.controls.totalOutTime.errors.timeAsync.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Exit Time</label>\r\n      <input type=\"text\" formControlName=\"exitTime\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.exitTime.errors\">{{attandanceDetailFormGroup.controls.exitTime.errors.timeAsync.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Net-In Time</label>\r\n      <input type=\"text\" formControlName=\"netInTime\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message using message key<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.netInTime.errors\">{{attandanceDetailFormGroup.controls.netInTime.errors.timeMessageKey.message}}<br/></small>\t\t\r\n    </div>\r\n    <button [disabled]=\"!attandanceDetailFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"json":{}},"allowSecondsExample":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.timeAsync({allowSeconds:true });\r\n","modelName":null,"json":{}},"allowSeconds":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-timeAsync-allowSeconds-validator',\r\n    templateUrl: './time-async-allow-seconds.component.html'\r\n})\r\nexport class TimeAsyncAllowSecondsValidatorComponent implements OnInit {\r\n    attandanceDetailFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.attandanceDetailFormGroup = this.formBuilder.group({\r\n            totalOutTime:['', RxwebValidators.timeAsync({allowSeconds:true })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"attandanceDetailFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Total Time Out</label>\r\n      <input type=\"text\" formControlName=\"totalOutTime\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Allow seconds.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.totalOutTime.errors\">{{attandanceDetailFormGroup.controls.totalOutTime.errors.timeAsync.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!attandanceDetailFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"json":{}},"messageExample":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.timeAsync({message:'You can enter only time format data' });\r\n","modelName":null,"json":{}},"message":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-timeAsync-message-validator',\r\n    templateUrl: './time-async-message.component.html'\r\n})\r\nexport class TimeAsyncMessageValidatorComponent implements OnInit {\r\n    attandanceDetailFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.attandanceDetailFormGroup = this.formBuilder.group({\r\n            exitTime:['', RxwebValidators.timeAsync({message:'You can enter only time format data' })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"attandanceDetailFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Exit Time</label>\r\n      <input type=\"text\" formControlName=\"exitTime\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.exitTime.errors\">{{attandanceDetailFormGroup.controls.exitTime.errors.timeAsync.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!attandanceDetailFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"json":{}},"messageKeyExample":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.timeAsync({messageKey:'timeMessageKey' });\r\n","modelName":null,"json":{}},"messageKey":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-timeAsync-messageKey-validator',\r\n    templateUrl: './time-async-message-key.component.html'\r\n})\r\nexport class TimeAsyncMessageKeyValidatorComponent implements OnInit {\r\n    attandanceDetailFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.attandanceDetailFormGroup = this.formBuilder.group({\r\n            netInTime:['', RxwebValidators.timeAsync({messageKey:'timeMessageKey' })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"attandanceDetailFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Net-In Time</label>\r\n      <input type=\"text\" formControlName=\"netInTime\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message using message key<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.netInTime.errors\">{{attandanceDetailFormGroup.controls.netInTime.errors.timeMessageKey.message}}<br/></small>\t\t\r\n    </div>\r\n    <button [disabled]=\"!attandanceDetailFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"json":{}},"dynamic":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormBuilderConfiguration,RxFormBuilder} from '@rxweb/reactive-form-validators';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n    selector: 'app-timeAsync-dynamic-validator',\r\n    templateUrl: './time-async-dynamic.component.html'\r\n})\r\nexport class TimeAsyncDynamicValidatorComponent implements OnInit {\r\n    attandanceDetailFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: RxFormBuilder , private http: HttpClient )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n\t\tlet formBuilderConfiguration = new FormBuilderConfiguration();\r\n\t\tthis.http.get('assets/examples/reactive-form-validators/validators/timeAsync/dynamic/dynamic.json?v='+environment.appVersion).subscribe(dynamic => {\r\n\t\t\tformBuilderConfiguration.dynamicValidation = JSON.parse(JSON.stringify(dynamic));\r\n\t\t\tvar attandanceDetail = { entryPlace:'', totalOutTime:'', exitTime:'', netInTime:'',  }\r\n\t\t\tthis.attandanceDetailFormGroup = this.formBuilder.group(attandanceDetail,formBuilderConfiguration);\r\n\t\t})\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  *ngIf=\"attandanceDetailFormGroup\"  [formGroup]=\"attandanceDetailFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Entry Place</label>\r\n      <input type=\"text\" formControlName=\"entryPlace\" class=\"form-control\"   />\r\n      <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.entryPlace.errors\">{{attandanceDetailFormGroup.controls.entryPlace.errors.timeAsync.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Total Time Out</label>\r\n      <input type=\"text\" formControlName=\"totalOutTime\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Allow seconds.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.totalOutTime.errors\">{{attandanceDetailFormGroup.controls.totalOutTime.errors.timeAsync.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Exit Time</label>\r\n      <input type=\"text\" formControlName=\"exitTime\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.exitTime.errors\">{{attandanceDetailFormGroup.controls.exitTime.errors.timeAsync.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Net-In Time</label>\r\n      <input type=\"text\" formControlName=\"netInTime\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message using message key<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.netInTime.errors\">{{attandanceDetailFormGroup.controls.netInTime.errors.timeMessageKey.message}}<br/></small>\t\t\r\n    </div>\r\n    <button [disabled]=\"!attandanceDetailFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"json":{"dynamic.json":"{\"entryPlace\":{},\"totalOutTime\":{\"timeAsync\":{\"allowSeconds\":\"true\"}},\"exitTime\":{\"timeAsync\":{\"message\":\"You can enter only time format data\"}},\"netInTime\":{\"timeAsync\":{\"messageKey\":\"timeMessageKey\"}}}"}},"add":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-timeAsync-add-validator',\r\n    templateUrl: './time-async-add.component.html'\r\n})\r\nexport class TimeAsyncAddValidatorComponent implements OnInit {\r\n    attandanceDetailFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.attandanceDetailFormGroup = this.formBuilder.group({\r\n            entryTime:['', RxwebValidators.timeAsync()], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"attandanceDetailFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Entry Time</label>\r\n      <input type=\"text\" formControlName=\"entryTime\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.entryTime.errors\">{{attandanceDetailFormGroup.controls.entryTime.errors.timeAsync.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!attandanceDetailFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"json":{}}}