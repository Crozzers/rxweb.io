{"complete":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { AttandanceDetail } from './attandance-detail.model';\r\n\r\n@Component({\r\n    selector: 'app-timeAsync-complete',\r\n    templateUrl: './time-async-complete.component.html'\r\n})\r\nexport class TimeAsyncCompleteComponent implements OnInit {\r\n    attandanceDetailFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let attandanceDetail = new AttandanceDetail();\r\n        this.attandanceDetailFormGroup = this.formBuilder.formGroup(attandanceDetail);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"attandanceDetailFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Entry Place</label>\r\n      <input type=\"text\" formControlName=\"entryPlace\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.entryPlace.errors\">{{attandanceDetailFormGroup.controls.entryPlace.errors.time.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Total Time Out</label>\r\n      <input type=\"text\" formControlName=\"totalOutTime\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Allow seconds.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.totalOutTime.errors\">{{attandanceDetailFormGroup.controls.totalOutTime.errors.time.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Exit Time</label>\r\n      <input type=\"text\" formControlName=\"exitTime\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.exitTime.errors\">{{attandanceDetailFormGroup.controls.exitTime.errors.time.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Net-In Time</label>\r\n      <input type=\"text\" formControlName=\"netInTime\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message using message key<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.netInTime.errors\">{{attandanceDetailFormGroup.controls.netInTime.errors.timeMessageKey.message}}<br/></small>\t\t\r\n    </div>\r\n    <button [disabled]=\"!attandanceDetailFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  timeAsync,prop, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class AttandanceDetail {\r\n\r\n\t@prop()\r\n\tentryPlace: string;\r\n\r\n\t@timeAsync({validatorConfig:of({allowSeconds:true})}) \r\n\ttotalOutTime: string;\r\n\t\r\n\t\r\n\t@timeAsync({validatorConfig:of({message:'You can enter only time format data'})}) \r\n\texitTime: string;\r\n\t\r\n\t\r\n\t@timeAsync({validatorConfig:of({messageKey:'timeMessageKey'})}) \r\n\tnetInTime: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"attandance-detail.model.ts","json":{}},"allowSecondsExample":{"notes":null,"component":null,"html":null,"model":"@timeAsync({validatorConfig:of({allowSeconds:true})}) \r\ntotalOutTime: string;\r\n","modelName":null,"json":{}},"allowSeconds":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { AttandanceDetail } from './attandance-detail.model';\r\n\r\n@Component({\r\n    selector: 'app-timeAsync-allowSeconds',\r\n    templateUrl: './time-async-allow-seconds.component.html'\r\n})\r\nexport class TimeAsyncAllowSecondsComponent implements OnInit {\r\n    attandanceDetailFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let attandanceDetail = new AttandanceDetail();\r\n        this.attandanceDetailFormGroup = this.formBuilder.formGroup(attandanceDetail);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"attandanceDetailFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Total Time Out</label>\r\n      <input type=\"text\" formControlName=\"totalOutTime\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Allow seconds.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.totalOutTime.errors\">{{attandanceDetailFormGroup.controls.totalOutTime.errors.time.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!attandanceDetailFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  timeAsync, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class AttandanceDetail {\r\n\r\n\t@timeAsync({validatorConfig:of({allowSeconds:true})}) \r\n\ttotalOutTime: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"attandance-detail.model.ts","json":{}},"messageExample":{"notes":null,"component":null,"html":null,"model":"@timeAsync({validatorConfig:of({message:'You can enter only time format data'})}) \r\nexitTime: string;\r\n","modelName":null,"json":{}},"message":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { AttandanceDetail } from './attandance-detail.model';\r\n\r\n@Component({\r\n    selector: 'app-timeAsync-message',\r\n    templateUrl: './time-async-message.component.html'\r\n})\r\nexport class TimeAsyncMessageComponent implements OnInit {\r\n    attandanceDetailFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let attandanceDetail = new AttandanceDetail();\r\n        this.attandanceDetailFormGroup = this.formBuilder.formGroup(attandanceDetail);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"attandanceDetailFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Exit Time</label>\r\n      <input type=\"text\" formControlName=\"exitTime\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.exitTime.errors\">{{attandanceDetailFormGroup.controls.exitTime.errors.time.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!attandanceDetailFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  timeAsync, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class AttandanceDetail {\r\n\r\n\t@timeAsync({validatorConfig:of({message:'You can enter only time format data'})}) \r\n\texitTime: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"attandance-detail.model.ts","json":{}},"messageKeyExample":{"notes":null,"component":null,"html":null,"model":"@timeAsync({validatorConfig:of({messageKey:'timeMessageKey'})}) \r\nnetInTime: string;\r\n","modelName":null,"json":{}},"messageKey":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { AttandanceDetail } from './attandance-detail.model';\r\n\r\n@Component({\r\n    selector: 'app-timeAsync-messageKey',\r\n    templateUrl: './time-async-message-key.component.html'\r\n})\r\nexport class TimeAsyncMessageKeyComponent implements OnInit {\r\n    attandanceDetailFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let attandanceDetail = new AttandanceDetail();\r\n        this.attandanceDetailFormGroup = this.formBuilder.formGroup(attandanceDetail);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"attandanceDetailFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Net-In Time</label>\r\n      <input type=\"text\" formControlName=\"netInTime\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message using message key<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.netInTime.errors\">{{attandanceDetailFormGroup.controls.netInTime.errors.timeMessageKey.message}}<br/></small>\t\t\r\n    </div>\r\n    <button [disabled]=\"!attandanceDetailFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  timeAsync, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class AttandanceDetail {\r\n\r\n\t@timeAsync({validatorConfig:of({messageKey:'timeMessageKey'})}) \r\n\tnetInTime: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"attandance-detail.model.ts","json":{}},"dynamic":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\nimport { FormBuilderConfiguration,} from '@rxweb/reactive-form-validators';\r\n\r\nimport { AttandanceDetail } from './attandance-detail.model';\r\n\r\n@Component({\r\n    selector: 'app-timeAsync-dynamic',\r\n    templateUrl: './time-async-dynamic.component.html'\r\n})\r\nexport class TimeAsyncDynamicComponent implements OnInit {\r\n    attandanceDetailFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder,private http: HttpClient    ) { }\r\n\r\n    ngOnInit() {\r\n        let attandanceDetail = new AttandanceDetail();\r\n        let formBuilderConfiguration = new FormBuilderConfiguration();\r\n\t\tthis.http.get('assets/examples/reactive-form-validators/decorators/timeAsync/dynamic/dynamic.json?v=' + environment.appVersion).subscribe(dynamic => {\r\n            formBuilderConfiguration.dynamicValidation = JSON.parse(JSON.stringify(dynamic));\r\n\t\t\tthis.attandanceDetailFormGroup = this.formBuilder.formGroup(attandanceDetail,formBuilderConfiguration);\r\n       })})\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  *ngIf=\"attandanceDetailFormGroup\"  [formGroup]=\"attandanceDetailFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Entry Place</label>\r\n      <input type=\"text\" formControlName=\"entryPlace\" class=\"form-control\"   />\r\n      <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.entryPlace.errors\">{{attandanceDetailFormGroup.controls.entryPlace.errors.time.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Total Time Out</label>\r\n      <input type=\"text\" formControlName=\"totalOutTime\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Allow seconds.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.totalOutTime.errors\">{{attandanceDetailFormGroup.controls.totalOutTime.errors.time.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Exit Time</label>\r\n      <input type=\"text\" formControlName=\"exitTime\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.exitTime.errors\">{{attandanceDetailFormGroup.controls.exitTime.errors.time.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Net-In Time</label>\r\n      <input type=\"text\" formControlName=\"netInTime\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message using message key<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.netInTime.errors\">{{attandanceDetailFormGroup.controls.netInTime.errors.timeMessageKey.message}}<br/></small>\t\t\r\n    </div>\r\n    <button [disabled]=\"!attandanceDetailFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  timeAsync,prop, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class AttandanceDetail {\r\n\r\n\t@prop()\r\n\tentryPlace: string;\r\n\r\n\t@prop()\r\n\ttotalOutTime: string;\r\n\r\n\t@prop()\r\n\texitTime: string;\r\n\r\n\t@prop()\r\n\tnetInTime: string;\r\n\r\n}\r\n","modelName":"attandance-detail.model.ts","json":{"dynamic.json":"{\"entryPlace\":{},\"totalOutTime\":{\"timeAsync\":{\"allowSeconds\":\"true\"}},\"exitTime\":{\"timeAsync\":{\"message\":\"You can enter only time format data\"}},\"netInTime\":{\"timeAsync\":{\"messageKey\":\"timeMessageKey\"}}}"}},"add":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { AttandanceDetail } from './attandance-detail.model';\r\n\r\n@Component({\r\n    selector: 'app-timeAsync-add',\r\n    templateUrl: './time-async-add.component.html'\r\n})\r\nexport class TimeAsyncAddComponent implements OnInit {\r\n    attandanceDetailFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let attandanceDetail = new AttandanceDetail();\r\n        this.attandanceDetailFormGroup = this.formBuilder.formGroup(attandanceDetail);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"attandanceDetailFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Entry Time</label>\r\n      <input type=\"text\" formControlName=\"entryTime\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.entryTime.errors\">{{attandanceDetailFormGroup.controls.entryTime.errors.time.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!attandanceDetailFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  timeAsync, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class AttandanceDetail {\r\n\r\n\t@timeAsync() \r\n\tentryTime: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"attandance-detail.model.ts","json":{}},"edit":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { AttandanceDetail } from './attandance-detail.model';\r\n\r\n@Component({\r\n    selector: 'app-timeAsync-edit',\r\n    templateUrl: './time-async-edit.component.html'\r\n})\r\nexport class TimeAsyncEditComponent implements OnInit {\r\n    attandanceDetailFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder,private http: HttpClient    ) { }\r\n\r\n    ngOnInit() {\r\n        this.http.get('assets/examples/reactive-form-validators/decorators/timeAsync/edit/attandance-detail-data.json?v=' + environment.appVersion).subscribe(attandanceDetail => {\r\n            this.attandanceDetailFormGroup = this.formBuilder.formGroup<AttandanceDetail>(AttandanceDetail,attandanceDetail);\r\n       })})\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  *ngIf=\"attandanceDetailFormGroup\"  [formGroup]=\"attandanceDetailFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Entry Time</label>\r\n      <input type=\"text\" formControlName=\"entryTime\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.entryTime.errors\">{{attandanceDetailFormGroup.controls.entryTime.errors.time.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!attandanceDetailFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  timeAsync, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class AttandanceDetail {\r\n\r\n\t@timeAsync() \r\n\tentryTime: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"attandance-detail.model.ts","json":{"attandance-detail-data.json":"{\"entryTime\":\"10:11\"}"}}}