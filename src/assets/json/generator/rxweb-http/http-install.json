{
    "installation":"npm install @rxweb/http",
    "objectExample":"import { Component, OnInit } from '@angular/core';\r\nimport { HttpClientConfig,RxHttp,http } from \"@rxweb/http\"\r\nimport { AppDomain } from './base.component';\r\n\r\n\r\n@Component({\r\n    selector: 'app-methods-get',\r\n    templateUrl: './methods-get.component.html'\r\n})\r\n\r\nexport class MethodsGetComponent  implements OnInit {\r\n    http:RxHttp\r\n    result: any\r\n\r\n  constructor(){\r\n    this.http = new RxHttp();\r\n  }\r\n\r\n    ngOnInit() {\r\n    this.Get();\r\n    }\r\n\r\n    Get() {\r\n        this.http.get({path:'api/Get'}).subscribe(res => {\r\n            this.result = res;\r\n        })\r\n    }\r\n\r\n}\r\n",
    "http":"\r\nimport { Injectable } from \"@angular\/core\";\r\nimport { http, RxHttp } from \"@rxweb\/http\";\r\n\r\n@http({\r\n    hostKey: \"local\",\r\n    path: \"api\/Users\",\r\n})\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class UserService extends RxHttp  {\r\n   \r\n     constructor() {\r\n        super();\r\n       \r\n    }\r\n}\r\n\r\n",
    "httpClientConfig":"import { Component,OnInit } from '@angular/core';\r\nimport { ReactiveFormConfig } from '@rxweb/reactive-form-validators';\r\nimport {HttpClientConfig} from '@rxweb/http';\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n})\r\nexport class AppComponent implements OnInit {\r\n\r\n  ngOnInit(){\r\n       HttpClientConfig.register({\r\n            hostURIs: [{\r\n                name: 'local',\r\n                default: true,\r\n                uri: 'http://localhost:3004' //Your server side url here\r\n            }],\r\n            filters: [],\r\n            onError: (r) => { console.log(r) }        \r\n        })\r\n  }\r\n}",
    "getMethod":"@Component({\r\n    selector: 'app-user',\r\n    templateUrl: '.\/user-component.html'\r\n})\r\nexport class UserComponent  {\r\n  result:any;\r\n  constructor(private userService : UserService){}\r\n\r\n  getUser(){\r\n    this.userService.get<vUSer>().subscribe(res => {\r\n        this.result = res;\r\n    })\r\n  }\r\n}"
}