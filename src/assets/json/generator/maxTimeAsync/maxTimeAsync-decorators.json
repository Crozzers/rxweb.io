{"complete":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { AttandanceDetail } from './attandance-detail.model';\r\n\r\n@Component({\r\n    selector: 'app-maxTimeAsync-complete',\r\n    templateUrl: './max-time-async-complete.component.html'\r\n})\r\nexport class MaxTimeAsyncCompleteComponent implements OnInit {\r\n    attandanceDetailFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let attandanceDetail = new AttandanceDetail();\r\n        this.attandanceDetailFormGroup = this.formBuilder.formGroup(attandanceDetail);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"attandanceDetailFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Entry Place</label>\r\n      <input type=\"text\" formControlName=\"entryPlace\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.entryPlace.errors\">{{attandanceDetailFormGroup.controls.entryPlace.errors.maxTime.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Closing Time</label>\r\n      <input type=\"text\" formControlName=\"closingTime\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.closingTime.errors\">{{attandanceDetailFormGroup.controls.closingTime.errors.maxTime.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Break Hours</label>\r\n      <input type=\"text\" formControlName=\"breakHours\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Value should be less than 00:10<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.breakHours.errors\">{{attandanceDetailFormGroup.controls.breakHours.errors.maxTime.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Total Time Out</label>\r\n      <input type=\"text\" formControlName=\"totalOutTime\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This field allow seconds in input time.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.totalOutTime.errors\">{{attandanceDetailFormGroup.controls.totalOutTime.errors.maxTime.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Exit Time</label>\r\n      <input type=\"text\" formControlName=\"exitTime\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.exitTime.errors\">{{attandanceDetailFormGroup.controls.exitTime.errors.maxTime.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Net-In Time</label>\r\n      <input type=\"text\" formControlName=\"netInTime\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message using message key<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.netInTime.errors\">{{attandanceDetailFormGroup.controls.netInTime.errors.maxTimeMessageKey.message}}<br/></small>\t\t\r\n    </div>\r\n    <button [disabled]=\"!attandanceDetailFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  maxTimeAsync,prop, } from   \"@rxweb/reactive-form-validators\" \r\n\rimport { of } from \"rxjs\" \r\n\r\n   \r\n\r\nexport class AttandanceDetail {\r\n\r\n\t@prop()\r\n\tentryPlace: string;\r\n\r\n\t@maxTimeAsync({validatorConfig:of({value:'23:30'})}) \r\n\tclosingTime: string;\r\n\t\r\n\t\r\n\t@maxTimeAsync({validatorConfig:of({operator:'<'  ,value:'00:10'})}) \r\n\tbreakHours: string;\r\n\t\r\n\t\r\n\t@maxTimeAsync({validatorConfig:of({allowSeconds:true  ,value:'02:00:00'})}) \r\n\ttotalOutTime: string;\r\n\t\r\n\t\r\n\t@maxTimeAsync({validatorConfig:of({message:'You can enter only time format data'  ,fieldName:'closingTime'})}) \r\n\texitTime: string;\r\n\t\r\n\t\r\n\t@maxTimeAsync({validatorConfig:of({messageKey:'maxTimeMessageKey'  ,fieldName:'totalInTime'})}) \r\n\tnetInTime: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"attandance-detail.model.ts","json":{}},"valueExample":{"notes":null,"component":null,"html":null,"model":"@maxTimeAsync({validatorConfig:of({value:'23:30'})}) \r\nclosingTime: string;\r\n","modelName":null,"json":{}},"value":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { AttandanceDetail } from './attandance-detail.model';\r\n\r\n@Component({\r\n    selector: 'app-maxTimeAsync-value',\r\n    templateUrl: './max-time-async-value.component.html'\r\n})\r\nexport class MaxTimeAsyncValueComponent implements OnInit {\r\n    attandanceDetailFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let attandanceDetail = new AttandanceDetail();\r\n        this.attandanceDetailFormGroup = this.formBuilder.formGroup(attandanceDetail);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"attandanceDetailFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Closing Time</label>\r\n      <input type=\"text\" formControlName=\"closingTime\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.closingTime.errors\">{{attandanceDetailFormGroup.controls.closingTime.errors.maxTime.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!attandanceDetailFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  maxTimeAsync, } from   \"@rxweb/reactive-form-validators\" \r\n\rimport { of } from \"rxjs\" \r\n\r\n   \r\n\r\nexport class AttandanceDetail {\r\n\r\n\t@maxTimeAsync({validatorConfig:of({value:'23:30'})}) \r\n\tclosingTime: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"attandance-detail.model.ts","json":{}},"operatorExample":{"notes":null,"component":null,"html":null,"model":"@maxTimeAsync({validatorConfig:of({operator:'<'  ,value:'00:10'})}) \r\nbreakHours: string;\r\n","modelName":null,"json":{}},"operator":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { AttandanceDetail } from './attandance-detail.model';\r\n\r\n@Component({\r\n    selector: 'app-maxTimeAsync-operator',\r\n    templateUrl: './max-time-async-operator.component.html'\r\n})\r\nexport class MaxTimeAsyncOperatorComponent implements OnInit {\r\n    attandanceDetailFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let attandanceDetail = new AttandanceDetail();\r\n        this.attandanceDetailFormGroup = this.formBuilder.formGroup(attandanceDetail);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"attandanceDetailFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Break Hours</label>\r\n      <input type=\"text\" formControlName=\"breakHours\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Value should be less than 00:10<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.breakHours.errors\">{{attandanceDetailFormGroup.controls.breakHours.errors.maxTime.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!attandanceDetailFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  maxTimeAsync, } from   \"@rxweb/reactive-form-validators\" \r\n\rimport { of } from \"rxjs\" \r\n\r\n   \r\n\r\nexport class AttandanceDetail {\r\n\r\n\t@maxTimeAsync({validatorConfig:of({operator:'<'  ,value:'00:10'})}) \r\n\tbreakHours: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"attandance-detail.model.ts","json":{}},"allowSecondsExample":{"notes":null,"component":null,"html":null,"model":"@maxTimeAsync({validatorConfig:of({allowSeconds:true  ,value:'02:00:00'})}) \r\ntotalOutTime: string;\r\n","modelName":null,"json":{}},"allowSeconds":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { AttandanceDetail } from './attandance-detail.model';\r\n\r\n@Component({\r\n    selector: 'app-maxTimeAsync-allowSeconds',\r\n    templateUrl: './max-time-async-allow-seconds.component.html'\r\n})\r\nexport class MaxTimeAsyncAllowSecondsComponent implements OnInit {\r\n    attandanceDetailFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let attandanceDetail = new AttandanceDetail();\r\n        this.attandanceDetailFormGroup = this.formBuilder.formGroup(attandanceDetail);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"attandanceDetailFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Total Time Out</label>\r\n      <input type=\"text\" formControlName=\"totalOutTime\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This field allow seconds in input time.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.totalOutTime.errors\">{{attandanceDetailFormGroup.controls.totalOutTime.errors.maxTime.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!attandanceDetailFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  maxTimeAsync, } from   \"@rxweb/reactive-form-validators\" \r\n\rimport { of } from \"rxjs\" \r\n\r\n   \r\n\r\nexport class AttandanceDetail {\r\n\r\n\t@maxTimeAsync({validatorConfig:of({allowSeconds:true  ,value:'02:00:00'})}) \r\n\ttotalOutTime: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"attandance-detail.model.ts","json":{}},"messageExample":{"notes":null,"component":null,"html":null,"model":"@maxTimeAsync({validatorConfig:of({message:'You can enter only time format data'  ,fieldName:'closingTime'})}) \r\nexitTime: string;\r\n","modelName":null,"json":{}},"message":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { AttandanceDetail } from './attandance-detail.model';\r\n\r\n@Component({\r\n    selector: 'app-maxTimeAsync-message',\r\n    templateUrl: './max-time-async-message.component.html'\r\n})\r\nexport class MaxTimeAsyncMessageComponent implements OnInit {\r\n    attandanceDetailFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let attandanceDetail = new AttandanceDetail();\r\n        this.attandanceDetailFormGroup = this.formBuilder.formGroup(attandanceDetail);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"attandanceDetailFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Exit Time</label>\r\n      <input type=\"text\" formControlName=\"exitTime\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.exitTime.errors\">{{attandanceDetailFormGroup.controls.exitTime.errors.maxTime.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!attandanceDetailFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  maxTimeAsync, } from   \"@rxweb/reactive-form-validators\" \r\n\rimport { of } from \"rxjs\" \r\n\r\n   \r\n\r\nexport class AttandanceDetail {\r\n\r\n\t@maxTimeAsync({validatorConfig:of({message:'You can enter only time format data'  ,fieldName:'closingTime'})}) \r\n\texitTime: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"attandance-detail.model.ts","json":{}},"fieldNameExample":{"notes":null,"component":null,"html":null,"model":"@maxTimeAsync({validatorConfig:of({message:'You can enter only time format data'  ,fieldName:'closingTime'})}) \r\nexitTime: string;\r\n","modelName":null,"json":{}},"fieldName":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { AttandanceDetail } from './attandance-detail.model';\r\n\r\n@Component({\r\n    selector: 'app-maxTimeAsync-fieldName',\r\n    templateUrl: './max-time-async-field-name.component.html'\r\n})\r\nexport class MaxTimeAsyncFieldNameComponent implements OnInit {\r\n    attandanceDetailFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let attandanceDetail = new AttandanceDetail();\r\n        this.attandanceDetailFormGroup = this.formBuilder.formGroup(attandanceDetail);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"attandanceDetailFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Closing Time</label>\r\n      <input type=\"text\" formControlName=\"closingTime\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.closingTime.errors\">{{attandanceDetailFormGroup.controls.closingTime.errors.maxTime.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Exit Time</label>\r\n      <input type=\"text\" formControlName=\"exitTime\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.exitTime.errors\">{{attandanceDetailFormGroup.controls.exitTime.errors.maxTime.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!attandanceDetailFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  maxTimeAsync, } from   \"@rxweb/reactive-form-validators\" \r\n\rimport { of } from \"rxjs\" \r\n\r\n   \r\n\r\nexport class AttandanceDetail {\r\n\r\n\t@maxTimeAsync({validatorConfig:of({value:'23:30'})}) \r\n\tclosingTime: string;\r\n\t\r\n\t\r\n\t@maxTimeAsync({validatorConfig:of({message:'You can enter only time format data'  ,fieldName:'closingTime'})}) \r\n\texitTime: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"attandance-detail.model.ts","json":{}},"messageKeyExample":{"notes":null,"component":null,"html":null,"model":"@maxTimeAsync({validatorConfig:of({messageKey:'maxTimeMessageKey'  ,fieldName:'totalInTime'})}) \r\nnetInTime: string;\r\n","modelName":null,"json":{}},"messageKey":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { AttandanceDetail } from './attandance-detail.model';\r\n\r\n@Component({\r\n    selector: 'app-maxTimeAsync-messageKey',\r\n    templateUrl: './max-time-async-message-key.component.html'\r\n})\r\nexport class MaxTimeAsyncMessageKeyComponent implements OnInit {\r\n    attandanceDetailFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let attandanceDetail = new AttandanceDetail();\r\n        this.attandanceDetailFormGroup = this.formBuilder.formGroup(attandanceDetail);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"attandanceDetailFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Net-In Time</label>\r\n      <input type=\"text\" formControlName=\"netInTime\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message using message key<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.netInTime.errors\">{{attandanceDetailFormGroup.controls.netInTime.errors.maxTimeMessageKey.message}}<br/></small>\t\t\r\n    </div>\r\n    <button [disabled]=\"!attandanceDetailFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  maxTimeAsync, } from   \"@rxweb/reactive-form-validators\" \r\n\rimport { of } from \"rxjs\" \r\n\r\n   \r\n\r\nexport class AttandanceDetail {\r\n\r\n\t@maxTimeAsync({validatorConfig:of({messageKey:'maxTimeMessageKey'  ,fieldName:'totalInTime'})}) \r\n\tnetInTime: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"attandance-detail.model.ts","json":{}},"dynamic":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\nimport { FormBuilderConfiguration,} from '@rxweb/reactive-form-validators';\r\n\r\nimport { AttandanceDetail } from './attandance-detail.model';\r\n\r\n@Component({\r\n    selector: 'app-maxTimeAsync-dynamic',\r\n    templateUrl: './max-time-async-dynamic.component.html'\r\n})\r\nexport class MaxTimeAsyncDynamicComponent implements OnInit {\r\n    attandanceDetailFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder,private http: HttpClient    ) { }\r\n\r\n    ngOnInit() {\r\n        let attandanceDetail = new AttandanceDetail();\r\n        let formBuilderConfiguration = new FormBuilderConfiguration();\r\n\t\tthis.http.get('assets/examples/reactive-form-validators/decorators/maxTimeAsync/dynamic/dynamic.json?v=' + environment.appVersion).subscribe(dynamic => {\r\n            formBuilderConfiguration.dynamicValidation = JSON.parse(JSON.stringify(dynamic));\r\n\t\t\tthis.attandanceDetailFormGroup = this.formBuilder.formGroup(attandanceDetail,formBuilderConfiguration);\r\n       })})\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  *ngIf=\"attandanceDetailFormGroup\"  [formGroup]=\"attandanceDetailFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Entry Place</label>\r\n      <input type=\"text\" formControlName=\"entryPlace\" class=\"form-control\"   />\r\n      <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.entryPlace.errors\">{{attandanceDetailFormGroup.controls.entryPlace.errors.maxTime.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Closing Time</label>\r\n      <input type=\"text\" formControlName=\"closingTime\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.closingTime.errors\">{{attandanceDetailFormGroup.controls.closingTime.errors.maxTime.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Break Hours</label>\r\n      <input type=\"text\" formControlName=\"breakHours\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Value should be less than 00:10<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.breakHours.errors\">{{attandanceDetailFormGroup.controls.breakHours.errors.maxTime.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Total Time Out</label>\r\n      <input type=\"text\" formControlName=\"totalOutTime\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This field allow seconds in input time.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.totalOutTime.errors\">{{attandanceDetailFormGroup.controls.totalOutTime.errors.maxTime.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Exit Time</label>\r\n      <input type=\"text\" formControlName=\"exitTime\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.exitTime.errors\">{{attandanceDetailFormGroup.controls.exitTime.errors.maxTime.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Net-In Time</label>\r\n      <input type=\"text\" formControlName=\"netInTime\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message using message key<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.netInTime.errors\">{{attandanceDetailFormGroup.controls.netInTime.errors.maxTimeMessageKey.message}}<br/></small>\t\t\r\n    </div>\r\n    <button [disabled]=\"!attandanceDetailFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  maxTimeAsync,prop, } from   \"@rxweb/reactive-form-validators\" \r\n\rimport { of } from \"rxjs\" \r\n\r\n   \r\n\r\nexport class AttandanceDetail {\r\n\r\n\t@prop()\r\n\tentryPlace: string;\r\n\r\n\t@prop()\r\n\tclosingTime: string;\r\n\r\n\t@prop()\r\n\tbreakHours: string;\r\n\r\n\t@prop()\r\n\ttotalOutTime: string;\r\n\r\n\t@prop()\r\n\texitTime: string;\r\n\r\n\t@prop()\r\n\tnetInTime: string;\r\n\r\n}\r\n","modelName":"attandance-detail.model.ts","json":{"dynamic.json":"{\"entryPlace\":{},\"closingTime\":{\"maxTimeAsync\":{\"value\":\"23:30\"}},\"breakHours\":{\"maxTimeAsync\":{\"operator\":\"<\",\"value\":\"00:10\"}},\"totalOutTime\":{\"maxTimeAsync\":{\"allowSeconds\":\"true\",\"value\":\"02:00:00\"}},\"exitTime\":{\"maxTimeAsync\":{\"message\":\"You can enter only time format data\",\"fieldName\":\"closingTime\"}},\"netInTime\":{\"maxTimeAsync\":{\"messageKey\":\"maxTimeMessageKey\",\"fieldName\":\"totalInTime\"}}}"}},"add":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { AttandanceDetail } from './attandance-detail.model';\r\n\r\n@Component({\r\n    selector: 'app-maxTimeAsync-add',\r\n    templateUrl: './max-time-async-add.component.html'\r\n})\r\nexport class MaxTimeAsyncAddComponent implements OnInit {\r\n    attandanceDetailFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let attandanceDetail = new AttandanceDetail();\r\n        this.attandanceDetailFormGroup = this.formBuilder.formGroup(attandanceDetail);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"attandanceDetailFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Entry Time</label>\r\n      <input type=\"text\" formControlName=\"entryTime\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.entryTime.errors\">{{attandanceDetailFormGroup.controls.entryTime.errors.maxTime.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!attandanceDetailFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  maxTimeAsync, } from   \"@rxweb/reactive-form-validators\" \r\n\rimport { of } from \"rxjs\" \r\n\r\n   \r\n\r\nexport class AttandanceDetail {\r\n\r\n\t@maxTimeAsync({validatorConfig:of({value:'11:00'})}) \r\n\tentryTime: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"attandance-detail.model.ts","json":{}},"edit":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { AttandanceDetail } from './attandance-detail.model';\r\n\r\n@Component({\r\n    selector: 'app-maxTimeAsync-edit',\r\n    templateUrl: './max-time-async-edit.component.html'\r\n})\r\nexport class MaxTimeAsyncEditComponent implements OnInit {\r\n    attandanceDetailFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder,private http: HttpClient    ) { }\r\n\r\n    ngOnInit() {\r\n        this.http.get('assets/examples/reactive-form-validators/decorators/maxTimeAsync/edit/attandance-detail-data.json?v=' + environment.appVersion).subscribe(attandanceDetail => {\r\n            this.attandanceDetailFormGroup = this.formBuilder.formGroup<AttandanceDetail>(AttandanceDetail,attandanceDetail);\r\n       })})\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  *ngIf=\"attandanceDetailFormGroup\"  [formGroup]=\"attandanceDetailFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Entry Time</label>\r\n      <input type=\"text\" formControlName=\"entryTime\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.entryTime.errors\">{{attandanceDetailFormGroup.controls.entryTime.errors.maxTime.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!attandanceDetailFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  maxTimeAsync, } from   \"@rxweb/reactive-form-validators\" \r\n\rimport { of } from \"rxjs\" \r\n\r\n   \r\n\r\nexport class AttandanceDetail {\r\n\r\n\t@maxTimeAsync({validatorConfig:of({value:'11:00'})}) \r\n\tentryTime: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"attandance-detail.model.ts","json":{"attandance-detail-data.json":"{\"entryTime\":\"'10:00'\"}"}}}