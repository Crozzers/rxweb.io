{
    "complete": {
        "notes": [],
        "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-date-complete-template-driven-validation-directives',\r\n    templateUrl: './date-complete.component.html'\r\n})\r\nexport class DateCompleteTemplateDrivenValidationDirectivesComponent implements OnInit {\r\n    userinfo: UserInfo\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.userinfo= new UserInfo()\r\n    }\r\n}\r\n",
        "html": "<div>\r\n  <form #userinfoForm = \"ngForm\" [rxwebForm]=\"userinfoForm\" [model]=\"userinfo\">\r\n    <div class=\"form-group\">\r\n      <label>Birth Date</label>\r\n\t    <input type=\"text\" name=\"birthDate\" [(ngModel)]=\"userinfo.birthDate\"  class=\"form-control\" rxdate/>\r\n\r\n      <small class=\"form-text text-muted\">You must enter a proper date format.<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userinfoForm.controls?.birthDate?.errors\">{{userinfoForm.controls?.birthDate?.errors?.date.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Registration Date</label>\r\n\t    <input type=\"text\" name=\"registrationDate\" [(ngModel)]=\"userinfo.registrationDate\"  class=\"form-control\" [rxdate]=\"{'allowISODate':true}\"/>\r\n\r\n      <small class=\"form-text text-muted\">allows standard way to express a numeric calendar date according to International Organization for Standardization.<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userinfoForm.controls?.registrationDate?.errors\">{{userinfoForm.controls?.registrationDate?.errors?.date.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Enrollment Date</label>\r\n\t    <input type=\"text\" name=\"enrollmentDate\" [(ngModel)]=\"userinfo.enrollmentDate\"  class=\"form-control\" [rxdate]=\"{'conditionalExpression':'x => x.birthDate ==\\'16/04/1997\\''}\"/>\r\n\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Enrollment Date' then you need to add 'birthDate' input as '16/04/1997'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userinfoForm.controls?.enrollmentDate?.errors\">{{userinfoForm.controls?.enrollmentDate?.errors?.date.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Allocation Date</label>\r\n\t    <input type=\"text\" name=\"allocationDate\" [(ngModel)]=\"userinfo.allocationDate\"  class=\"form-control\" [rxdate]=\"{'message':'Allocation Date is not a valid date'}\"/>\r\n\r\n      <small class=\"form-text text-muted\">enter date format only<br/></small>\r\n      <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userinfoForm.controls?.allocationDate?.errors\">{{userinfoForm.controls?.allocationDate?.errors?.date.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Confirmation Date</label>\r\n\t    <input type=\"text\" name=\"confirmationDate\" [(ngModel)]=\"userinfo.confirmationDate\"  class=\"form-control\" [rxdate]=\"{'messageKey':'dateMessageKey'}\"/>\r\n\r\n      <small class=\"form-text text-muted\">Custom message based on messageKey<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userinfoForm.controls?.confirmationDate?.errors\">{{userinfoForm.controls?.confirmationDate?.errors?.date.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userinfoForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n",
        "model": "\r\nexport class UserInfo {\r\n\r\n\tbirthDate: string;\r\n\t\r\n\t\r\n\tregistrationDate: string;\r\n\t\r\n\t\r\n\tadmissionDate: string;\r\n\t\r\n\t\r\n\tenrollmentDate: string;\r\n\t\r\n\t\r\n\tallocationDate: string;\r\n\t\r\n\t\r\n\tconfirmationDate: string;\r\n\t\r\n\t\r\n}\r\n",
        "modelName": "user-info.model.ts",
        "json": {}
    },
    "allowISODateExample": {
        "notes": null,
        "component": null,
        "html": null,
        "model": "[rxdate]=\"{'allowISODate':true}\"",
        "modelName": null,
        "json": {}
    },
    "allowISODate": {
        "notes": [],
        "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-date-allowISODate-template-driven-validation-directives',\r\n    templateUrl: './date-allow-i-s-o-date.component.html'\r\n})\r\nexport class DateAllowISODateTemplateDrivenValidationDirectivesComponent implements OnInit {\r\n    userinfo: UserInfo\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.userinfo= new UserInfo()\r\n    }\r\n}\r\n",
        "html": "<div>\r\n  <form #userinfoForm = \"ngForm\" [rxwebForm]=\"userinfoForm\" [model]=\"userinfo\">\r\n    <div class=\"form-group\">\r\n      <label>Registration Date</label>\r\n\t    <input type=\"text\" name=\"registrationDate\" [(ngModel)]=\"userinfo.registrationDate\"  class=\"form-control\" [rxdate]=\"{'allowISODate':true}\"/>\r\n\r\n      <small class=\"form-text text-muted\">allows standard way to express a numeric calendar date according to International Organization for Standardization.<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userinfoForm.controls?.registrationDate?.errors\">{{userinfoForm.controls?.registrationDate?.errors?.date.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userinfoForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n",
        "model": "\r\nexport class UserInfo {\r\n\r\n\tregistrationDate: string;\r\n\t\r\n\t\r\n}\r\n",
        "modelName": "user-info.model.ts",
        "json": {}
    },
    "conditionalExpressionExampleFunction": {
        "notes": null,
        "component": null,
        "html": null,
        "model": "[rxdate]=\"{'conditionalExpression':(x,y) => x.birthDate == \\'16/04/1997\\' }\"",
        "modelName": null,
        "json": {}
    },
    "conditionalExpression": {
        "notes": [],
        "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-date-conditionalExpression-template-driven-validation-directives',\r\n    templateUrl: './date-conditional-expression.component.html'\r\n})\r\nexport class DateConditionalExpressionTemplateDrivenValidationDirectivesComponent implements OnInit {\r\n    userinfo: UserInfo\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.userinfo= new UserInfo()\r\n    }\r\n}\r\n",
        "html": "<div>\r\n  <form #userinfoForm = \"ngForm\" [rxwebForm]=\"userinfoForm\" [model]=\"userinfo\">\r\n    <div class=\"form-group\">\r\n      <label>Birth Date</label>\r\n\t    <input type=\"text\" name=\"birthDate\" [(ngModel)]=\"userinfo.birthDate\"  class=\"form-control\" rxdate/>\r\n\r\n      <small class=\"form-text text-muted\">You must enter a proper date format.<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userinfoForm.controls?.birthDate?.errors\">{{userinfoForm.controls?.birthDate?.errors?.date.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Enrollment Date</label>\r\n\t    <input type=\"text\" name=\"enrollmentDate\" [(ngModel)]=\"userinfo.enrollmentDate\"  class=\"form-control\" [rxdate]=\"{'conditionalExpression':'x => x.birthDate ==\\'16/04/1997\\''}\"/>\r\n\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Enrollment Date' then you need to add 'birthDate' input as '16/04/1997'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userinfoForm.controls?.enrollmentDate?.errors\">{{userinfoForm.controls?.enrollmentDate?.errors?.date.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userinfoForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n",
        "model": "\r\nexport class UserInfo {\r\n\r\n\tbirthDate: string;\r\n\t\r\n\t\r\n\tenrollmentDate: string;\r\n\t\r\n\t\r\n\tadmissionDate: string;\r\n\t\r\n\t\r\n}\r\n",
        "modelName": "user-info.model.ts",
        "json": {}
    },
    "conditionalExpressionExampleString": {
        "notes": null,
        "component": null,
        "html": null,
        "model": "[rxdate]=\"{'conditionalExpression':'x => x.birthDate ==\\'16/04/1997\\''}\"",
        "modelName": null,
        "json": {}
    },
    "messageExample": {
        "notes": null,
        "component": null,
        "html": null,
        "model": "[rxdate]=\"{'message':'Allocation Date is not a valid date'}\"",
        "modelName": null,
        "json": {}
    },
    "message": {
        "notes": [],
        "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-date-message-template-driven-validation-directives',\r\n    templateUrl: './date-message.component.html'\r\n})\r\nexport class DateMessageTemplateDrivenValidationDirectivesComponent implements OnInit {\r\n    userinfo: UserInfo\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.userinfo= new UserInfo()\r\n    }\r\n}\r\n",
        "html": "<div>\r\n  <form #userinfoForm = \"ngForm\" [rxwebForm]=\"userinfoForm\" [model]=\"userinfo\">\r\n    <div class=\"form-group\">\r\n      <label>Allocation Date</label>\r\n\t    <input type=\"text\" name=\"allocationDate\" [(ngModel)]=\"userinfo.allocationDate\"  class=\"form-control\" [rxdate]=\"{'message':'Allocation Date is not a valid date'}\"/>\r\n\r\n      <small class=\"form-text text-muted\">enter date format only<br/></small>\r\n      <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userinfoForm.controls?.allocationDate?.errors\">{{userinfoForm.controls?.allocationDate?.errors?.date.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userinfoForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n",
        "model": "\r\nexport class UserInfo {\r\n\r\n\tallocationDate: string;\r\n\t\r\n\t\r\n}\r\n",
        "modelName": "user-info.model.ts",
        "json": {}
    },
    "messageKeyExample": {
        "notes": null,
        "component": null,
        "html": null,
        "model": "[rxdate]=\"{'messageKey':'dateMessageKey'}\"",
        "modelName": null,
        "json": {}
    },
    "messageKey": {
        "notes": [],
        "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-date-messageKey-template-driven-validation-directives',\r\n    templateUrl: './date-message-key.component.html'\r\n})\r\nexport class DateMessageKeyTemplateDrivenValidationDirectivesComponent implements OnInit {\r\n    userinfo: UserInfo\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.userinfo= new UserInfo()\r\n    }\r\n}\r\n",
        "html": "<div>\r\n  <form #userinfoForm = \"ngForm\" [rxwebForm]=\"userinfoForm\" [model]=\"userinfo\">\r\n    <div class=\"form-group\">\r\n      <label>Confirmation Date</label>\r\n\t    <input type=\"text\" name=\"confirmationDate\" [(ngModel)]=\"userinfo.confirmationDate\"  class=\"form-control\" [rxdate]=\"{'messageKey':'dateMessageKey'}\"/>\r\n\r\n      <small class=\"form-text text-muted\">Custom message based on messageKey<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userinfoForm.controls?.confirmationDate?.errors\">{{userinfoForm.controls?.confirmationDate?.errors?.date.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userinfoForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n",
        "model": "\r\nexport class UserInfo {\r\n\r\n\tconfirmationDate: string;\r\n\t\r\n\t\r\n}\r\n",
        "modelName": "user-info.model.ts",
        "json": {}
    },
    "add": {
        "notes": [],
        "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-date-add-template-driven-validation-directives',\r\n    templateUrl: './date-add.component.html'\r\n})\r\nexport class DateAddTemplateDrivenValidationDirectivesComponent implements OnInit {\r\n    userinfo: UserInfo\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.userinfo= new UserInfo()\r\n    }\r\n}\r\n",
        "html": "<div>\r\n  <form #userinfoForm = \"ngForm\" [rxwebForm]=\"userinfoForm\" [model]=\"userinfo\">\r\n    <div class=\"form-group\">\r\n      <label>Birth Date</label>\r\n\t    <input type=\"text\" name=\"birthDate\" [(ngModel)]=\"userinfo.birthDate\"  class=\"form-control\" rxdate/>\r\n\r\n      <small class=\"form-text text-muted\">You must enter a valid date only<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userinfoForm.controls?.birthDate?.errors\">{{userinfoForm.controls?.birthDate?.errors?.date.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userinfoForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n",
        "model": "\r\nexport class UserInfo {\r\n\r\n\tbirthDate: string;\r\n\t\r\n\t\r\n}\r\n",
        "modelName": "user-info.model.ts",
        "json": {}
    }
}