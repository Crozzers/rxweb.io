{"rightSidebarLinks":[{"id":"date","title":"date (Validator)","subLink":null},{"id":"whentouse","title":"When to use","subLink":[]},{"id":"basicdatevalidation","title":"Basic Date Validation","subLink":[]},{"id":"baseconfig","title":"BaseConfig","subLink":[{"title":"conditionalExpression","id":"conditionalexpression","thirdLevelLink":[]},{"title":"message","id":"message","thirdLevelLink":[]}]},{"id":"completedateexample","title":"Complete Date Example","subLink":[]},{"id":"dynamicdateexample","title":"Dynamic Date Example","subLink":[]},{"id":"githubissues","title":"date Github Issues","subLink":null}],"title":"date","description":"Date validation validators will allow user to enter input which is only in the proper date format.","validatorType":"validators","validationTypeTitle":"Validators","type":"tabs","category":"form-validations","linkTitle":"date","tabArray":{"complete":[{"tabName":"Example","tabGroupContent":null,"content":"<div component=\"app-example-runner\" ref-component=\"app-date-complete\"></div>\r\n"},{"tabName":"Component","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"date-complete-component\"></div> \r\n"},{"tabName":"Html","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"date-complete-html\"></div> \r\n"}],"dynamic":[{"tabName":"Example","tabGroupContent":null,"content":"<div component=\"app-example-runner\" ref-component=\"app-date-dynamic\"></div>\r\n"},{"tabName":"Component","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"date-dynamic-component\"></div>\r\n"},{"tabName":"Json","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"date-dynamic-json\"></div>\r\n"},{"tabName":"Html","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"date-dynamic-html\"></div> \r\n"}]},"innerHtml":null,"htmlContent":"<div class='row page-section' id= 'whentouse'>\r\n<div class='col-lg-12'>\r\n<h2 class='showHideElement' >When to use<a title='Link to this heading' class='link-header' href='/form-validations/date/validators#whentouse'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Suppose you want to create a UserInfo form, which contains fields like BirthDate, AdmissionDate, EnrollmentDate, and AllocationDate, and you want the user to enter only date input. Here depending upon the requirement these scenarios may arise.</p>\r\n<ol class='showHideElement'>\r\n    <li>Allow user to enter only date input in <span class='highlighted'>BirthDate</span>.</li>\r\n    <li>Apply date validation based on matched condition in the form, like if the BirthDate is <span class='highlighted'>16/04/1997</span> then the AdmissionDate value should be in a date format (conditional validation with function).</li>\r\n    <li>Apply date validation based on matched condition in the form, like if the BirthDate is <span class='highlighted'>16/04/1997</span> then the EnrollmentDate value should be in a date format (conditional validation with string).</li>\r\n    <li>Apply custom message on AllocationDate Field.</li>\r\n    \t<data-scope scope=\"['decorator','validator']\">\r\n\t\t<li>Apply date validation dynamically based on server rules. </li>\r\n\t</data-scope>\r\n</ol>\r\n<p class='showHideElement' >Let's see how date validator fulfil the need.</p>\r\n<p class='showHideElement' >To Configure Date format globally in your application, Please refer <a href=\"/api/reactive-form-config\"><span class='highlighted'>ReactiveFormConfig</span></a></p>\r\n</div></div>\r\n<div class='row page-section' id= 'basicdatevalidation'>\r\n<div class='col-lg-12'>\r\n<h2>Basic Date Validation<a title='Link to this heading' class='link-header' href='/form-validations/date/validators#basicdatevalidation'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Through Angular FormBuilder service we create FormGroup in the component.</p>\r\n<p class='showHideElement' >Here we have covered Add form operations. </p>\r\n<div component=\"app-code\" key=\"date-add-component\"></div> \r\n<p class='showHideElement' >Next, we need to write html code.</p>\r\n<div component=\"app-code\" key=\"date-add-html\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-date-add\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'baseconfig'>\r\n<div class='col-lg-12'>\r\n<h2 class='showHideElement' >BaseConfig<a title='Link to this heading' class='link-header' href='/form-validations/date/validators#baseconfig'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Below options are not mandatory to use in the <span class='highlighted'>RxwebValidators.date()</span> validator. If needed then use the below options.</p>\r\n<table class=\"table table-bordered table-striped showHideElement\">\r\n<tr><th>Option</th><th>Description</th></tr>\r\n<tr><td><a   (click)='scrollTo(\"#conditionalExpression\")' title=\"conditionalExpression\">conditionalExpression</a></td><td>Date validation should be applied if the condition is matched in the <span class='highlighted'>conditionalExpression</span> function. Validation framework will pass two parameters at the time of <span class='highlighted'>conditionalExpression</span> check. Those two parameters are current <span class='highlighted'>FormGroup</span> value and root <span class='highlighted'>FormGroup</span> value. You can apply the condition on respective object value.If there is need of dynamic validation means it is not fixed in client code, it will change based on some criterias. In this scenario you can bind the expression based on the expression value is coming from the web server in <span class='highlighted'>string</span> format. The <span class='highlighted'>conditionalExpression</span> will work same as client function. For boolean variables, if you want to apply conditionalExpression, you must use <span class='highlighted'>===</span> instead of <span class='highlighted'>==</span>.</td></tr>\r\n<tr><td><a  (click)='scrollTo(\"#message\")'  title=\"message\">message</a></td><td>To override the global configuration message and set the custom error message on respective FormControl</td></tr>\r\n</table>\r\n</div></div>\r\n<div class='row page-section' id= 'conditionalexpression'>\r\n<div class='col-lg-12'>\r\n<h2>conditionalExpression<a title='Link to this heading' class='link-header' href='/form-validations/date/validators#conditionalexpression'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type :  <span class='highlighted'>Function</span>  |  <span class='highlighted'>string</span> </p>\r\n<p class='showHideElement' >Date validation should be applied if the condition is matched in the <span class='highlighted'>conditionalExpression</span> function. Validation framework will pass two parameters at the time of <span class='highlighted'>conditionalExpression</span> check. Those two parameters are current <span class='highlighted'>FormGroup</span> value and root <span class='highlighted'>FormGroup</span> value. You can apply the condition on respective object value.</p>\r\n<p class='showHideElement' >If there is need of dynamic validation means it is not fixed in client code, it will change based on some criterias. In this scenario you can bind the expression based on the expression value is coming from the web server in <span class='highlighted'>string</span> format. The <span class='highlighted'>conditionalExpression</span> will work same as client function. For boolean variables, if you want to apply conditionalExpression, you must use <span class='highlighted'>===</span> instead of <span class='highlighted'>==</span>.</p>\r\n<blockquote class='showHideElement' ><p>Binding <span class='highlighted'>conditionalExpression</span> with <span class='highlighted'>Function</span> object. </p></blockquote>\r\n<div component=\"app-code\" key=\"date-conditionalExpressionExampleFunction-model\"></div> \r\n<blockquote class='showHideElement' ><p>Binding <span class='highlighted'>conditionalExpression</span> with <span class='highlighted'>string</span> object. </p></blockquote>\r\n<div component=\"app-code\" key=\"date-conditionalExpressionExampleString-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-date-conditionalExpression\" title=\"date validator with conditionalExpression\" key=\"conditionalExpression\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'message'>\r\n<div class='col-lg-12'>\r\n<h2>message<a title='Link to this heading' class='link-header' href='/form-validations/date/validators#message'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type :  <span class='highlighted'>string</span> </p>\r\n<p class='showHideElement' >To override the global configuration message and set the custom message on respective FormControl.</p>\r\n<div component=\"app-code\" key=\"date-messageExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-date-message\" title=\"date validator with message\" key=\"message\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'completedateexample'>\r\n<div class='col-lg-12'>\r\n<h2>Complete Date Example<a title='Link to this heading' class='link-header' href='/form-validations/date/validators#completedateexample'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >This Complete Date example which includes all the BaseConfig properties will fulfil the requirement of scenarios 1, 2 and 3.</p>\r\n<div component=\"app-tabs\" key=\"complete\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'dynamicdateexample'>\r\n<div class='col-lg-12'>\r\n<h2>Dynamic Date Example<a title='Link to this heading' class='link-header' href='/form-validations/date/validators#dynamicdateexample'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >This Dynamic Date example is executed on the basis of json passed in the formBuilderConfiguration which comes under <span class='highlighted'>RxFormBuilder</span> of reactive-form-validators. <span class='highlighted'>conditionalExpression</span> with function would not be applied in dynamic date example. This example will fulfil the requirement of our last point.</p>\r\n<div component=\"app-tabs\" key=\"dynamic\"></div>\r\n</div></div>\r\n<div class=\"row page-section\" id=\"githubissues\">\r\n<div class=\"col-lg-12\">\r\n<h2>Github Issues<a title='Link to this heading' class='link-header' href='/tabs/date/validators#githubissues' fragment='githubissues'><i class='fa fa-link'></i></a></h2>\r\n<div component=\"app-github-issue\"></div>\r\n</div>\r\n</div>\r\n<div component=\"app-contribution\"></div>\r\n"}