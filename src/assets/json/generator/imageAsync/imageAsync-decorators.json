{"complete":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-imageAsync-complete',\r\n    templateUrl: './image-async-complete.component.html'\r\n})\r\nexport class ImageAsyncCompleteComponent implements OnInit {\r\n    userInfoFormGroup: FormGroup\r\n\t\t\t\tImageTypes = [ \"Picture\", \"IdentityCard\",];\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let userInfo = new UserInfo();\r\n        this.userInfoFormGroup = this.formBuilder.formGroup(userInfo);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Image Type</label>\r\n      <select formControlName=\"imageType\" class=\"form-control\">\r\n\t\t<option [value]=\"item\" *ngFor=\"let item of ImageTypes\">{{item}}</option>\r\n      </select>\r\n      <small class=\"form-text text-muted\">Based on selection of file type conditional validation is applied<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.imageType.errors\">{{userInfoFormGroup.controls.imageType.errors.image.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Profile Photo</label>\r\n      <input type=\"file\" formControlName=\"profilePhoto\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.profilePhoto.errors\">{{userInfoFormGroup.controls.profilePhoto.errors.image.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Signature</label>\r\n      <input type=\"file\" formControlName=\"signature\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.signature.errors\">{{userInfoFormGroup.controls.signature.errors.image.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Voter Id</label>\r\n      <input type=\"file\" formControlName=\"voterId\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.voterId.errors\">{{userInfoFormGroup.controls.voterId.errors.image.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Identity Card</label>\r\n      <input type=\"file\" formControlName=\"identityCard\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.identityCard.errors\">{{userInfoFormGroup.controls.identityCard.errors.image.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Driving License</label>\r\n      <input type=\"file\" formControlName=\"drivinglicense\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.drivinglicense.errors\">{{userInfoFormGroup.controls.drivinglicense.errors.image.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Residence Proof</label>\r\n      <input type=\"file\" formControlName=\"residenceProof\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Invalid Image height or width.<br/></small>\r\n      <small class=\"form-text text-muted\">It shows custom message<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.residenceProof.errors\">{{userInfoFormGroup.controls.residenceProof.errors.image.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Passport</label>\r\n      <input type=\"file\" formControlName=\"passport\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.passport.errors\">{{userInfoFormGroup.controls.passport.errors.imageMessageKey.message}}<br/></small>\t\t\r\n    </div>\r\n    <button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  imageAsync,prop, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class UserInfo {\r\n\r\n\t@prop()\r\n\timageType: string;\r\n\r\n\t@imageAsync({validatorConfig:of({maxHeight:100  ,maxWidth:100 })})\r\n\tprofilePhoto: string;\r\n\t\r\n\t\r\n\t@imageAsync({validatorConfig:of({maxHeight:100  ,maxWidth:100 })})\r\n\tsignature: string;\r\n\t\r\n\t\r\n\t@imageAsync({validatorConfig:of({minHeight:10  ,maxHeight:100  ,minWidth:10  ,maxWidth:10 })})\r\n\tvoterId: string;\r\n\t\r\n\t\r\n\t@imageAsync({validatorConfig:of({minHeight:10  ,maxHeight:100  ,maxWidth:100 })})\r\n\tidentityCard: string;\r\n\t\r\n\t\r\n\t@imageAsync({validatorConfig:of({maxHeight:100  ,maxWidth:100 })})\r\n\tdrivinglicense: string;\r\n\t\r\n\t\r\n\t@imageAsync({validatorConfig:of({maxHeight:100  ,maxWidth:100  ,message:'File exceed maximum Height.' })})\r\n\tresidenceProof: string;\r\n\t\r\n\t\r\n\t@imageAsync({validatorConfig:of({maxHeight:100  ,maxWidth:100  ,messageKey:'imageMessageKey' })})\r\n\tpassport: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"user-info.model.ts","json":{}},"maxHeightExample":{"notes":null,"component":null,"html":null,"model":"@imageAsync({validatorConfig:of({maxHeight:100  ,maxWidth:100 })})\r\nprofilePhoto: string;\r\n","modelName":null,"json":{}},"maxHeight":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-imageAsync-maxHeight',\r\n    templateUrl: './image-async-max-height.component.html'\r\n})\r\nexport class ImageAsyncMaxHeightComponent implements OnInit {\r\n    userInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let userInfo = new UserInfo();\r\n        this.userInfoFormGroup = this.formBuilder.formGroup(userInfo);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Profile Photo</label>\r\n      <input type=\"file\" formControlName=\"profilePhoto\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.profilePhoto.errors\">{{userInfoFormGroup.controls.profilePhoto.errors.image.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  imageAsync, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class UserInfo {\r\n\r\n\t@imageAsync({validatorConfig:of({maxHeight:100  ,maxWidth:100 })})\r\n\tprofilePhoto: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"user-info.model.ts","json":{}},"maxWidthExample":{"notes":null,"component":null,"html":null,"model":"@imageAsync({validatorConfig:of({maxHeight:100  ,maxWidth:100 })})\r\nprofilePhoto: string;\r\n","modelName":null,"json":{}},"maxWidth":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-imageAsync-maxWidth',\r\n    templateUrl: './image-async-max-width.component.html'\r\n})\r\nexport class ImageAsyncMaxWidthComponent implements OnInit {\r\n    userInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let userInfo = new UserInfo();\r\n        this.userInfoFormGroup = this.formBuilder.formGroup(userInfo);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Profile Photo</label>\r\n      <input type=\"file\" formControlName=\"profilePhoto\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.profilePhoto.errors\">{{userInfoFormGroup.controls.profilePhoto.errors.image.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  imageAsync, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class UserInfo {\r\n\r\n\t@imageAsync({validatorConfig:of({maxHeight:100  ,maxWidth:100 })})\r\n\tprofilePhoto: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"user-info.model.ts","json":{}},"minHeightExample":{"notes":null,"component":null,"html":null,"model":"@imageAsync({validatorConfig:of({minHeight:10  ,maxHeight:100  ,minWidth:10  ,maxWidth:10 })})\r\nvoterId: string;\r\n","modelName":null,"json":{}},"minHeight":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-imageAsync-minHeight',\r\n    templateUrl: './image-async-min-height.component.html'\r\n})\r\nexport class ImageAsyncMinHeightComponent implements OnInit {\r\n    userInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let userInfo = new UserInfo();\r\n        this.userInfoFormGroup = this.formBuilder.formGroup(userInfo);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Voter Id</label>\r\n      <input type=\"file\" formControlName=\"voterId\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.voterId.errors\">{{userInfoFormGroup.controls.voterId.errors.image.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  imageAsync, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class UserInfo {\r\n\r\n\t@imageAsync({validatorConfig:of({minHeight:10  ,maxHeight:100  ,minWidth:10  ,maxWidth:10 })})\r\n\tvoterId: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"user-info.model.ts","json":{}},"minWidthExample":{"notes":null,"component":null,"html":null,"model":"@imageAsync({validatorConfig:of({minHeight:10  ,maxHeight:100  ,minWidth:10  ,maxWidth:10 })})\r\nvoterId: string;\r\n","modelName":null,"json":{}},"minWidth":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-imageAsync-minWidth',\r\n    templateUrl: './image-async-min-width.component.html'\r\n})\r\nexport class ImageAsyncMinWidthComponent implements OnInit {\r\n    userInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let userInfo = new UserInfo();\r\n        this.userInfoFormGroup = this.formBuilder.formGroup(userInfo);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Voter Id</label>\r\n      <input type=\"file\" formControlName=\"voterId\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.voterId.errors\">{{userInfoFormGroup.controls.voterId.errors.image.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  imageAsync, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class UserInfo {\r\n\r\n\t@imageAsync({validatorConfig:of({minHeight:10  ,maxHeight:100  ,minWidth:10  ,maxWidth:10 })})\r\n\tvoterId: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"user-info.model.ts","json":{}},"messageExample":{"notes":null,"component":null,"html":null,"model":"@imageAsync({validatorConfig:of({maxHeight:100  ,maxWidth:100  ,message:'File exceed maximum Height.' })})\r\nresidenceProof: string;\r\n","modelName":null,"json":{}},"message":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-imageAsync-message',\r\n    templateUrl: './image-async-message.component.html'\r\n})\r\nexport class ImageAsyncMessageComponent implements OnInit {\r\n    userInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let userInfo = new UserInfo();\r\n        this.userInfoFormGroup = this.formBuilder.formGroup(userInfo);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Residence Proof</label>\r\n      <input type=\"file\" formControlName=\"residenceProof\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Invalid Image height or width.<br/></small>\r\n      <small class=\"form-text text-muted\">It shows custom message<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.residenceProof.errors\">{{userInfoFormGroup.controls.residenceProof.errors.image.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  imageAsync, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class UserInfo {\r\n\r\n\t@imageAsync({validatorConfig:of({maxHeight:100  ,maxWidth:100  ,message:'File exceed maximum Height.' })})\r\n\tresidenceProof: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"user-info.model.ts","json":{}},"messageKeyExample":{"notes":null,"component":null,"html":null,"model":"@imageAsync({validatorConfig:of({maxHeight:100  ,maxWidth:100  ,messageKey:'imageMessageKey' })})\r\npassport: string;\r\n","modelName":null,"json":{}},"messageKey":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-imageAsync-messageKey',\r\n    templateUrl: './image-async-message-key.component.html'\r\n})\r\nexport class ImageAsyncMessageKeyComponent implements OnInit {\r\n    userInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let userInfo = new UserInfo();\r\n        this.userInfoFormGroup = this.formBuilder.formGroup(userInfo);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Passport</label>\r\n      <input type=\"file\" formControlName=\"passport\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.passport.errors\">{{userInfoFormGroup.controls.passport.errors.imageMessageKey.message}}<br/></small>\t\t\r\n    </div>\r\n    <button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  imageAsync, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class UserInfo {\r\n\r\n\t@imageAsync({validatorConfig:of({maxHeight:100  ,maxWidth:100  ,messageKey:'imageMessageKey' })})\r\n\tpassport: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"user-info.model.ts","json":{}},"dynamic":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\nimport { FormBuilderConfiguration,} from '@rxweb/reactive-form-validators';\r\n\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-imageAsync-dynamic',\r\n    templateUrl: './image-async-dynamic.component.html'\r\n})\r\nexport class ImageAsyncDynamicComponent implements OnInit {\r\n    userInfoFormGroup: FormGroup\r\n\t\t\t\tImageTypes = [ \"Picture\", \"IdentityCard\",];\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder,private http: HttpClient    ) { }\r\n\r\n    ngOnInit() {\r\n        let userInfo = new UserInfo();\r\n        let formBuilderConfiguration = new FormBuilderConfiguration();\r\n\t\tthis.http.get('assets/examples/reactive-form-validators/decorators/imageAsync/dynamic/dynamic.json?v=' + environment.appVersion).subscribe(dynamic => {\r\n            formBuilderConfiguration.dynamicValidation = JSON.parse(JSON.stringify(dynamic));\r\n\t\t\tthis.userInfoFormGroup = this.formBuilder.formGroup(userInfo,formBuilderConfiguration);\r\n        })\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  *ngIf=\"userInfoFormGroup\"  [formGroup]=\"userInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Image Type</label>\r\n      <select formControlName=\"imageType\" class=\"form-control\">\r\n\t\t<option [value]=\"item\" *ngFor=\"let item of ImageTypes\">{{item}}</option>\r\n      </select>\r\n      <small class=\"form-text text-muted\">Based on selection of file type conditional validation is applied<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.imageType.errors\">{{userInfoFormGroup.controls.imageType.errors.image.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Profile Photo</label>\r\n      <input type=\"file\" formControlName=\"profilePhoto\" class=\"form-control\"   />\r\n     <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.profilePhoto.errors\">{{userInfoFormGroup.controls.profilePhoto.errors.image.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Signature</label>\r\n      <input type=\"file\" formControlName=\"signature\" class=\"form-control\"   />\r\n     <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.signature.errors\">{{userInfoFormGroup.controls.signature.errors.image.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Voter Id</label>\r\n      <input type=\"file\" formControlName=\"voterId\" class=\"form-control\"   />\r\n     <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.voterId.errors\">{{userInfoFormGroup.controls.voterId.errors.image.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Identity Card</label>\r\n      <input type=\"file\" formControlName=\"identityCard\" class=\"form-control\"   />\r\n     <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.identityCard.errors\">{{userInfoFormGroup.controls.identityCard.errors.image.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Driving License</label>\r\n      <input type=\"file\" formControlName=\"drivinglicense\" class=\"form-control\"   />\r\n     <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.drivinglicense.errors\">{{userInfoFormGroup.controls.drivinglicense.errors.image.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Residence Proof</label>\r\n      <input type=\"file\" formControlName=\"residenceProof\" class=\"form-control\"   />\r\n      <small class=\"form-text text-muted\">Invalid Image height or width.<br/></small>\r\n      <small class=\"form-text text-muted\">It shows custom message<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.residenceProof.errors\">{{userInfoFormGroup.controls.residenceProof.errors.image.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Passport</label>\r\n      <input type=\"file\" formControlName=\"passport\" class=\"form-control\"   />\r\n     <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.passport.errors\">{{userInfoFormGroup.controls.passport.errors.imageMessageKey.message}}<br/></small>\t\t\r\n    </div>\r\n    <button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  imageAsync,prop, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class UserInfo {\r\n\r\n\t@prop()\r\n\timageType: string;\r\n\r\n\t@prop()\r\n\tprofilePhoto: string;\r\n\r\n\t@prop()\r\n\tsignature: string;\r\n\r\n\t@prop()\r\n\tvoterId: string;\r\n\r\n\t@prop()\r\n\tidentityCard: string;\r\n\r\n\t@prop()\r\n\tdrivinglicense: string;\r\n\r\n\t@prop()\r\n\tresidenceProof: string;\r\n\r\n\t@prop()\r\n\tpassport: string;\r\n\r\n}\r\n","modelName":"user-info.model.ts","json":{"dynamic.json":"{\"imageType\":{},\"profilePhoto\":{\"imageAsync\":{\"maxHeight\":\"100\",\"maxWidth\":\"100\"}},\"signature\":{\"imageAsync\":{\"maxHeight\":\"100\",\"maxWidth\":\"100\"}},\"voterId\":{\"imageAsync\":{\"minHeight\":\"10\",\"maxHeight\":\"100\",\"minWidth\":\"10\",\"maxWidth\":\"10\"}},\"identityCard\":{\"imageAsync\":{\"minHeight\":\"10\",\"maxHeight\":\"100\",\"maxWidth\":\"100\"}},\"drivinglicense\":{\"imageAsync\":{\"maxHeight\":\"100\",\"maxWidth\":\"100\"}},\"residenceProof\":{\"imageAsync\":{\"maxHeight\":\"100\",\"maxWidth\":\"100\",\"message\":\"File exceed maximum Height.\"}},\"passport\":{\"imageAsync\":{\"maxHeight\":\"100\",\"maxWidth\":\"100\",\"messageKey\":\"imageMessageKey\"}}}"}},"add":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-imageAsync-add',\r\n    templateUrl: './image-async-add.component.html'\r\n})\r\nexport class ImageAsyncAddComponent implements OnInit {\r\n    userInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let userInfo = new UserInfo();\r\n        this.userInfoFormGroup = this.formBuilder.formGroup(userInfo);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Profile Photo</label>\r\n      <input type=\"file\" formControlName=\"profilePhoto\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Uploaded image must be in the proper height and width.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.profilePhoto.errors\">{{userInfoFormGroup.controls.profilePhoto.errors.image.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  imageAsync, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class UserInfo {\r\n\r\n\t@imageAsync({validatorConfig:of({maxHeight:100  ,maxWidth:100 })})\r\n\tprofilePhoto: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"user-info.model.ts","json":{}},"edit":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-imageAsync-edit',\r\n    templateUrl: './image-async-edit.component.html'\r\n})\r\nexport class ImageAsyncEditComponent implements OnInit {\r\n    userInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder,private http: HttpClient    ) { }\r\n\r\n    ngOnInit() {\r\n        this.http.get('assets/examples/reactive-form-validators/decorators/imageAsync/edit/user-info-data.json?v=' + environment.appVersion).subscribe(userInfo => {\r\n            this.userInfoFormGroup = this.formBuilder.formGroup<UserInfo>(UserInfo,userInfo);\r\n        })\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  *ngIf=\"userInfoFormGroup\"  [formGroup]=\"userInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Profile Picture</label>\r\n      <input type=\"file\" formControlName=\"profilePicture\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Uploaded image must be in the proper height and width.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.profilePicture.errors\">{{userInfoFormGroup.controls.profilePicture.errors.image.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  imageAsync, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class UserInfo {\r\n\r\n\t@imageAsync({validatorConfig:of({maxHeight:100  ,maxWidth:100 })})\r\n\tprofilePicture: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"user-info.model.ts","json":{"user-info-data.json":"{\"profilePicture\":\"google.jpg\"}"}}}