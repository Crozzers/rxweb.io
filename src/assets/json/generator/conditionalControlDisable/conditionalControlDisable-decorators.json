{
    "complete": {
        "notes": [
            "conditional-disable"
        ],
        "component": "import { Component, OnInit } from '@angular\/core';\r\nimport { FormGroup } from \"@angular\/forms\"\r\nimport { RxFormBuilder } from '@rxweb\/reactive-form-validators';\r\n\r\nimport { User } from '.\/user.model';\r\n\r\n@Component({\r\n    selector: 'app-conditionalControlDisable-complete',\r\n    templateUrl: '.\/conditional-control-disable-complete.component.html'\r\n})\r\nexport class ConditionalControlDisableCompleteComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        user.permanentAddress = \"F-16, Victoria Lake\"\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n}\r\n",
        "html": "<div>\r\n    <form  [formGroup]=\"userFormGroup\">\r\n       <div class=\"form-group\">\r\n        <label>Permanent Address<\/label>\r\n        <input type=\"text\" formControlName=\"permanentAddress\" class=\"form-control\"   \/>\r\n             <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.permanentAddress.errors\">{{userFormGroup.controls.permanentAddress.errors.required.message}}<br\/><\/small>\r\n     \r\n      <\/div>\r\n      <div class=\"form-group\">\r\n     \r\n        <input type=\"checkbox\" formControlName=\"IsSameAddress\"   \/>\r\n           <label>Same As Permanent Address<\/label><br\/>\r\n        <small class=\"form-text text-muted\">If you want to disable currentAddress field, check this value 'true'<br\/><\/small>\r\n     \r\n      <\/div>\r\n     \r\n      <div class=\"form-group\">\r\n        <label>Current Address<\/label>\r\n        <input type=\"text\" formControlName=\"currentAddress\" class=\"form-control\"  \/>\r\n        <small class=\"form-text text-muted\">Conditional Disable will be applied if the 'isSameAddress' field have value 'true'<br\/><\/small>\r\n        <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br\/><\/small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.currentAddress.errors\">{{userFormGroup.controls.currentAddress.errors.required.message}}<br\/><\/small>\r\n      <\/div>\r\n      <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit<\/button>\r\n    <\/form>\r\n  <\/div>\r\n  ",
        "model": "import {  required, prop, } from   \"@rxweb\/reactive-form-validators\"   \r\n\r\nexport class User {\r\n\r\n    @required()\r\n    permanentAddress : string;\r\n\t\r\n\t\r\n    @prop()\r\n    IsSameAddress:boolean;\r\n    \r\n\t\r\n    @required({ disableExpression: (x, y) => { return x.IsSameAddress == true }}) \r\n    currentAddress: string;\r\n\t\r\n\t\r\n}\r\n",
        "modelName": "user.model.ts",
        "json": {}
    }
}