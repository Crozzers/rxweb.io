{"rightSidebarLinks":[{"id":"oneofasync","title":"oneOfAsync","subLink":null},{"id":"whentouse","title":"When to use","subLink":[]},{"id":"basiconeofasyncvalidation","title":"Basic oneOfAsync Validation","subLink":[]},{"id":"validatorconfig","title":"ValidatorConfig","subLink":[{"title":"matchValues","id":"matchvalues","thirdLevelLink":[]},{"title":"message","id":"message","thirdLevelLink":[]},{"title":"messageKey","id":"messagekey","thirdLevelLink":[]}]},{"id":"completeoneofasyncexample","title":"Complete oneOfAsync Example","subLink":[]}],"title":"oneOfAsync","description":"oneOfAsync validation  decorators  will check whether the user has entered any one of the given inputs or not.","validatorType":"decorators","validationTypeTitle":"Decorators","type":"tabs","gitDocPath":"https://github.com/rxweb/rxweb.io/edit/master/docs/angular/reactive-forms/reactive-form-validators/async-validators/oneOfAsync.md","category":"async-validators","subCategory":"Array","linkTitle":"oneOfAsync","tabArray":{"complete":[{"tabName":"Example","tabGroupContent":null,"content":"<div component=\"app-example-runner\" ref-component=\"app-oneOfAsync-complete\"></div>\r\n"},{"tabName":"Model","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"oneOfAsync-complete-model\"></div> \r\n"},{"tabName":"Component","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"oneOfAsync-complete-component\"></div> \r\n"},{"tabName":"Html","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"oneOfAsync-complete-html\"></div> \r\n"}]},"innerHtml":null,"htmlContent":"<div class=\"title-bar top_title\"><p>oneOfAsync</p></div> <div class=\"title-bar\"><p>oneOfAsync validation  decorator  will check whether the user has entered any one of the given inputs or not asynchronously.</p></div>\r\n<div class='row page-section' id= 'whentouse'>\r\n<div class='col-lg-12'>\r\n<h2 class='showHideElement' >When to use<a title='Link to this heading' class='link-header'  href='/async-validators/oneOfAsync/decorators#whentouse'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Let's assume that you are creating a employee form in which you want employee to enter any one value of a particular value which contains fields like department, hobbies and skills.Here the field is taken in the form of array and according to that the oneOfAsync is applied on the property by applying matchvalues asynchronouslys. Here depending upon the requirement these scenarios may arise.</p>\r\n<ol class='showHideElement'>\r\n<li>The skills field in which you want the user to enter skills based upon matchvalues.</li>\r\n<li>Apply oneOfAsync validation based on matched condition in the form, like if the department  is ‘dotnet’ then the skills value should be based upon matchvalues.</li>\r\n<li>The Custom Message on Hobbies field.</li>\r\n<li>Shows the custom message on <span class='highlighted'>languages</span> field by using <span class='highlighted'>messageKey</span> property.</li> \r\n<li>Apply oneOfAsync validation dynamically based on server rules.</li>\r\n</ol>\r\n<p class='showHideElement' >Let’s see how oneOfAsync decorator fulfil the need.</p>\r\n</div></div>\r\n<div class='row page-section' id= 'basiconeofasyncvalidation'>\r\n<div class='col-lg-12'>\r\n<h2>Basic oneOfAsync Validation<a title='Link to this heading' class='link-header'  href='/async-validators/oneOfAsync/decorators#basiconeofasyncvalidation'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >First we need to create a employee Model class and define property of hobbies in the model to achieve the functional need of point 1.</p>\r\n<div component=\"app-code\" key=\"oneOfAsync-add-model\"></div> \r\n<p class='showHideElement' >Through Angular FormBuilder service we create FormGroup in the component.</p>\r\n<p class='showHideElement' >Here we have covered Add form operation.</p>\r\n<div component=\"app-code\" key=\"oneOfAsync-add-component\"></div> \r\n<p class='showHideElement' >Next, we need to write html code.</p>\r\n<div component=\"app-code\" key=\"oneOfAsync-add-html\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-oneOfAsync-add\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'validatorconfig'>\r\n<div class='col-lg-12'>\r\n<h2>ValidatorConfig<a title='Link to this heading' class='link-header'  href='/async-validators/oneOfAsync/decorators#validatorconfig'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type : <span class='highlighted'>Observable</span></p>\r\n<p class='showHideElement' >validator config is used to dynamically resolve the value of the property according to the server rules by using the keyword <span class='highlighted'>of</span> as below </p>\r\n<p class='showHideElement' >Below options are not mandatory to use in the <span class='highlighted'>@oneOfAsync({validatorConfig:of({validatorConfig:of({&ltproperty_name&gt:&ltvalue&gt})})</span> decorator. If needed then use the below options.</p>\r\n<table class=\"table table-bordered table-striped showHideElement\">\r\n<tr><th>Option</th><th>Description</th></tr>\r\n<tr><td><a title=\"matchValues\">matchValues</a></td><td>matchValues is the array based on which the validation property is set </td></tr>\r\n<tr><td><a title=\"message\">message</a></td><td>To override the global configuration message and set the custom error message on respective FormControl</td></tr>\r\n<tr><td><a title=\"messageKey\">messageKey</a></td><td>messageKey property of BaseConfig can be used when the user wants to show a different custom validation message on some of their fields. User can define a custom messageKey globally by defining it in ReactiveFormConfig and set it in the message property of the validation.</td></tr>\r\n</table>\r\n</div></div>\r\n<div class='row page-section' id= 'matchvalues'>\r\n<div class='col-lg-12'>\r\n<h2>matchValues<a title='Link to this heading' class='link-header'  href='/async-validators/oneOfAsync/decorators#matchvalues'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type :  <span class='highlighted'>any[]</span> </p>\r\n<p class='showHideElement' >matchValues is the array based on which the validation property is set. According to it one of the values in the array should be matched.</p>\r\n<div component=\"app-code\" key=\"oneOfAsync-matchValuesExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-oneOfAsync-matchValues\" title=\"oneOfAsync decorator with matchValues\" key=\"matchValues\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'message'>\r\n<div class='col-lg-12'>\r\n<h2>message<a title='Link to this heading' class='link-header'  href='/async-validators/oneOfAsync/decorators#message'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type :  <span class='highlighted'>string</span> </p>\r\n<p class='showHideElement' >To override the global configuration message and set the custom message on respective FormControl.</p>\r\n<div component=\"app-code\" key=\"oneOfAsync-messageExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-oneOfAsync-message\" title=\"oneOfAsync decorator with message\" key=\"message\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'messagekey'>\r\n<div class='col-lg-12'>\r\n<h2>messageKey<a title='Link to this heading' class='link-header'  href='/async-validators/oneOfAsync/decorators#messagekey'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type : <span class='highlighted'>string</span></p>\r\n<p class='showHideElement' >messageKey property of BaseConfig can be used when the user wants to show a different custom validation message on some of their fields. User can define a custom messageKey globally by defining it in ReactiveFormConfig and set it in the message property of the validation.</p>\r\n<div component=\"app-code\" key=\"oneOfAsync-messageKeyExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-oneOfAsync-messageKey\" title=\"oneOfAsync decorator with messageKey\" key=\"messageKey\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'completeoneofasyncexample'>\r\n<div class='col-lg-12'>\r\n<h2>Complete oneOfAsync Example<a title='Link to this heading' class='link-header'  href='/async-validators/oneOfAsync/decorators#completeoneofasyncexample'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >This Complete oneOfAsync example which includes all the ArrayConfig properties will fulfil the requirement of scenarios 1, 2, 3 and 4.</p>\r\n<div component=\"app-tabs\" key=\"complete\"></div>\r\n</div></div>\r\n"}