{"complete":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-dateAsync-complete-template-driven-validation-directives',\r\n    templateUrl: './date-async-complete.component.html'\r\n})\r\nexport class DateAsyncCompleteTemplateDrivenValidationDirectivesComponent implements OnInit {\r\n    userinfo: UserInfo\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.userinfo= new UserInfo()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userinfoForm = \"ngForm\" [rxwebForm]=\"userinfoForm\" [model]=\"userinfo\">\r\n    <div class=\"form-group\">\r\n      <label>Birth Date</label>\r\n\t    <input type=\"text\" name=\"birthDate\" [(ngModel)]=\"userinfo.birthDate\"  class=\"form-control\" rxdateAsync/>\r\n\r\n      <small class=\"form-text text-muted\">You must enter a proper date format.<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userinfoForm.controls?.birthDate?.errors\">{{userinfoForm.controls?.birthDate?.errors?.date.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Registration Date</label>\r\n\t    <input type=\"text\" name=\"registrationDate\" [(ngModel)]=\"userinfo.registrationDate\"  class=\"form-control\" [rxdateAsync]=\"{'allowISODate':true}\"/>\r\n\r\n      <small class=\"form-text text-muted\">allows standard way to express a numeric calendar date according to International Organization for Standardization.<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userinfoForm.controls?.registrationDate?.errors\">{{userinfoForm.controls?.registrationDate?.errors?.date.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Allocation Date</label>\r\n\t    <input type=\"text\" name=\"allocationDate\" [(ngModel)]=\"userinfo.allocationDate\"  class=\"form-control\" [rxdateAsync]=\"{'message':'Allocation Date is not a valid date'}\"/>\r\n\r\n      <small class=\"form-text text-muted\">enter date format only<br/></small>\r\n      <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userinfoForm.controls?.allocationDate?.errors\">{{userinfoForm.controls?.allocationDate?.errors?.date.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Confirmation Date</label>\r\n\t    <input type=\"text\" name=\"confirmationDate\" [(ngModel)]=\"userinfo.confirmationDate\"  class=\"form-control\" [rxdateAsync]=\"{'messageKey':'dateMessageKey'}\"/>\r\n\r\n      <small class=\"form-text text-muted\">Custom message based on messageKey<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userinfoForm.controls?.confirmationDate?.errors\">{{userinfoForm.controls?.confirmationDate?.errors?.date.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userinfoForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class UserInfo {\r\n\r\n\tbirthDate: string;\r\n\t\r\n\t\r\n\tregistrationDate: string;\r\n\t\r\n\t\r\n\tadmissionDate: string;\r\n\t\r\n\t\r\n\tallocationDate: string;\r\n\t\r\n\t\r\n\tconfirmationDate: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"user-info.model.ts","json":{}},"allowISODateExample":{"notes":null,"component":null,"html":null,"model":"[dateAsync]=\"{'allowISODate':true}\"","modelName":null,"json":{}},"allowISODate":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-dateAsync-allowISODate-template-driven-validation-directives',\r\n    templateUrl: './date-async-allow-i-s-o-date.component.html'\r\n})\r\nexport class DateAsyncAllowISODateTemplateDrivenValidationDirectivesComponent implements OnInit {\r\n    userinfo: UserInfo\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.userinfo= new UserInfo()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userinfoForm = \"ngForm\" [rxwebForm]=\"userinfoForm\" [model]=\"userinfo\">\r\n    <div class=\"form-group\">\r\n      <label>Registration Date</label>\r\n\t    <input type=\"text\" name=\"registrationDate\" [(ngModel)]=\"userinfo.registrationDate\"  class=\"form-control\" [rxdateAsync]=\"{'allowISODate':true}\"/>\r\n\r\n      <small class=\"form-text text-muted\">allows standard way to express a numeric calendar date according to International Organization for Standardization.<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userinfoForm.controls?.registrationDate?.errors\">{{userinfoForm.controls?.registrationDate?.errors?.date.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userinfoForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class UserInfo {\r\n\r\n\tregistrationDate: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"user-info.model.ts","json":{}},"conditionalExpressionExampleFunction":{"notes":null,"component":null,"html":null,"model":"[dateAsync]=\"{'conditionalExpression':(x,y) => x.birthDate == \\'16/04/1997\\' }\"","modelName":null,"json":{}},"conditionalExpression":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-dateAsync-conditionalExpression-template-driven-validation-directives',\r\n    templateUrl: './date-async-conditional-expression.component.html'\r\n})\r\nexport class DateAsyncConditionalExpressionTemplateDrivenValidationDirectivesComponent implements OnInit {\r\n    userinfo: UserInfo\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.userinfo= new UserInfo()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userinfoForm = \"ngForm\" [rxwebForm]=\"userinfoForm\" [model]=\"userinfo\">\r\n    <div class=\"form-group\">\r\n      <label>Birth Date</label>\r\n\t    <input type=\"text\" name=\"birthDate\" [(ngModel)]=\"userinfo.birthDate\"  class=\"form-control\" rxdateAsync/>\r\n\r\n      <small class=\"form-text text-muted\">You must enter a proper date format.<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userinfoForm.controls?.birthDate?.errors\">{{userinfoForm.controls?.birthDate?.errors?.date.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userinfoForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class UserInfo {\r\n\r\n\tbirthDate: string;\r\n\t\r\n\t\r\n\tadmissionDate: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"user-info.model.ts","json":{}},"messageExample":{"notes":null,"component":null,"html":null,"model":"[dateAsync]=\"{'message':'Allocation Date is not a valid date'}\"","modelName":null,"json":{}},"message":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-dateAsync-message-template-driven-validation-directives',\r\n    templateUrl: './date-async-message.component.html'\r\n})\r\nexport class DateAsyncMessageTemplateDrivenValidationDirectivesComponent implements OnInit {\r\n    userinfo: UserInfo\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.userinfo= new UserInfo()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userinfoForm = \"ngForm\" [rxwebForm]=\"userinfoForm\" [model]=\"userinfo\">\r\n    <div class=\"form-group\">\r\n      <label>Allocation Date</label>\r\n\t    <input type=\"text\" name=\"allocationDate\" [(ngModel)]=\"userinfo.allocationDate\"  class=\"form-control\" [rxdateAsync]=\"{'message':'Allocation Date is not a valid date'}\"/>\r\n\r\n      <small class=\"form-text text-muted\">enter date format only<br/></small>\r\n      <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userinfoForm.controls?.allocationDate?.errors\">{{userinfoForm.controls?.allocationDate?.errors?.date.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userinfoForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class UserInfo {\r\n\r\n\tallocationDate: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"user-info.model.ts","json":{}},"messageKeyExample":{"notes":null,"component":null,"html":null,"model":"[dateAsync]=\"{'messageKey':'dateMessageKey'}\"","modelName":null,"json":{}},"messageKey":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-dateAsync-messageKey-template-driven-validation-directives',\r\n    templateUrl: './date-async-message-key.component.html'\r\n})\r\nexport class DateAsyncMessageKeyTemplateDrivenValidationDirectivesComponent implements OnInit {\r\n    userinfo: UserInfo\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.userinfo= new UserInfo()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userinfoForm = \"ngForm\" [rxwebForm]=\"userinfoForm\" [model]=\"userinfo\">\r\n    <div class=\"form-group\">\r\n      <label>Confirmation Date</label>\r\n\t    <input type=\"text\" name=\"confirmationDate\" [(ngModel)]=\"userinfo.confirmationDate\"  class=\"form-control\" [rxdateAsync]=\"{'messageKey':'dateMessageKey'}\"/>\r\n\r\n      <small class=\"form-text text-muted\">Custom message based on messageKey<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userinfoForm.controls?.confirmationDate?.errors\">{{userinfoForm.controls?.confirmationDate?.errors?.date.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userinfoForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class UserInfo {\r\n\r\n\tconfirmationDate: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"user-info.model.ts","json":{}},"add":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-dateAsync-add-template-driven-validation-directives',\r\n    templateUrl: './date-async-add.component.html'\r\n})\r\nexport class DateAsyncAddTemplateDrivenValidationDirectivesComponent implements OnInit {\r\n    userinfo: UserInfo\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.userinfo= new UserInfo()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userinfoForm = \"ngForm\" [rxwebForm]=\"userinfoForm\" [model]=\"userinfo\">\r\n    <div class=\"form-group\">\r\n      <label>Birth Date</label>\r\n\t    <input type=\"text\" name=\"birthDate\" [(ngModel)]=\"userinfo.birthDate\"  class=\"form-control\" rxdateAsync/>\r\n\r\n      <small class=\"form-text text-muted\">You must enter a valid date only<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userinfoForm.controls?.birthDate?.errors\">{{userinfoForm.controls?.birthDate?.errors?.date.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userinfoForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class UserInfo {\r\n\r\n\tbirthDate: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"user-info.model.ts","json":{}}}