{
  "complete": {
    "notes": null,
    "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { EmployeeInfo } from './employee-info.model';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n    selector: 'app-noneOf-complete',\r\n    templateUrl: './none-of-complete.component.html'\r\n})\r\nexport class NoneOfCompleteComponent implements OnInit {\r\n    employeeInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder, private http: HttpClient) { }\r\n\r\n    qualificationsArray: string[] = [];\r\n    skillsArray: string[] = [];\r\n    hobbiesArray: string[] = [];\r\n    projectDomainsArray : string[] = [];\r\n\r\n    ngOnInit() {\r\n        let employeeInfo = new EmployeeInfo();\r\n        this.http.get(\"assets/examples/reactive-form-validators/decorators/noneOf/complete/none-of.json\").subscribe(response => {\r\n            this.qualificationsArray = response['qualificationsArray'];\r\n            this.skillsArray = response['skillsArray'];\r\n            this.hobbiesArray = response['hobbiesArray'];\r\n            this.projectDomainsArray = response['projectDomainsArray'];\r\n        })\r\n\r\n        this.employeeInfoFormGroup = this.formBuilder.formGroup(employeeInfo);\r\n    }\r\n\r\n    index = 0;\r\n    addProjectDomain(element:any) {\r\n      var value = this.employeeInfoFormGroup.controls.projectDomains.value;\r\n      if(!value)\r\n        value = [];\r\n        if(element.checked) {\r\n              value.push(element.value);\r\n              this.index++;\r\n        }\r\n        else\r\n        {\r\n        var indexOf = value.indexOf(element.value);\r\n        value.splice(indexOf,1);\r\n        }\r\n      this.employeeInfoFormGroup.controls.projectDomains.setValue(value)\r\n    }\r\n\r\n    addQualification(element:any) {\r\n        var value = this.employeeInfoFormGroup.controls.qualifications.value;\r\n        if(!value)\r\n          value = [];\r\n          if(element.checked) {\r\n                value.push(element.value);\r\n                this.index++;\r\n          }\r\n          else\r\n          {\r\n          var indexOf = value.indexOf(element.value);\r\n          value.splice(indexOf,1);\r\n          }\r\n        this.employeeInfoFormGroup.controls.qualifications.setValue(value)\r\n      }\r\n\r\n      addSkill(element:any) {\r\n        var value = this.employeeInfoFormGroup.controls.skills.value;\r\n        if(!value)\r\n          value = [];\r\n          if(element.checked) {\r\n                value.push(element.value);\r\n                this.index++;\r\n          }\r\n          else\r\n          {\r\n          var indexOf = value.indexOf(element.value);\r\n          value.splice(indexOf,1);\r\n          }\r\n        this.employeeInfoFormGroup.controls.skills.setValue(value)\r\n      }\r\n\r\n      addHobby(element:any) {\r\n        var value = this.employeeInfoFormGroup.controls.hobbies.value;\r\n        if(!value)\r\n          value = [];\r\n          if(element.checked) {\r\n                value.push(element.value);\r\n                this.index++;\r\n          }\r\n          else\r\n          {\r\n          var indexOf = value.indexOf(element.value);\r\n          value.splice(indexOf,1);\r\n          }\r\n        this.employeeInfoFormGroup.controls.hobbies.setValue(value)\r\n      }\r\n}",
    "html": "<div>\r\n<form [formGroup]=\"employeeInfoFormGroup\">\r\n  <div class=\"form-group\">\r\n    <label>Department</label>\r\n    <input type=\"text\" formControlName=\"department\" class=\"form-control\" placeholder=\"Enter any department\" />\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label>Project Domains</label>\r\n    <div class=\"form-check\" *ngFor=\"let tag of projectDomainsArray; let i = index;\">\r\n        <h4>\r\n          <input (click)=\"addProjectDomain($event.target,i)\" type=\"checkbox\" value=\"{{tag.name}}\" /> {{tag.name}}\r\n        </h4>\r\n      </div>\r\n      <br>\r\n      <small class=\"form-text text-danger\" *ngIf=\"employeeInfoFormGroup.controls.projectDomains.errors\">{{employeeInfoFormGroup.controls.projectDomains.errors.noneOf.message}}</small><br>\r\n      <small class=\"form-text text-muted\">You must not select any values.</small><br>\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label>Qualifications</label>\r\n    <div class=\"form-check\" *ngFor=\"let tag of qualificationsArray; let i = index;\">\r\n      <h4>\r\n        <input (click)=\"addQualification($event.target,i)\"  type=\"checkbox\" value=\"{{tag.name}}\" /> {{tag.name}}\r\n      </h4>\r\n    </div>\r\n    <br>\r\n    <small class=\"form-text text-danger\" *ngIf=\"employeeInfoFormGroup.controls.qualifications.errors\">{{employeeInfoFormGroup.controls.qualifications.errors.noneOf.message}}</small><br>\r\n    <small class=\"form-text text-muted\" >To apply the validation on 'Qualifications' field, enter 'DotNet' in 'Department' field</small><br>\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label>Skills</label><small>( With Conditional Expression )</small><br>\r\n    <div class=\"form-check\" *ngFor=\"let tag of skillsArray; let i = index;\">\r\n      <h4>\r\n        <input (click)=\"addSkill($event.target,i)\" type=\"checkbox\" value=\"{{tag.name}}\" /> {{tag.name}}\r\n      </h4>\r\n    </div>\r\n    <br>\r\n    <small class=\"form-text text-danger\" *ngIf=\"employeeInfoFormGroup.controls.skills.errors\">{{employeeInfoFormGroup.controls.skills.errors.noneOf.message}}</small><br>\r\n    <small class=\"form-text text-muted\" >To apply the validation on 'Skills' field, enter 'DotNet' in 'Department' field</small><br>\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label>Hobbies</label>\r\n    <div class=\"form-check\" *ngFor=\"let tag of hobbiesArray; let i = index;\">\r\n        <h4>\r\n          <input (click)=\"addHobby($event.target,i)\" type=\"checkbox\" value=\"{{tag.name}}\" /> {{tag.name}}\r\n        </h4>\r\n      </div>\r\n      <br>\r\n      <small class=\"form-text text-danger\" *ngIf=\"employeeInfoFormGroup.controls.hobbies.errors\">{{employeeInfoFormGroup.controls.hobbies.errors.noneOf.message}}</small><br>\r\n    <small class=\"form-text text-muted\">Shows custom message</small><br>\r\n  </div>\r\n  <button [disabled]=\"!employeeInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>",
    "model": "import {  noneOf,prop  } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class EmployeeInfo{\r\n\r\n    @prop()\r\n    department: string;\r\n    \r\n    @noneOf({matchValues:[\"ECommerce\", \"Banking\",\"Educational\",\"Gaming\"]})\r\n    projectDomains: string;\r\n\r\n    @noneOf({matchValues:[\"Secondary\",\"Senior Secondary\",\"B.Tech\",\"M.Tech\",\"B.C.A.\",\"M.C.A.\"], conditionalExpression: (x,y) => x.department =='DotNet'})\r\n\tqualifications: string[];\r\n\r\n    @noneOf({matchValues: [\"MVC\", \"AngularJS\",\"Angular 5\",\"C#\",\"Web Api\",\"SQL Server\"], conditionalExpression: \"x => x.department =='DotNet'\"})\r\n    skills: string;\r\n\r\n    @noneOf({matchValues:[\"Drawing\", \"Singing\",\"Dancing\",\"Travelling\",\"Sports\"],message: \"Please do not select any hobbies\"})\r\n    hobbies: string;\r\n}",
    "modelName": "employee-info.model.ts",
    "json": {
      "none-of.json": "{\r\n    \"projectDomainsArray\": [\r\n        {\r\n            \"name\": \"ECommerce\",\r\n            \"checked\": false\r\n        },\r\n        {\r\n            \"name\": \"Banking\",\r\n            \"checked\": false\r\n        },\r\n        {\r\n            \"name\":\"Educational\",\r\n            \"checked\":false\r\n        },\r\n        {\r\n            \"name\":\"Gaming\",\r\n            \"checked\":false\r\n        }\r\n    ],\r\n    \"qualificationsArray\": [\r\n        {\r\n            \"name\": \"Secondary\",\r\n            \"checked\": false\r\n        },\r\n        {\r\n            \"name\": \"Senior Secondary\",\r\n            \"checked\": false\r\n        },\r\n        {\r\n            \"name\":\"B.Tech.\",\r\n            \"checked\":false\r\n        },\r\n        {\r\n            \"name\":\"M.Tech.\",\r\n            \"checked\":false\r\n        },\r\n        {\r\n            \"name\":\"B.C.A.\",\r\n            \"checked\":false\r\n        },\r\n        {\r\n            \"name\":\"M.C.A.\",\r\n            \"checked\":false\r\n        }\r\n    ],\r\n    \"skillsArray\":[\r\n        {\r\n            \"name\":\"MVC\",\r\n            \"checked\":false\r\n        },\r\n        {\r\n            \"name\":\"AngularJS\",\r\n            \"checked\":false\r\n        },\r\n        {\r\n            \"name\":\"Angular 5\",\r\n            \"checked\":false\r\n        },\r\n        {\r\n            \"name\":\"C#\",\r\n            \"checked\":false\r\n        },\r\n        {\r\n            \"name\":\"Web Api\",\r\n            \"checked\":false\r\n        },\r\n        {\r\n            \"name\":\"SQL Server\",\r\n            \"checked\":false\r\n        }\r\n    ],\r\n    \"hobbiesArray\":[\r\n        {\r\n            \"name\":\"Drawing\",\r\n            \"checked\":false\r\n        },\r\n        {\r\n            \"name\":\"Singing\",\r\n            \"checked\":false\r\n        },\r\n        {\r\n            \"name\":\"Dancing\",\r\n            \"checked\":false\r\n        },\r\n        {\r\n            \"name\":\"Travelling\",\r\n            \"checked\":false\r\n        },\r\n        {\r\n            \"name\":\"Sports\",\r\n            \"checked\":false\r\n        }\r\n    ]\r\n}"
    }
  },
  "matchValuesExample": {
    "notes": null,
    "component": null,
    "html": null,
    "model": "@noneOf({matchValues:[\"ECommerce\", \"Banking\",\"Educational\",\"Gaming\"]})\r\n    projectDomains: string;",
    "modelName": null,
    "json": null
  },
  "matchValues": {
    "notes": null,
    "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { EmployeeInfo } from './employee-info.model';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n    selector: 'app-noneOf-matchValues',\r\n    templateUrl: './none-of-match-values.component.html'\r\n})\r\nexport class NoneOfMatchValuesComponent implements OnInit {\r\n    employeeInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder ,private http: HttpClient) { }\r\n\r\n        projectDomainsArray : string[] = [];\r\n      \r\n        ngOnInit() {\r\n          let employeeInfo = new EmployeeInfo();\r\n          this.http.get(\"assets/examples/reactive-form-validators/decorators/noneOf/matchValues/none-of.json\").subscribe(response => {\r\n            this.projectDomainsArray = response['projectDomainsArray'];\r\n        })\r\n      \r\n          this.employeeInfoFormGroup = this.formBuilder.formGroup(employeeInfo);\r\n        }\r\n\r\n        index = 0;\r\n        addProjectDomain(element:any) {\r\n          var value = this.employeeInfoFormGroup.controls.projectDomains.value;\r\n          if(!value)\r\n            value = [];\r\n            if(element.checked) {\r\n                  value.push(element.value);\r\n                  this.index++;\r\n            }\r\n            else\r\n            {\r\n            var indexOf = value.indexOf(element.value);\r\n            value.splice(indexOf,1);\r\n            }\r\n          this.employeeInfoFormGroup.controls.projectDomains.setValue(value)\r\n        }\r\n}",
    "html": "<div>\r\n  <form [formGroup]=\"employeeInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Project Domains</label>\r\n      <div class=\"form-check\" *ngFor=\"let tag of projectDomainsArray; let i = index;\">\r\n        <h4>\r\n          <input (click)=\"addProjectDomain($event.target,i)\"  type=\"checkbox\" value=\"{{tag.name}}\" /> {{tag.name}}\r\n        </h4>\r\n      </div>\r\n      <br>\r\n      <small class=\"form-text text-danger\" *ngIf=\"employeeInfoFormGroup.controls.projectDomains.errors\">{{employeeInfoFormGroup.controls.projectDomains.errors.noneOf.message}}</small><br>\r\n      <small class=\"form-text text-muted\">noneOf validation using matchValues</small>\r\n    </div>\r\n    <button [disabled]=\"!employeeInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>",
    "model": "import {  noneOf  } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class EmployeeInfo{\r\n\r\n    @noneOf({matchValues:[\"ECommerce\", \"Banking\",\"Educational\",\"Gaming\"]})\r\n    projectDomains: string;\r\n}",
    "modelName": "employee-info.model.ts",
    "json": {
      "none-of.json": "{\r\n    \"projectDomainsArray\": [\r\n        {\r\n            \"name\": \"ECommerce\",\r\n            \"checked\": false\r\n        },\r\n        {\r\n            \"name\": \"Banking\",\r\n            \"checked\": false\r\n        },\r\n        {\r\n            \"name\":\"Educational\",\r\n            \"checked\":false\r\n        },\r\n        {\r\n            \"name\":\"Gaming\",\r\n            \"checked\":false\r\n        }\r\n    ]\r\n}"
    }
    },
  "messageExample": {
    "notes": null,
    "component": null,
    "html": null,
    "model": "@noneOf({matchValues:[\"Drawing\", \"Singing\",\"Dancing\",\"Travelling\",\"Sports\"],message: \"Please do not select any hobby\"})\r\n    hobbies: string;",
    "modelName": null,
    "json": null
  },
  "message": {
    "notes": null,
    "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { EmployeeInfo } from './employee-info.model';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n    selector: 'app-noneOf-message',\r\n    templateUrl: './none-of-message.component.html'\r\n})\r\nexport class NoneOfMessageComponent implements OnInit {\r\n    employeeInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder, private http: HttpClient) { }\r\n\r\n    hobbiesArray: string[] = [];\r\n\r\n    ngOnInit() {\r\n        let employeeInfo = new EmployeeInfo();\r\n        this.http.get(\"assets/examples/reactive-form-validators/decorators/noneOf/message/none-of.json\").subscribe(response => {\r\n            this.hobbiesArray = response['hobbiesArray'];\r\n        })\r\n\r\n        this.employeeInfoFormGroup = this.formBuilder.formGroup(employeeInfo);\r\n    }\r\n\r\n    index = 0;\r\n    addHobby(element:any) {\r\n        var value = this.employeeInfoFormGroup.controls.hobbies.value;\r\n        if(!value)\r\n          value = [];\r\n          if(element.checked) {\r\n                value.push(element.value);\r\n                this.index++;\r\n          }\r\n          else\r\n          {\r\n          var indexOf = value.indexOf(element.value);\r\n          value.splice(indexOf,1);\r\n          }\r\n        this.employeeInfoFormGroup.controls.hobbies.setValue(value)\r\n      }\r\n}",
    "html": "<div>\r\n<form [formGroup]=\"employeeInfoFormGroup\">\r\n  <div class=\"form-group\">\r\n    <label>Hobbies</label>\r\n    <div class=\"form-check\" *ngFor=\"let tag of hobbiesArray; let i = index;\">\r\n        <h4>\r\n          <input (click)=\"addHobby($event.target,i)\" type=\"checkbox\" value=\"{{tag.name}}\" /> {{tag.name}}\r\n        </h4>\r\n      </div>\r\n      <br>\r\n      <small class=\"form-text text-danger\" *ngIf=\"employeeInfoFormGroup.controls.hobbies.errors\">{{employeeInfoFormGroup.controls.hobbies.errors.noneOf.message}}</small><br>\r\n    <small class=\"form-text text-muted\">Shows custom message</small><br>\r\n  </div>\r\n  <button [disabled]=\"!employeeInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div>",
    "model": "import {  noneOf  } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class EmployeeInfo{\r\n\r\n    @noneOf({matchValues:[\"Drawing\", \"Singing\",\"Dancing\",\"Travelling\",\"Sports\"],message: \"Please do not select any hobby\"})\r\n    hobbies: string;\r\n}",
    "modelName": "employee-info.model.ts",
    "json": {
      "none-of.json": "{\r\n    \"hobbiesArray\":[\r\n        {\r\n            \"name\":\"Drawing\",\r\n            \"checked\":false\r\n        },\r\n        {\r\n            \"name\":\"Singing\",\r\n            \"checked\":false\r\n        },\r\n        {\r\n            \"name\":\"Dancing\",\r\n            \"checked\":false\r\n        },\r\n        {\r\n            \"name\":\"Travelling\",\r\n            \"checked\":false\r\n        },\r\n        {\r\n            \"name\":\"Sports\",\r\n            \"checked\":false\r\n        }\r\n    ]\r\n}"
    }
  },
    "conditionalExpressionExampleFunction": {
      "notes": null,
      "component": null,
      "html": null,
      "model": "@noneOf({matchValues:[\"Secondary\",\"Senior Secondary\",\"B.Tech\",\"M.Tech\",\"B.C.A.\",\"M.C.A.\"], conditionalExpression: (x,y) => x.department =='DotNet'})\r\n\tqualifications: string[];",
      "modelName": null,
      "json": null
    },
  "conditionalExpression": {
    "notes": null,
    "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { EmployeeInfo } from './employee-info.model';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n    selector: 'app-noneOf-conditionalExpression',\r\n    templateUrl: './none-of-conditional-expression.component.html'\r\n})\r\nexport class NoneOfConditionalExpressionComponent implements OnInit {\r\n    employeeInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder, private http: HttpClient) { }\r\n\r\n    qualificationsArray: string[] = [];\r\n    skillsArray: string[] = [];\r\n\r\n    ngOnInit() {\r\n        let employeeInfo = new EmployeeInfo();\r\n        this.http.get(\"assets/examples/reactive-form-validators/decorators/noneOf/conditionalExpression/none-of.json\").subscribe(response => {\r\n            this.qualificationsArray = response['qualificationsArray'];\r\n            this.skillsArray = response['skillsArray'];\r\n        })\r\n\r\n        this.employeeInfoFormGroup = this.formBuilder.formGroup(employeeInfo);\r\n    }\r\n\r\n    index = 0;\r\n    addQualification(element:any) {\r\n        var value = this.employeeInfoFormGroup.controls.qualifications.value;\r\n        if(!value)\r\n          value = [];\r\n          if(element.checked) {\r\n                value.push(element.value);\r\n                this.index++;\r\n          }\r\n          else\r\n          {\r\n          var indexOf = value.indexOf(element.value);\r\n          value.splice(indexOf,1);\r\n          }\r\n        this.employeeInfoFormGroup.controls.qualifications.setValue(value)\r\n      }\r\n\r\n      addSkill(element:any) {\r\n        var value = this.employeeInfoFormGroup.controls.skills.value;\r\n        if(!value)\r\n          value = [];\r\n          if(element.checked) {\r\n                value.push(element.value);\r\n                this.index++;\r\n          }\r\n          else\r\n          {\r\n          var indexOf = value.indexOf(element.value);\r\n          value.splice(indexOf,1);\r\n          }\r\n        this.employeeInfoFormGroup.controls.skills.setValue(value)\r\n      }\r\n\r\n}",
    "html": "<div>\r\n    <form [formGroup]=\"employeeInfoFormGroup\">\r\n      <div class=\"form-group\">\r\n        <label>Department</label>\r\n        <input type=\"text\" formControlName=\"department\" class=\"form-control\" placeholder=\"Enter any department\" />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label>Qualifications</label>\r\n        <div class=\"form-check\" *ngFor=\"let tag of qualificationsArray; let i = index;\">\r\n          <h4>\r\n            <input (click)=\"addQualification($event.target,i)\"  type=\"checkbox\" value=\"{{tag.name}}\" /> {{tag.name}}\r\n          </h4>\r\n        </div>\r\n        <br>\r\n        <small class=\"form-text text-danger\" *ngIf=\"employeeInfoFormGroup.controls.qualifications.errors\">{{employeeInfoFormGroup.controls.qualifications.errors.noneOf.message}}</small><br>\r\n        <small class=\"form-text text-muted\" >To apply the validation on 'Qualifications' field, enter 'DotNet' in 'Department' field</small><br>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label>Skills</label><small>( With Conditional Expression )</small><br>\r\n        <div class=\"form-check\" *ngFor=\"let tag of skillsArray; let i = index;\">\r\n          <h4>\r\n            <input (click)=\"addSkill($event.target,i)\" type=\"checkbox\" value=\"{{tag.name}}\" /> {{tag.name}}\r\n          </h4>\r\n        </div>\r\n        <br>\r\n        <small class=\"form-text text-danger\" *ngIf=\"employeeInfoFormGroup.controls.skills.errors\">{{employeeInfoFormGroup.controls.skills.errors.noneOf.message}}</small><br>\r\n        <small class=\"form-text text-muted\" >To apply the validation on 'Skills' field, enter 'DotNet' in 'Department' field</small><br>\r\n      </div>\r\n      <button [disabled]=\"!employeeInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n    </form>\r\n    </div>",
    "model": "import {  noneOf,prop  } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class EmployeeInfo{\r\n\r\n    @prop()\r\n    department: string;\r\n\r\n    @noneOf({matchValues:[\"Secondary\",\"Senior Secondary\",\"B.Tech\",\"M.Tech\",\"B.C.A.\",\"M.C.A.\"], conditionalExpression: (x,y) => x.department =='DotNet'})\r\n\tqualifications: string[];\r\n\r\n    @noneOf({matchValues: [\"MVC\", \"AngularJS\",\"Angular 5\",\"C#\",\"Web Api\",\"SQL Server\"], conditionalExpression: \"x => x.department =='DotNet'\"})\r\n    skills: string;\r\n\r\n}",
    "modelName": "employee-info.model.ts",
    "json": {
      "none-of.json": "{\r\n    \"qualificationsArray\": [\r\n        {\r\n            \"name\": \"Secondary\",\r\n            \"checked\": false\r\n        },\r\n        {\r\n            \"name\": \"Senior Secondary\",\r\n            \"checked\": false\r\n        },\r\n        {\r\n            \"name\":\"B.Tech.\",\r\n            \"checked\":false\r\n        },\r\n        {\r\n            \"name\":\"M.Tech.\",\r\n            \"checked\":false\r\n        },\r\n        {\r\n            \"name\":\"B.C.A.\",\r\n            \"checked\":false\r\n        },\r\n        {\r\n            \"name\":\"M.C.A.\",\r\n            \"checked\":false\r\n        }\r\n    ],\r\n    \"skillsArray\":[\r\n        {\r\n            \"name\":\"MVC\",\r\n            \"checked\":false\r\n        },\r\n        {\r\n            \"name\":\"AngularJS\",\r\n            \"checked\":false\r\n        },\r\n        {\r\n            \"name\":\"Angular 5\",\r\n            \"checked\":false\r\n        },\r\n        {\r\n            \"name\":\"C#\",\r\n            \"checked\":false\r\n        },\r\n        {\r\n            \"name\":\"Web Api\",\r\n            \"checked\":false\r\n        },\r\n        {\r\n            \"name\":\"SQL Server\",\r\n            \"checked\":false\r\n        }\r\n    ]\r\n}"
    }
    },
    "conditionalExpressionExampleString": {
      "notes": null,
      "component": null,
      "html": null,
      "model": "@noneOf({matchValues: [\"MVC\", \"AngularJS\",\"Angular 5\",\"C#\",\"Web Api\",\"SQL Server\"], conditionalExpression: \"x => x.department =='DotNet'\"})\r\n    skills: string;",
      "modelName": null,
      "json": null
    },
    "dynamic": {
      "notes": null,
      "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\nimport { FormBuilderConfiguration,} from '@rxweb/reactive-form-validators';\r\nimport { EmployeeInfo } from './employee-info.model';\r\n\r\n\r\n@Component({\r\n    selector: 'app-noneOf-dynamic',\r\n    templateUrl: './none-of-dynamic.component.html'\r\n})\r\nexport class NoneOfDynamicComponent implements OnInit {\r\n    employeeInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder,private http: HttpClient    ) { }\r\n\r\n        qualificationsArray: string[] = [];\r\n        skillsArray: string[] = [];\r\n        hobbiesArray: string[] = [];\r\n        projectDomainsArray : string[] = [];\r\n    \r\n    ngOnInit() {\r\n        let employeeInfo = new EmployeeInfo();\r\n        let formBuilderConfiguration = new FormBuilderConfiguration();\r\n\t\tthis.http.get('assets/examples/reactive-form-validators/decorators/noneOf/dynamic/dynamic.json').subscribe(dynamic => {\r\n            formBuilderConfiguration.dynamicValidation = JSON.parse(JSON.stringify(dynamic));\r\n\t\t\tthis.employeeInfoFormGroup = this.formBuilder.formGroup(employeeInfo,formBuilderConfiguration);\r\n        })\r\n\r\n        this.http.get(\"assets/examples/reactive-form-validators/decorators/noneOf/dynamic/none-of.json\").subscribe(response => {\r\n            this.qualificationsArray = response['qualificationsArray'];\r\n            this.skillsArray = response['skillsArray'];\r\n            this.hobbiesArray = response['hobbiesArray'];\r\n            this.projectDomainsArray = response['projectDomainsArray'];\r\n        })\r\n\r\n        this.employeeInfoFormGroup = this.formBuilder.formGroup(employeeInfo);\r\n    }\r\n    index = 0;\r\n    addProjectDomain(element:any) {\r\n      var value = this.employeeInfoFormGroup.controls.projectDomains.value;\r\n      if(!value)\r\n        value = [];\r\n        if(element.checked) {\r\n              value.push(element.value);\r\n              this.index++;\r\n        }\r\n        else\r\n        {\r\n        var indexOf = value.indexOf(element.value);\r\n        value.splice(indexOf,1);\r\n        }\r\n      this.employeeInfoFormGroup.controls.projectDomains.setValue(value)\r\n    }\r\n\r\n    addSkill(element:any) {\r\n        var value = this.employeeInfoFormGroup.controls.skills.value;\r\n        if(!value)\r\n          value = [];\r\n          if(element.checked) {\r\n                value.push(element.value);\r\n                this.index++;\r\n          }\r\n          else\r\n          {\r\n          var indexOf = value.indexOf(element.value);\r\n          value.splice(indexOf,1);\r\n          }\r\n        this.employeeInfoFormGroup.controls.skills.setValue(value)\r\n      }\r\n\r\n      addHobby(element:any) {\r\n        var value = this.employeeInfoFormGroup.controls.hobbies.value;\r\n        if(!value)\r\n          value = [];\r\n          if(element.checked) {\r\n                value.push(element.value);\r\n                this.index++;\r\n          }\r\n          else\r\n          {\r\n          var indexOf = value.indexOf(element.value);\r\n          value.splice(indexOf,1);\r\n          }\r\n        this.employeeInfoFormGroup.controls.hobbies.setValue(value)\r\n      }\r\n}",
      "html": "<div>\r\n  <form  *ngIf=\"employeeInfoFormGroup\"  [formGroup]=\"employeeInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Department</label>\r\n      <input type=\"text\" formControlName=\"department\" class=\"form-control\" placeholder=\"Enter any department\" />\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Project Domains</label>\r\n      <div class=\"form-check\" *ngFor=\"let tag of projectDomainsArray; let i = index;\">\r\n          <h4>\r\n            <input (click)=\"addProjectDomain($event.target,i)\" type=\"checkbox\" value=\"{{tag.name}}\" /> {{tag.name}}\r\n          </h4>\r\n        </div>\r\n        <br>\r\n        <small class=\"form-text text-danger\" *ngIf=\"employeeInfoFormGroup.controls.projectDomains.errors\">{{employeeInfoFormGroup.controls.projectDomains.errors.noneOf.message}}</small><br>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Skills</label><small>( With Conditional Expression )</small><br>\r\n      <div class=\"form-check\" *ngFor=\"let tag of skillsArray; let i = index;\">\r\n        <h4>\r\n          <input (click)=\"addSkill($event.target,i)\" type=\"checkbox\" value=\"{{tag.name}}\" /> {{tag.name}}\r\n        </h4>\r\n      </div>\r\n      <br>\r\n      <small class=\"form-text text-danger\" *ngIf=\"employeeInfoFormGroup.controls.skills.errors\">{{employeeInfoFormGroup.controls.skills.errors.noneOf.message}}</small><br>\r\n      <small class=\"form-text text-muted\" >To apply the validation on 'Skills' field, enter 'DotNet' in 'Department' field</small><br>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Hobbies</label>\r\n      <div class=\"form-check\" *ngFor=\"let tag of hobbiesArray; let i = index;\">\r\n          <h4>\r\n            <input (click)=\"addHobby($event.target,i)\" type=\"checkbox\" value=\"{{tag.name}}\" /> {{tag.name}}\r\n          </h4>\r\n        </div>\r\n        <br>\r\n        <small class=\"form-text text-danger\" *ngIf=\"employeeInfoFormGroup.controls.hobbies.errors\">{{employeeInfoFormGroup.controls.hobbies.errors.noneOf.message}}</small><br>\r\n      <small class=\"form-text text-muted\">Shows custom message</small><br>\r\n    </div>\r\n    <button [disabled]=\"!employeeInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n  </div>",
      "model": "import {  noneOf,prop  } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class EmployeeInfo{\r\n\r\n    @prop()\r\n    department: string;\r\n    \r\n    @prop()\r\n    projectDomains: string;\r\n\r\n    @prop()\r\n\tqualifications: string[];\r\n\r\n    @prop()\r\n    skills: string;\r\n\r\n    @prop()\r\n    hobbies: string;\r\n}",
      "modelName": "employee-info.model.ts",
      "jsonName": "dynamic.json",
      "json": {
        "dynamic.json": "{\r\n    \"department\": {\r\n        \"noneOf\": false\r\n    },\r\n    \"projectDomains\": {\r\n        \"noneOf\": {\r\n            \"matchValues\": [\"ECommerce\", \"Banking\",\"Educational\",\"Gaming\"]\r\n        }\r\n    },\r\n    \"skills\": {\r\n        \"noneOf\": {\r\n            \"matchValues\": [\"MVC\", \"AngularJS\",\"Angular 5\",\"C#\",\"Web Api\",\"SQL Server\"],\r\n            \"conditionalExpression\": \"x => x.department ==\\\"DotNet\\\"\"\r\n        }\r\n    },\r\n    \"hobbies\": {\r\n        \"noneOf\": {\r\n            \"matchValues\":[\"Drawing\", \"Singing\",\"Dancing\",\"Travelling\",\"Sports\"],\r\n            \"message\": \"Please do not select any hobby.\"\r\n        }\r\n    }\r\n}",
        "none-of.json": "{\r\n    \"projectDomainsArray\": [\r\n        {\r\n            \"name\": \"ECommerce\",\r\n            \"checked\": false\r\n        },\r\n        {\r\n            \"name\": \"Banking\",\r\n            \"checked\": false\r\n        },\r\n        {\r\n            \"name\":\"Educational\",\r\n            \"checked\":false\r\n        },\r\n        {\r\n            \"name\":\"Gaming\",\r\n            \"checked\":false\r\n        }\r\n    ],\r\n    \"skillsArray\":[\r\n        {\r\n            \"name\":\"MVC\",\r\n            \"checked\":false\r\n        },\r\n        {\r\n            \"name\":\"AngularJS\",\r\n            \"checked\":false\r\n        },\r\n        {\r\n            \"name\":\"Angular 5\",\r\n            \"checked\":false\r\n        },\r\n        {\r\n            \"name\":\"C#\",\r\n            \"checked\":false\r\n        },\r\n        {\r\n            \"name\":\"Web Api\",\r\n            \"checked\":false\r\n        },\r\n        {\r\n            \"name\":\"SQL Server\",\r\n            \"checked\":false\r\n        }\r\n    ],\r\n    \"hobbiesArray\":[\r\n        {\r\n            \"name\":\"Drawing\",\r\n            \"checked\":false\r\n        },\r\n        {\r\n            \"name\":\"Singing\",\r\n            \"checked\":false\r\n        },\r\n        {\r\n            \"name\":\"Dancing\",\r\n            \"checked\":false\r\n        },\r\n        {\r\n            \"name\":\"Travelling\",\r\n            \"checked\":false\r\n        },\r\n        {\r\n            \"name\":\"Sports\",\r\n            \"checked\":false\r\n        }\r\n    ]\r\n}"
      }
    },
  "add": {
    "notes": null,
    "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { EmployeeInfo } from './employee-info.model';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n    selector: 'app-noneOf-add',\r\n    templateUrl: './none-of-add.component.html'\r\n})\r\nexport class NoneOfAddComponent implements OnInit {\r\n    employeeInfoFormGroup: FormGroup\r\n \r\n    constructor(\r\n        private formBuilder: RxFormBuilder ,private http: HttpClient) { }\r\n\r\n        projectDomainsArray : string[] = [];\r\n      \r\n        ngOnInit() {\r\n          let employeeInfo = new EmployeeInfo();\r\n          this.http.get(\"assets/examples/reactive-form-validators/decorators/noneOf/add/none-of.json\").subscribe(response => {\r\n            this.projectDomainsArray = response['projectDomainsArray'];\r\n        })\r\n      \r\n          this.employeeInfoFormGroup = this.formBuilder.formGroup(employeeInfo);\r\n        }\r\n\r\n        index = 0;\r\n        addProjectDomain(element:any) {\r\n          var value = this.employeeInfoFormGroup.controls.projectDomains.value;\r\n          if(!value)\r\n            value = [];\r\n            if(element.checked) {\r\n                  value.push(element.value);\r\n                  this.index++;\r\n            }\r\n            else\r\n            {\r\n            var indexOf = value.indexOf(element.value);\r\n            value.splice(indexOf,1);\r\n            }\r\n          this.employeeInfoFormGroup.controls.projectDomains.setValue(value)\r\n        }\r\n}",
    "html": "<div>\r\n  <form [formGroup]=\"employeeInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Project Domains</label>\r\n      <div class=\"form-check\" *ngFor=\"let tag of projectDomainsArray; let i = index;\">\r\n        <h4>\r\n          <input (click)=\"addProjectDomain($event.target,i)\"  type=\"checkbox\" value=\"{{tag.name}}\" /> {{tag.name}}\r\n        </h4>\r\n      </div>\r\n      <br>\r\n      <small class=\"form-text text-danger\" *ngIf=\"employeeInfoFormGroup.controls.projectDomains.errors\">{{employeeInfoFormGroup.controls.projectDomains.errors.noneOf.message}}</small><br>\r\n      <small class=\"form-text text-muted\">You must not select any option</small>\r\n    </div>\r\n    <button [disabled]=\"!employeeInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>",
    "model": "import {  noneOf  } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class EmployeeInfo{\r\n\r\n    @noneOf({matchValues:[\"ECommerce\", \"Banking\",\"Educational\",\"Gaming\"]})\r\n    projectDomains: string;\r\n\r\n}",
    "modelName": "employee-info.model.ts",
    "json": {
      "none-of.json": "{\r\n    \"projectDomainsArray\": [\r\n        {\r\n            \"name\": \"ECommerce\",\r\n            \"checked\": false\r\n        },\r\n        {\r\n            \"name\": \"Banking\",\r\n            \"checked\": false\r\n        },\r\n        {\r\n            \"name\":\"Educational\",\r\n            \"checked\":false\r\n        },\r\n        {\r\n            \"name\":\"Gaming\",\r\n            \"checked\":false\r\n        }\r\n    ]\r\n}"
    }
    },
    "nonArrayValueExample": {
      "notes": null,
      "component": null,
      "html": null,
      "model": "    @noneOf({matchValues:[\"HR\", \"Network\", \"Sales\"]})\r\n    department: string;",
      "modelName": null,
      "json": null
      },
    "nonArrayValue": {
      "notes": null,
      "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { EmployeeInfo } from './employee-info.model';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n    selector: 'app-noneOf-nonArrayValue',\r\n    templateUrl: './none-of-non-array-value.component.html'\r\n})\r\nexport class NoneOfNonArrayValueComponent implements OnInit {\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder, private http: HttpClient) { }\r\n\r\n    \r\n    employeeInfoFormGroup: FormGroup\r\n    ngOnInit() {\r\n        let employeeInfo = new EmployeeInfo();\r\n        this.employeeInfoFormGroup = this.formBuilder.formGroup(employeeInfo);\r\n    }\r\n}",
      "html": "<div>\r\n    <form [formGroup]=\"employeeInfoFormGroup\">\r\n      <div class=\"form-group\">\r\n        <label>Department</label>\r\n            <input class=\"form-control\" formControlName=\"department\" /> \r\n      </div>\r\n      <button [disabled]=\"!employeeInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n    </form>\r\n    <ul>\r\n      <li *ngFor=\"let item of excludedDepartments\">\r\n        {{item}}\r\n      </li>\r\n    </ul>\r\n  </div>",
      "model": "import {  noneOf, prop  } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class EmployeeInfo{\r\n\r\n    @prop()\r\n    excludedDepartments: string[] = [\"HR\", \"Network\", \"Sales\"];\r\n    \r\n    @noneOf({matchValues:this.excludedDepartments})\r\n    department: string;\r\n\r\n}",
      "modelName": "employee-info.model.ts",
      "json": null
      }
  }
