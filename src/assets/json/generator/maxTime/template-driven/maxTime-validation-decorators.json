{"complete":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { AttandanceDetail } from './attandance-detail.model';\r\n\r\n@Component({\r\n    selector: 'app-maxTime-complete-template-driven-validation-decorators',\r\n    templateUrl: './max-time-complete.component.html'\r\n})\r\nexport class MaxTimeCompleteTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    attandancedetail: AttandanceDetail\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.attandancedetail= new AttandanceDetail()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #attandancedetailForm = \"ngForm\" [rxwebForm]=\"attandancedetailForm\" [model]=\"attandancedetail\">\r\n    <div class=\"form-group\">\r\n      <label>Entry Place</label>\r\n\t    <input type=\"text\" name=\"entryPlace\" [(ngModel)]=\"attandancedetail.entryPlace\"  class=\"form-control\" />\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"attandancedetailForm.controls?.entryPlace?.errors\">{{attandancedetailForm.controls?.entryPlace?.errors?.maxTime.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Closing Time</label>\r\n\t    <input type=\"text\" name=\"closingTime\" [(ngModel)]=\"attandancedetail.closingTime\"  class=\"form-control\" />\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"attandancedetailForm.controls?.closingTime?.errors\">{{attandancedetailForm.controls?.closingTime?.errors?.maxTime.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Entry Time</label>\r\n\t    <input type=\"text\" name=\"entryTime\" [(ngModel)]=\"attandancedetail.entryTime\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">To apply the validation of maxTime on 'Entry Time' field, then enter the value of 'Main Entry Gate' in Entry Place textbox.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"attandancedetailForm.controls?.entryTime?.errors\">{{attandancedetailForm.controls?.entryTime?.errors?.maxTime.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Total Time Out</label>\r\n\t    <input type=\"text\" name=\"totalOutTime\" [(ngModel)]=\"attandancedetail.totalOutTime\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">This field allow seconds in input time.<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"attandancedetailForm.controls?.totalOutTime?.errors\">{{attandancedetailForm.controls?.totalOutTime?.errors?.maxTime.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Exit Time</label>\r\n\t    <input type=\"text\" name=\"exitTime\" [(ngModel)]=\"attandancedetail.exitTime\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message.<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"attandancedetailForm.controls?.exitTime?.errors\">{{attandancedetailForm.controls?.exitTime?.errors?.maxTime.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Net-In Time</label>\r\n\t    <input type=\"text\" name=\"netInTime\" [(ngModel)]=\"attandancedetail.netInTime\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message using message key<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"attandancedetailForm.controls?.netInTime?.errors\">{{attandancedetailForm.controls?.netInTime?.errors?.maxTime.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!attandancedetailForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  maxTime,prop, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class AttandanceDetail {\r\n\r\n\t@prop()\r\n\tentryPlace: string;\r\n\r\n\t@prop()\r\n\tclosingTime: string;\r\n\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@maxTime({conditionalExpression:(x,y) => x.entryPlace == \"Main Entry Gate\"   ,value:'12:00' }) \r\n\ttotalInTime: string;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@maxTime({conditionalExpression:'x => x.entryPlace == \"Main Entry Gate\"'  ,value:'11:00' }) \r\n\tentryTime: string;\r\n\t\r\n\t\r\n\t@maxTime({allowSeconds:true  ,value:'02:00:00' }) \r\n\ttotalOutTime: string;\r\n\t\r\n\t\r\n\t@maxTime({message:'You can enter only time format data'  ,fieldName:'closingTime' }) \r\n\texitTime: string;\r\n\t\r\n\t\r\n\t@maxTime({messageKey:'maxTimeMessageKey'  ,fieldName:'totalInTime' }) \r\n\tnetInTime: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"attandance-detail.model.ts","json":{}},"valueExample":{"notes":null,"component":null,"html":null,"model":"@maxTime({value:'23:30' }) \r\nclosingTime: string;\r\n","modelName":null,"json":{}},"value":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { AttandanceDetail } from './attandance-detail.model';\r\n\r\n@Component({\r\n    selector: 'app-maxTime-value-template-driven-validation-decorators',\r\n    templateUrl: './max-time-value.component.html'\r\n})\r\nexport class MaxTimeValueTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    attandancedetail: AttandanceDetail\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.attandancedetail= new AttandanceDetail()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #attandancedetailForm = \"ngForm\" [rxwebForm]=\"attandancedetailForm\" [model]=\"attandancedetail\">\r\n    <div class=\"form-group\">\r\n      <label>Closing Time</label>\r\n\t    <input type=\"text\" name=\"closingTime\" [(ngModel)]=\"attandancedetail.closingTime\"  class=\"form-control\" />\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"attandancedetailForm.controls?.closingTime?.errors\">{{attandancedetailForm.controls?.closingTime?.errors?.maxTime.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!attandancedetailForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  maxTime,prop, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class AttandanceDetail {\r\n\r\n\t@prop()\r\n\tclosingTime: string;\r\n\r\n}\r\n","modelName":"attandance-detail.model.ts","json":{}},"conditionalExpressionExampleFunction":{"notes":null,"component":null,"html":null,"model":"@maxTime({conditionalExpression:(x,y) => x.entryPlace == \"Main Entry Gate\"   ,value:'12:00' }) \r\ntotalInTime: string;\r\n","modelName":null,"json":{}},"conditionalExpression":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { AttandanceDetail } from './attandance-detail.model';\r\n\r\n@Component({\r\n    selector: 'app-maxTime-conditionalExpression-template-driven-validation-decorators',\r\n    templateUrl: './max-time-conditional-expression.component.html'\r\n})\r\nexport class MaxTimeConditionalExpressionTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    attandancedetail: AttandanceDetail\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.attandancedetail= new AttandanceDetail()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #attandancedetailForm = \"ngForm\" [rxwebForm]=\"attandancedetailForm\" [model]=\"attandancedetail\">\r\n    <div class=\"form-group\">\r\n      <label>Entry Place</label>\r\n\t    <input type=\"text\" name=\"entryPlace\" [(ngModel)]=\"attandancedetail.entryPlace\"  class=\"form-control\" />\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"attandancedetailForm.controls?.entryPlace?.errors\">{{attandancedetailForm.controls?.entryPlace?.errors?.maxTime.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Entry Time</label>\r\n\t    <input type=\"text\" name=\"entryTime\" [(ngModel)]=\"attandancedetail.entryTime\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">To apply the validation of maxTime on 'Entry Time' field, then enter the value of 'Main Entry Gate' in Entry Place textbox.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"attandancedetailForm.controls?.entryTime?.errors\">{{attandancedetailForm.controls?.entryTime?.errors?.maxTime.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!attandancedetailForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  maxTime,prop, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class AttandanceDetail {\r\n\r\n\t@prop()\r\n\tentryPlace: string;\r\n\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@maxTime({conditionalExpression:'x => x.entryPlace == \"Main Entry Gate\"'  ,value:'11:00' }) \r\n\tentryTime: string;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@maxTime({conditionalExpression:(x,y) => x.entryPlace == \"Main Entry Gate\"   ,value:'12:00' }) \r\n\ttotalInTime: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"attandance-detail.model.ts","json":{}},"valueExampleFunction":{"notes":null,"component":null,"html":null,"model":"@maxTime({conditionalExpression:(x,y) => x.entryPlace == \"Main Entry Gate\"   ,value:'12:00' }) \r\ntotalInTime: string;\r\n","modelName":null,"json":{}},"conditionalExpressionExampleString":{"notes":null,"component":null,"html":null,"model":"@maxTime({conditionalExpression:'x => x.entryPlace == \"Main Entry Gate\"'  ,value:'11:00' }) \r\nentryTime: string;\r\n","modelName":null,"json":{}},"valueExampleString":{"notes":null,"component":null,"html":null,"model":"@maxTime({conditionalExpression:'x => x.entryPlace == \"Main Entry Gate\"'  ,value:'11:00' }) \r\nentryTime: string;\r\n","modelName":null,"json":{}},"allowSecondsExample":{"notes":null,"component":null,"html":null,"model":"@maxTime({allowSeconds:true  ,value:'02:00:00' }) \r\ntotalOutTime: string;\r\n","modelName":null,"json":{}},"allowSeconds":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { AttandanceDetail } from './attandance-detail.model';\r\n\r\n@Component({\r\n    selector: 'app-maxTime-allowSeconds-template-driven-validation-decorators',\r\n    templateUrl: './max-time-allow-seconds.component.html'\r\n})\r\nexport class MaxTimeAllowSecondsTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    attandancedetail: AttandanceDetail\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.attandancedetail= new AttandanceDetail()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #attandancedetailForm = \"ngForm\" [rxwebForm]=\"attandancedetailForm\" [model]=\"attandancedetail\">\r\n    <div class=\"form-group\">\r\n      <label>Total Time Out</label>\r\n\t    <input type=\"text\" name=\"totalOutTime\" [(ngModel)]=\"attandancedetail.totalOutTime\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">This field allow seconds in input time.<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"attandancedetailForm.controls?.totalOutTime?.errors\">{{attandancedetailForm.controls?.totalOutTime?.errors?.maxTime.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!attandancedetailForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  maxTime, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class AttandanceDetail {\r\n\r\n\t@maxTime({allowSeconds:true  ,value:'02:00:00' }) \r\n\ttotalOutTime: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"attandance-detail.model.ts","json":{}},"messageExample":{"notes":null,"component":null,"html":null,"model":"@maxTime({message:'You can enter only time format data'  ,fieldName:'closingTime' }) \r\nexitTime: string;\r\n","modelName":null,"json":{}},"message":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { AttandanceDetail } from './attandance-detail.model';\r\n\r\n@Component({\r\n    selector: 'app-maxTime-message-template-driven-validation-decorators',\r\n    templateUrl: './max-time-message.component.html'\r\n})\r\nexport class MaxTimeMessageTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    attandancedetail: AttandanceDetail\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.attandancedetail= new AttandanceDetail()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #attandancedetailForm = \"ngForm\" [rxwebForm]=\"attandancedetailForm\" [model]=\"attandancedetail\">\r\n    <div class=\"form-group\">\r\n      <label>Exit Time</label>\r\n\t    <input type=\"text\" name=\"exitTime\" [(ngModel)]=\"attandancedetail.exitTime\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message.<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"attandancedetailForm.controls?.exitTime?.errors\">{{attandancedetailForm.controls?.exitTime?.errors?.maxTime.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!attandancedetailForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  maxTime, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class AttandanceDetail {\r\n\r\n\t@maxTime({message:'You can enter only time format data'  ,fieldName:'closingTime' }) \r\n\texitTime: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"attandance-detail.model.ts","json":{}},"fieldNameExample":{"notes":null,"component":null,"html":null,"model":"@maxTime({message:'You can enter only time format data'  ,fieldName:'closingTime' }) \r\nexitTime: string;\r\n","modelName":null,"json":{}},"fieldName":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { AttandanceDetail } from './attandance-detail.model';\r\n\r\n@Component({\r\n    selector: 'app-maxTime-fieldName-template-driven-validation-decorators',\r\n    templateUrl: './max-time-field-name.component.html'\r\n})\r\nexport class MaxTimeFieldNameTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    attandancedetail: AttandanceDetail\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.attandancedetail= new AttandanceDetail()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #attandancedetailForm = \"ngForm\" [rxwebForm]=\"attandancedetailForm\" [model]=\"attandancedetail\">\r\n    <div class=\"form-group\">\r\n      <label>Closing Time</label>\r\n\t    <input type=\"text\" name=\"closingTime\" [(ngModel)]=\"attandancedetail.closingTime\"  class=\"form-control\" />\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"attandancedetailForm.controls?.closingTime?.errors\">{{attandancedetailForm.controls?.closingTime?.errors?.maxTime.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Exit Time</label>\r\n\t    <input type=\"text\" name=\"exitTime\" [(ngModel)]=\"attandancedetail.exitTime\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message.<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"attandancedetailForm.controls?.exitTime?.errors\">{{attandancedetailForm.controls?.exitTime?.errors?.maxTime.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!attandancedetailForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  maxTime,prop, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class AttandanceDetail {\r\n\r\n\t@prop()\r\n\tclosingTime: string;\r\n\r\n\t@maxTime({message:'You can enter only time format data'  ,fieldName:'closingTime' }) \r\n\texitTime: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"attandance-detail.model.ts","json":{}},"messageKeyExample":{"notes":null,"component":null,"html":null,"model":"@maxTime({messageKey:'maxTimeMessageKey'  ,fieldName:'totalInTime' }) \r\nnetInTime: string;\r\n","modelName":null,"json":{}},"messageKey":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { AttandanceDetail } from './attandance-detail.model';\r\n\r\n@Component({\r\n    selector: 'app-maxTime-messageKey-template-driven-validation-decorators',\r\n    templateUrl: './max-time-message-key.component.html'\r\n})\r\nexport class MaxTimeMessageKeyTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    attandancedetail: AttandanceDetail\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.attandancedetail= new AttandanceDetail()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #attandancedetailForm = \"ngForm\" [rxwebForm]=\"attandancedetailForm\" [model]=\"attandancedetail\">\r\n    <div class=\"form-group\">\r\n      <label>Net-In Time</label>\r\n\t    <input type=\"text\" name=\"netInTime\" [(ngModel)]=\"attandancedetail.netInTime\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message using message key<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"attandancedetailForm.controls?.netInTime?.errors\">{{attandancedetailForm.controls?.netInTime?.errors?.maxTime.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!attandancedetailForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  maxTime, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class AttandanceDetail {\r\n\r\n\t@maxTime({messageKey:'maxTimeMessageKey'  ,fieldName:'totalInTime' }) \r\n\tnetInTime: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"attandance-detail.model.ts","json":{}},"add":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { AttandanceDetail } from './attandance-detail.model';\r\n\r\n@Component({\r\n    selector: 'app-maxTime-add-template-driven-validation-decorators',\r\n    templateUrl: './max-time-add.component.html'\r\n})\r\nexport class MaxTimeAddTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    attandancedetail: AttandanceDetail\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.attandancedetail= new AttandanceDetail()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #attandancedetailForm = \"ngForm\" [rxwebForm]=\"attandancedetailForm\" [model]=\"attandancedetail\">\r\n    <div class=\"form-group\">\r\n      <label>Entry Time</label>\r\n\t    <input type=\"text\" name=\"entryTime\" [(ngModel)]=\"attandancedetail.entryTime\"  class=\"form-control\" />\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"attandancedetailForm.controls?.entryTime?.errors\">{{attandancedetailForm.controls?.entryTime?.errors?.maxTime.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!attandancedetailForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  maxTime, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class AttandanceDetail {\r\n\r\n\t@maxTime({value:'11:00' }) \r\n\tentryTime: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"attandance-detail.model.ts","json":{}}}