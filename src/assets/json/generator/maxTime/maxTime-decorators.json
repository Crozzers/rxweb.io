{
    "complete": {
        "notes": null,
        "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { AttandanceDetail } from './attandance-detail.model';\r\n\r\n@Component({\r\n    selector: 'app-maxTime-complete',\r\n    templateUrl: './max-time-complete.component.html'\r\n})\r\nexport class MaxTimeCompleteComponent implements OnInit {\r\n    attandanceDetailFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let attandanceDetail = new AttandanceDetail();\r\n        this.attandanceDetailFormGroup = this.formBuilder.formGroup(attandanceDetail);\r\n    }\r\n}\r\n",
        "html": "<div>\r\n  <form  [formGroup]=\"attandanceDetailFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Entry Place</label>\r\n      <input type=\"text\" formControlName=\"entryPlace\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.entryPlace.errors\">{{attandanceDetailFormGroup.controls.entryPlace.errors.maxTime.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Closing Time</label>\r\n      <input type=\"text\" formControlName=\"closingTime\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.closingTime.errors\">{{attandanceDetailFormGroup.controls.closingTime.errors.maxTime.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Break Hours</label>\r\n      <input type=\"text\" formControlName=\"breakHours\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Value should be less than 00:10<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.breakHours.errors\">{{attandanceDetailFormGroup.controls.breakHours.errors.maxTime.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Total In Time</label>\r\n      <input type=\"text\" formControlName=\"totalInTime\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">To apply the validation of maxTime on 'Total In Time' field, then enter the value of 'Main Entry Gate' in Entry Place textbox.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.totalInTime.errors\">{{attandanceDetailFormGroup.controls.totalInTime.errors.maxTime.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Entry Time</label>\r\n      <input type=\"text\" formControlName=\"entryTime\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">To apply the validation of maxTime on 'Entry Time' field, then enter the value of 'Main Entry Gate' in Entry Place textbox.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.entryTime.errors\">{{attandanceDetailFormGroup.controls.entryTime.errors.maxTime.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Total Time Out</label>\r\n      <input type=\"text\" formControlName=\"totalOutTime\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This field allow seconds in input time.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.totalOutTime.errors\">{{attandanceDetailFormGroup.controls.totalOutTime.errors.maxTime.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Exit Time</label>\r\n      <input type=\"text\" formControlName=\"exitTime\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.exitTime.errors\">{{attandanceDetailFormGroup.controls.exitTime.errors.maxTime.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Net-In Time</label>\r\n      <input type=\"text\" formControlName=\"netInTime\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message using message key<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.netInTime.errors\">{{attandanceDetailFormGroup.controls.netInTime.errors.maxTime.message}}<br/></small>\t\t\r\n    </div>\r\n    <button [disabled]=\"!attandanceDetailFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n",
        "model": "import {  maxTime,prop, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class AttandanceDetail {\r\n\r\n\t@prop()\r\n\tentryPlace: string;\r\n\r\n\t@maxTime({value:'23:30' }) \r\n\tclosingTime: string;\r\n\t\r\n\t\r\n\t@maxTime({operator:'<'  ,value:'00:10' }) \r\n\tbreakHours: string;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@maxTime({conditionalExpression:(x,y) => x.entryPlace == \"Main Entry Gate\"   ,value:'12:00' }) \r\n\ttotalInTime: string;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@maxTime({conditionalExpression:'x => x.entryPlace == \"Main Entry Gate\"'  ,value:'11:00' }) \r\n\tentryTime: string;\r\n\t\r\n\t\r\n\t@maxTime({allowSeconds:true  ,value:'02:00:00' }) \r\n\ttotalOutTime: string;\r\n\t\r\n\t\r\n\t@maxTime({message:'Please enter valid input'  ,fieldName:'closingTime' }) \r\n\texitTime: string;\r\n\t\r\n\t\r\n\t@maxTime({messageKey:'maxTimeMessageKey'  ,fieldName:'totalInTime' }) \r\n\tnetInTime: string;\r\n\t\r\n\t\r\n}\r\n",
        "modelName": "attandance-detail.model.ts",
        "json": {}
    },
    "valueExample": {
        "notes": null,
        "component": null,
        "html": null,
        "model": "@maxTime({value:'23:30' }) \r\nclosingTime: string;\r\n",
        "modelName": null,
        "json": {}
    },
    "value": {
        "notes": null,
        "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { AttandanceDetail } from './attandance-detail.model';\r\n\r\n@Component({\r\n    selector: 'app-maxTime-value',\r\n    templateUrl: './max-time-value.component.html'\r\n})\r\nexport class MaxTimeValueComponent implements OnInit {\r\n    attandanceDetailFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let attandanceDetail = new AttandanceDetail();\r\n        this.attandanceDetailFormGroup = this.formBuilder.formGroup(attandanceDetail);\r\n    }\r\n}\r\n",
        "html": "<div>\r\n  <form  [formGroup]=\"attandanceDetailFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Closing Time</label>\r\n      <input type=\"text\" formControlName=\"closingTime\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.closingTime.errors\">{{attandanceDetailFormGroup.controls.closingTime.errors.maxTime.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!attandanceDetailFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n",
        "model": "import {  maxTime, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class AttandanceDetail {\r\n\r\n\t@maxTime({value:'23:30' }) \r\n\tclosingTime: string;\r\n\t\r\n\t\r\n}\r\n",
        "modelName": "attandance-detail.model.ts",
        "json": {}
    },
    "operatorExample": {
        "notes": null,
        "component": null,
        "html": null,
        "model": "@maxTime({operator:'<'  ,value:'00:10' }) \r\nbreakHours: string;\r\n",
        "modelName": null,
        "json": {}
    },
    "operator": {
        "notes": null,
        "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { AttandanceDetail } from './attandance-detail.model';\r\n\r\n@Component({\r\n    selector: 'app-maxTime-operator',\r\n    templateUrl: './max-time-operator.component.html'\r\n})\r\nexport class MaxTimeOperatorComponent implements OnInit {\r\n    attandanceDetailFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let attandanceDetail = new AttandanceDetail();\r\n        this.attandanceDetailFormGroup = this.formBuilder.formGroup(attandanceDetail);\r\n    }\r\n}\r\n",
        "html": "<div>\r\n  <form  [formGroup]=\"attandanceDetailFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Break Hours</label>\r\n      <input type=\"text\" formControlName=\"breakHours\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Value should be less than 00:10<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.breakHours.errors\">{{attandanceDetailFormGroup.controls.breakHours.errors.maxTime.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!attandanceDetailFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n",
        "model": "import {  maxTime, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class AttandanceDetail {\r\n\r\n\t@maxTime({operator:'<'  ,value:'00:10' }) \r\n\tbreakHours: string;\r\n\t\r\n\t\r\n}\r\n",
        "modelName": "attandance-detail.model.ts",
        "json": {}
    },
    "conditionalExpressionExampleFunction": {
        "notes": null,
        "component": null,
        "html": null,
        "model": "@maxTime({conditionalExpression:(x,y) => x.entryPlace == \"Main Entry Gate\"   ,value:'12:00' }) \r\ntotalInTime: string;\r\n",
        "modelName": null,
        "json": {}
    },
    "conditionalExpression": {
        "notes": null,
        "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { AttandanceDetail } from './attandance-detail.model';\r\n\r\n@Component({\r\n    selector: 'app-maxTime-conditionalExpression',\r\n    templateUrl: './max-time-conditional-expression.component.html'\r\n})\r\nexport class MaxTimeConditionalExpressionComponent implements OnInit {\r\n    attandanceDetailFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let attandanceDetail = new AttandanceDetail();\r\n        this.attandanceDetailFormGroup = this.formBuilder.formGroup(attandanceDetail);\r\n    }\r\n}\r\n",
        "html": "<div>\r\n  <form  [formGroup]=\"attandanceDetailFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Entry Place</label>\r\n      <input type=\"text\" formControlName=\"entryPlace\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.entryPlace.errors\">{{attandanceDetailFormGroup.controls.entryPlace.errors.maxTime.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Entry Time</label>\r\n      <input type=\"text\" formControlName=\"entryTime\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">To apply the validation of maxTime on 'Entry Time' field, then enter the value of 'Main Entry Gate' in Entry Place textbox.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.entryTime.errors\">{{attandanceDetailFormGroup.controls.entryTime.errors.maxTime.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Total In Time</label>\r\n      <input type=\"text\" formControlName=\"totalInTime\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">To apply the validation of maxTime on 'Total In Time' field, then enter the value of 'Main Entry Gate' in Entry Place textbox.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.totalInTime.errors\">{{attandanceDetailFormGroup.controls.totalInTime.errors.maxTime.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!attandanceDetailFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n",
        "model": "import {  maxTime,prop, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class AttandanceDetail {\r\n\r\n\t@prop()\r\n\tentryPlace: string;\r\n\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@maxTime({conditionalExpression:'x => x.entryPlace == \"Main Entry Gate\"'  ,value:'11:00' }) \r\n\tentryTime: string;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@maxTime({conditionalExpression:(x,y) => x.entryPlace == \"Main Entry Gate\"   ,value:'12:00' }) \r\n\ttotalInTime: string;\r\n\t\r\n\t\r\n}\r\n",
        "modelName": "attandance-detail.model.ts",
        "json": {}
    },
    "valueExampleFunction": {
        "notes": null,
        "component": null,
        "html": null,
        "model": "@maxTime({conditionalExpression:(x,y) => x.entryPlace == \"Main Entry Gate\"   ,value:'12:00' }) \r\ntotalInTime: string;\r\n",
        "modelName": null,
        "json": {}
    },
    "conditionalExpressionExampleString": {
        "notes": null,
        "component": null,
        "html": null,
        "model": "@maxTime({conditionalExpression:'x => x.entryPlace == \"Main Entry Gate\"'  ,value:'11:00' }) \r\nentryTime: string;\r\n",
        "modelName": null,
        "json": {}
    },
    "valueExampleString": {
        "notes": null,
        "component": null,
        "html": null,
        "model": "@maxTime({conditionalExpression:'x => x.entryPlace == \"Main Entry Gate\"'  ,value:'11:00' }) \r\nentryTime: string;\r\n",
        "modelName": null,
        "json": {}
    },
    "allowSecondsExample": {
        "notes": null,
        "component": null,
        "html": null,
        "model": "@maxTime({allowSeconds:true  ,value:'02:00:00' }) \r\ntotalOutTime: string;\r\n",
        "modelName": null,
        "json": {}
    },
    "allowSeconds": {
        "notes": null,
        "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { AttandanceDetail } from './attandance-detail.model';\r\n\r\n@Component({\r\n    selector: 'app-maxTime-allowSeconds',\r\n    templateUrl: './max-time-allow-seconds.component.html'\r\n})\r\nexport class MaxTimeAllowSecondsComponent implements OnInit {\r\n    attandanceDetailFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let attandanceDetail = new AttandanceDetail();\r\n        this.attandanceDetailFormGroup = this.formBuilder.formGroup(attandanceDetail);\r\n    }\r\n}\r\n",
        "html": "<div>\r\n  <form  [formGroup]=\"attandanceDetailFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Total Time Out</label>\r\n      <input type=\"text\" formControlName=\"totalOutTime\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This field allow seconds in input time.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.totalOutTime.errors\">{{attandanceDetailFormGroup.controls.totalOutTime.errors.maxTime.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!attandanceDetailFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n",
        "model": "import {  maxTime, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class AttandanceDetail {\r\n\r\n\t@maxTime({allowSeconds:true  ,value:'02:00:00' }) \r\n\ttotalOutTime: string;\r\n\t\r\n\t\r\n}\r\n",
        "modelName": "attandance-detail.model.ts",
        "json": {}
    },
    "messageExample": {
        "notes": null,
        "component": null,
        "html": null,
        "model": "@maxTime({message:'Please enter valid input'  ,fieldName:'closingTime' }) \r\nexitTime: string;\r\n",
        "modelName": null,
        "json": {}
    },
    "message": {
        "notes": null,
        "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { AttandanceDetail } from './attandance-detail.model';\r\n\r\n@Component({\r\n    selector: 'app-maxTime-message',\r\n    templateUrl: './max-time-message.component.html'\r\n})\r\nexport class MaxTimeMessageComponent implements OnInit {\r\n    attandanceDetailFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let attandanceDetail = new AttandanceDetail();\r\n        this.attandanceDetailFormGroup = this.formBuilder.formGroup(attandanceDetail);\r\n    }\r\n}\r\n",
        "html": "<div>\r\n  <form  [formGroup]=\"attandanceDetailFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Closing Time</label>\r\n      <input type=\"text\" formControlName=\"closingTime\" class=\"form-control\"  />\r\n      <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.closingTime.errors\">{{attandanceDetailFormGroup.controls.closingTime.errors.maxTime.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Exit Time</label>\r\n      <input type=\"text\" formControlName=\"exitTime\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.exitTime.errors\">{{attandanceDetailFormGroup.controls.exitTime.errors.maxTime.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!attandanceDetailFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n",
        "model": "import {  maxTime, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class AttandanceDetail {\r\n\r\n\t@maxTime({value:'23:30' }) \r\n\tclosingTime: string;\r\n\r\n\t@maxTime({message:'Please enter valid input'  ,fieldName:'closingTime' }) \r\n\texitTime: string;\r\n\t\r\n}\r\n",
        "modelName": "attandance-detail.model.ts",
        "json": {}
    },
    "fieldNameExample": {
        "notes": null,
        "component": null,
        "html": null,
        "model": "@maxTime({message:'Please enter valid input'  ,fieldName:'closingTime' }) \r\nexitTime: string;\r\n",
        "modelName": null,
        "json": {}
    },
    "fieldName": {
        "notes": null,
        "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { AttandanceDetail } from './attandance-detail.model';\r\n\r\n@Component({\r\n    selector: 'app-maxTime-fieldName',\r\n    templateUrl: './max-time-field-name.component.html'\r\n})\r\nexport class MaxTimeFieldNameComponent implements OnInit {\r\n    attandanceDetailFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let attandanceDetail = new AttandanceDetail();\r\n        this.attandanceDetailFormGroup = this.formBuilder.formGroup(attandanceDetail);\r\n    }\r\n}\r\n",
        "html": "<div>\r\n  <form  [formGroup]=\"attandanceDetailFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Closing Time</label>\r\n      <input type=\"text\" formControlName=\"closingTime\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.closingTime.errors\">{{attandanceDetailFormGroup.controls.closingTime.errors.maxTime.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Exit Time</label>\r\n      <input type=\"text\" formControlName=\"exitTime\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.exitTime.errors\">{{attandanceDetailFormGroup.controls.exitTime.errors.maxTime.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!attandanceDetailFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n",
        "model": "import {  maxTime, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class AttandanceDetail {\r\n\r\n\t@maxTime({value:'23:30' }) \r\n\tclosingTime: string;\r\n\t\r\n\t\r\n\t@maxTime({message:'Please enter valid input'  ,fieldName:'closingTime' }) \r\n\texitTime: string;\r\n\t\r\n\t\r\n}\r\n",
        "modelName": "attandance-detail.model.ts",
        "json": {}
    },
    "messageKeyExample": {
        "notes": null,
        "component": null,
        "html": null,
        "model": "@maxTime({messageKey:'maxTimeMessageKey'  ,fieldName:'totalInTime' }) \r\nnetInTime: string;\r\n",
        "modelName": null,
        "json": {}
    },
    "messageKey": {
        "notes": null,
        "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { AttandanceDetail } from './attandance-detail.model';\r\n\r\n@Component({\r\n    selector: 'app-maxTime-messageKey',\r\n    templateUrl: './max-time-message-key.component.html'\r\n})\r\nexport class MaxTimeMessageKeyComponent implements OnInit {\r\n    attandanceDetailFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let attandanceDetail = new AttandanceDetail();\r\n        this.attandanceDetailFormGroup = this.formBuilder.formGroup(attandanceDetail);\r\n    }\r\n}\r\n",
        "html": "<div>\r\n  <form  [formGroup]=\"attandanceDetailFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Total In Time</label>\r\n      <input type=\"text\" formControlName=\"totalInTime\" class=\"form-control\"  />\r\n      <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.totalInTime.errors\">{{attandanceDetailFormGroup.controls.totalInTime.errors.maxTime.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Net-In Time</label>\r\n      <input type=\"text\" formControlName=\"netInTime\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message using message key<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.netInTime.errors\">{{attandanceDetailFormGroup.controls.netInTime.errors.maxTime.message}}<br/></small>\t\t\r\n    </div>\r\n    <button [disabled]=\"!attandanceDetailFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n",
        "model": "import {  maxTime, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class AttandanceDetail {\r\n\r\n\t@maxTime({value:'12:30' }) \r\n\ttotalInTime: string;\r\n\r\n\t@maxTime({messageKey:'maxTimeMessageKey'  ,fieldName:'totalInTime' }) \r\n\tnetInTime: string;\r\n\t\r\n}\r\n",
        "modelName": "attandance-detail.model.ts",
        "json": {}
    },
    "dynamic": {
        "notes": null,
        "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\nimport { FormBuilderConfiguration,} from '@rxweb/reactive-form-validators';\r\n\r\nimport { AttandanceDetail } from './attandance-detail.model';\r\n\r\n@Component({\r\n    selector: 'app-maxTime-dynamic',\r\n    templateUrl: './max-time-dynamic.component.html'\r\n})\r\nexport class MaxTimeDynamicComponent implements OnInit {\r\n    attandanceDetailFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder,private http: HttpClient    ) { }\r\n\r\n    ngOnInit() {\r\n        let attandanceDetail = new AttandanceDetail();\r\n        let formBuilderConfiguration = new FormBuilderConfiguration();\r\n\t\tthis.http.get('assets/examples/reactive-form-validators/decorators/maxTime/dynamic/dynamic.json?v=' + environment.appVersion).subscribe(dynamic => {\r\n            formBuilderConfiguration.dynamicValidation = JSON.parse(JSON.stringify(dynamic));\r\n\t\t\tthis.attandanceDetailFormGroup = this.formBuilder.formGroup(attandanceDetail,formBuilderConfiguration);\r\n        })\r\n    }\r\n}\r\n",
        "html": "<div>\r\n  <form  *ngIf=\"attandanceDetailFormGroup\"  [formGroup]=\"attandanceDetailFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Entry Place</label>\r\n      <input type=\"text\" formControlName=\"entryPlace\" class=\"form-control\"   />\r\n      <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.entryPlace.errors\">{{attandanceDetailFormGroup.controls.entryPlace.errors.maxTime.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Closing Time</label>\r\n      <input type=\"text\" formControlName=\"closingTime\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.closingTime.errors\">{{attandanceDetailFormGroup.controls.closingTime.errors.maxTime.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Break Hours</label>\r\n      <input type=\"text\" formControlName=\"breakHours\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Value should be less than 00:10<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.breakHours.errors\">{{attandanceDetailFormGroup.controls.breakHours.errors.maxTime.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Entry Time</label>\r\n      <input type=\"text\" formControlName=\"entryTime\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">To apply the validation of maxTime on 'Entry Time' field, then enter the value of 'Main Entry Gate' in Entry Place textbox.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.entryTime.errors\">{{attandanceDetailFormGroup.controls.entryTime.errors.maxTime.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Total Time Out</label>\r\n      <input type=\"text\" formControlName=\"totalOutTime\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This field allow seconds in input time.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.totalOutTime.errors\">{{attandanceDetailFormGroup.controls.totalOutTime.errors.maxTime.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Exit Time</label>\r\n      <input type=\"text\" formControlName=\"exitTime\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.exitTime.errors\">{{attandanceDetailFormGroup.controls.exitTime.errors.maxTime.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Net-In Time</label>\r\n      <input type=\"text\" formControlName=\"netInTime\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message using message key<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.netInTime.errors\">{{attandanceDetailFormGroup.controls.netInTime.errors.maxTime.message}}<br/></small>\t\t\r\n    </div>\r\n    <button [disabled]=\"!attandanceDetailFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n",
        "model": "import {  maxTime,prop, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class AttandanceDetail {\r\n\r\n\t@prop()\r\n\tentryPlace: string;\r\n\r\n\t@prop()\r\n\tclosingTime: string;\r\n\r\n\t@prop()\r\n\tbreakHours: string;\r\n\r\n\t@prop()\r\n\tentryTime: string;\r\n\r\n\t@prop()\r\n\ttotalOutTime: string;\r\n\r\n\t@prop()\r\n\texitTime: string;\r\n\r\n\t@prop()\r\n\tnetInTime: string;\r\n\r\n}\r\n",
        "modelName": "attandance-detail.model.ts",
        "json": {
            "dynamic.json": "{\"entryPlace\":{},\"closingTime\":{\"maxTime\":{\"value\":\"23:30\"}},\"breakHours\":{\"maxTime\":{\"operator\":\"<\",\"value\":\"00:10\"}},\"entryTime\":{\"maxTime\":{\"conditionalExpression\":\"x => x.entryPlace == \\\"Main Entry Gate\\\"\",\"value\":\"11:00\"}},\"totalOutTime\":{\"maxTime\":{\"allowSeconds\":\"true\",\"value\":\"02:00:00\"}},\"exitTime\":{\"maxTime\":{\"message\":\"Please enter valid input\",\"fieldName\":\"closingTime\"}},\"netInTime\":{\"maxTime\":{\"messageKey\":\"maxTimeMessageKey\",\"fieldName\":\"totalInTime\"}}}"
        }
    },
    "add": {
        "notes": null,
        "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { AttandanceDetail } from './attandance-detail.model';\r\n\r\n@Component({\r\n    selector: 'app-maxTime-add',\r\n    templateUrl: './max-time-add.component.html'\r\n})\r\nexport class MaxTimeAddComponent implements OnInit {\r\n    attandanceDetailFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let attandanceDetail = new AttandanceDetail();\r\n        this.attandanceDetailFormGroup = this.formBuilder.formGroup(attandanceDetail);\r\n    }\r\n}\r\n",
        "html": "<div>\r\n  <form  [formGroup]=\"attandanceDetailFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Entry Time</label>\r\n      <input type=\"text\" formControlName=\"entryTime\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.entryTime.errors\">{{attandanceDetailFormGroup.controls.entryTime.errors.maxTime.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!attandanceDetailFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n",
        "model": "import {  maxTime, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class AttandanceDetail {\r\n\r\n\t@maxTime({value:'11:00' }) \r\n\tentryTime: string;\r\n\t\r\n\t\r\n}\r\n",
        "modelName": "attandance-detail.model.ts",
        "json": {}
    },
    "edit": {
        "notes": null,
        "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { AttandanceDetail } from './attandance-detail.model';\r\n\r\n@Component({\r\n    selector: 'app-maxTime-edit',\r\n    templateUrl: './max-time-edit.component.html'\r\n})\r\nexport class MaxTimeEditComponent implements OnInit {\r\n    attandanceDetailFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder,private http: HttpClient    ) { }\r\n\r\n    ngOnInit() {\r\n        this.http.get('assets/examples/reactive-form-validators/decorators/maxTime/edit/attandance-detail-data.json?v=' + environment.appVersion).subscribe(attandanceDetail => {\r\n            this.attandanceDetailFormGroup = this.formBuilder.formGroup<AttandanceDetail>(AttandanceDetail,attandanceDetail);\r\n        })\r\n    }\r\n}\r\n",
        "html": "<div>\r\n  <form  *ngIf=\"attandanceDetailFormGroup\"  [formGroup]=\"attandanceDetailFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Entry Time</label>\r\n      <input type=\"text\" formControlName=\"entryTime\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"attandanceDetailFormGroup.controls.entryTime.errors\">{{attandanceDetailFormGroup.controls.entryTime.errors.maxTime.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!attandanceDetailFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n",
        "model": "import {  maxTime, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class AttandanceDetail {\r\n\r\n\t@maxTime({value:'11:00' }) \r\n\tentryTime: string;\r\n\t\r\n\t\r\n}\r\n",
        "modelName": "attandance-detail.model.ts",
        "json": {
            "attandance-detail-data.json": "{\"entryTime\":\"'10:00'\"}"
        }
    }
}