{"rightSidebarLinks":[{"id":"greaterthanasync","title":"greaterThanAsync","subLink":null},{"id":"whentouse","title":"When to use","subLink":[]},{"id":"basicgreaterthanasyncvalidation","title":"Basic greaterThanAsync Validation","subLink":[]},{"id":"validatorconfig","title":"ValidatorConfig","subLink":[{"title":"message","id":"message","thirdLevelLink":[]},{"title":"messageKey","id":"messagekey","thirdLevelLink":[]},{"title":"value","id":"value","thirdLevelLink":[]}]},{"id":"completegreaterthanasyncexample","title":"Complete greaterThanAsync Example","subLink":[]}],"title":"greaterThanAsync","description":"Greater than validation validators will check that user's input is greater than related field input.","validatorType":"validators","validationTypeTitle":"Validators","type":"tabs","gitDocPath":"https://github.com/rxweb/rxweb.io/edit/master/docs/angular/reactive-forms/reactive-form-validators/async-validators/greaterThanAsync.md","category":"async-validators","subCategory":"Relational","linkTitle":"greaterThanAsync","tabArray":{"complete":[{"tabName":"Example","tabGroupContent":null,"content":"<div component=\"app-example-runner\" ref-component=\"app-greaterThanAsync-complete\"></div>\r\n"},{"tabName":"Component","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"greaterThanAsync-complete-component\"></div> \r\n"},{"tabName":"Html","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"greaterThanAsync-complete-html\"></div> \r\n"}]},"innerHtml":null,"htmlContent":"<div class=\"title-bar top_title\"><p>greaterThanAsync</p></div> <div class=\"title-bar\"><p>greater than validation validator will check that user's input is greater than related field input asynchronously.</p></div>\r\n<div class='row page-section' id= 'whentouse'>\r\n<div class='col-lg-12'>\r\n<h2 class='showHideElement' >When to use<a title='Link to this heading' class='link-header' href='/async-validators/greaterThanAsync/validators#whentouse'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Suppose you want to create a User form, which contains fields like Age, RetirementAge, MemberAge, VoterAge, OtherAge and you want the user to enter input which is greater than a related field input asynchronously. Here depending upon the requirement these scenarios may arise.   </p>\r\n<ol class='showHideElement'>\r\n  <li>Apply greaterThanAsync validation on retiermentAge based on fieldName.</li>\r\n  <li>Allow numbers which are greater than a perticular field like in VoterAge.</li>\r\n  <li>Adding Custom Message on OtherAge Field.</li>\r\n  <li>Shows the custom message on <span class='highlighted'>Joining Age</span> field by using <span class='highlighted'>messageKey</span> property.</li>\r\n  <data-scope scope=\"['decorator','validator']\">\r\n    <li>Apply greaterThanAsync validation dynamically based on server rules.</li>\r\n  </data-scope>\r\n</ol>\r\n<p class='showHideElement' >Letâ€™s see how greaterThanAsync validator fulfil the need.</p>\r\n</div></div>\r\n<div class='row page-section' id= 'basicgreaterthanasyncvalidation'>\r\n<div class='col-lg-12'>\r\n<h2>Basic greaterThanAsync Validation<a title='Link to this heading' class='link-header' href='/async-validators/greaterThanAsync/validators#basicgreaterthanasyncvalidation'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Through Angular FormBuilder service we create FormGroup in the component.</p>\r\n<p class='showHideElement' >Here we have covered Add form operations. </p>\r\n<div component=\"app-code\" key=\"greaterThanAsync-add-component\"></div> \r\n<p class='showHideElement' >Next, we need to write html code.</p>\r\n<div component=\"app-code\" key=\"greaterThanAsync-add-html\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-greaterThanAsync-add\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'validatorconfig'>\r\n<div class='col-lg-12'>\r\n<h2>ValidatorConfig<a title='Link to this heading' class='link-header' href='/async-validators/greaterThanAsync/validators#validatorconfig'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type : <span class='highlighted'>Observable</span></p>\r\n<p class='showHideElement' >validator config is used to dynamically resolve the value of the property according to the server rules by using the keyword <span class='highlighted'>of</span> as below </p>\r\n<p class='showHideElement' >Below options are not mandatory to use in the <span class='highlighted'>RxwebValidators.greaterThanAsync({validatorConfig:of({validatorConfig:of({&ltproperty_name&gt:&ltvalue&gt})})</span> validator. If needed then use the below options.</p>\r\n<table class=\"table table-bordered table-striped showHideElement\">\r\n<tr><th>Option</th><th>Description</th></tr>\r\n<tr><td><a (click)='scrollTo(\"#fieldname\")' title=\"fieldname\">fieldname</a></td><td>Greater than validation should be applied based on the <span class='highlighted'>fieldName</span> for compare other field value</td></tr>\r\n<tr><td><a (click)='scrollTo(\"#message\")' title=\"message\">message</a></td><td>To override the global configuration message and set the custom error message on respective FormControl</td></tr>\r\n<tr><td><a (click)='scrollTo(\"#messageKey\")' title=\"messageKey\">messageKey</a></td><td>messageKey property of BaseConfig can be used when the user wants to show a different custom validation message on some of their fields. User can define a custom messageKey globally by defining it in ReactiveFormConfig and set it in the message property of the validation.</td></tr>\r\n<tr><td><a (click)='scrollTo(\"#value\")' title=\"value\">value</a></td><td>Greater than validation provides <span class='highlighted'>value</span> property which is used To validate the formControl based upon configured static value.</td></tr>\r\n</table>\r\n</div></div>\r\n<div class='row page-section' id= 'message'>\r\n<div class='col-lg-12'>\r\n<h2>message<a title='Link to this heading' class='link-header' href='/async-validators/greaterThanAsync/validators#message'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type :  <span class='highlighted'>string</span> </p>\r\n<p class='showHideElement' >To override the global configuration message and set the custom message on respective FormControl.</p>\r\n<div component=\"app-code\" key=\"greaterThanAsync-messageExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-greaterThanAsync-message\" title=\"greaterThanAsync validator with message\" key=\"message\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'messagekey'>\r\n<div class='col-lg-12'>\r\n<h2>messageKey<a title='Link to this heading' class='link-header' href='/async-validators/greaterThanAsync/validators#messagekey'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type : <span class='highlighted'>string</span></p>\r\n<p class='showHideElement' >messageKey property of BaseConfig can be used when the user wants to show a different custom validation message on some of their fields. User can define a custom messageKey globally by defining it in ReactiveFormConfig and set it in the message property of the validation.</p>\r\n<div component=\"app-code\" key=\"greaterThanAsync-messageKeyExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-greaterThanAsync-messageKey\" title=\"greaterThanAsync validator with messageKey\" key=\"messageKey\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'value'>\r\n<div class='col-lg-12'>\r\n<h2>value<a title='Link to this heading' class='link-header' href='/async-validators/greaterThanAsync/validators#value'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type : <span class='highlighted'>number</span></p>\r\n<p class='showHideElement' >Greater than validation provides <span class='highlighted'>value</span> property which is used To validate the formControl based upon configured static value.</p>\r\n<div component=\"app-code\" key=\"greaterThanAsync-valueExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-greaterThanAsync-value\" title=\"greaterThanAsync validator with value\" key=\"value\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'completegreaterthanasyncexample'>\r\n<div class='col-lg-12'>\r\n<h2>Complete greaterThanAsync Example<a title='Link to this heading' class='link-header' href='/async-validators/greaterThanAsync/validators#completegreaterthanasyncexample'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >This Complete greaterThanAsync example which includes all the RelationalOperatorConfig properties will fulfil the requirement of scenarios 1, 2, and 3</p>\r\n<div component=\"app-tabs\" key=\"complete\"></div>\r\n</div></div>\r\n"}