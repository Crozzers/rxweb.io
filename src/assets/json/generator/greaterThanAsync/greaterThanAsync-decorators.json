{
  "complete": {
    "notes": null,
    "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-greaterThanAsync-complete',\r\n    templateUrl: './greater-than-async-complete.component.html'\r\n})\r\nexport class GreaterThanAsyncCompleteComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n}\r\n",
    "html": "<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Age<\/label>\r\n      <input type=\"text\" formControlName=\"age\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.age.errors\">{{userFormGroup.controls.age.errors.greaterThan.message}}<br/><\/small>\t\r\n    <\/div>\r\n    <div class=\"form-group\">\r\n      <label>Retirement Age<\/label>\r\n      <input type=\"text\" formControlName=\"retiermentAge\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Retirement Age should be greater than age<br/><\/small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.retiermentAge.errors\">{{userFormGroup.controls.retiermentAge.errors.greaterThan.message}}<br/><\/small>\t\r\n    <\/div>\r\n    <div class=\"form-group\">\r\n      <label>Minimum Age<\/label>\r\n      <input type=\"text\" formControlName=\"minimumAge\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.minimumAge.errors\">{{userFormGroup.controls.minimumAge.errors.greaterThan.message}}<br/><\/small>\t\r\n    <\/div>\r\n    <div class=\"form-group\">\r\n      <label>Other Age<\/label>\r\n      <input type=\"text\" formControlName=\"otherAge\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows custom message<br/><\/small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.otherAge.errors\">{{userFormGroup.controls.otherAge.errors.greaterThan.message}}<br/><\/small>\t\r\n    <\/div>\r\n    <div class=\"form-group\">\r\n      <label>Joining Age<\/label>\r\n      <input type=\"text\" formControlName=\"joiningAge\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows custom message based on message key<br/><\/small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.joiningAge.errors\">{{userFormGroup.controls.joiningAge.errors?.greaterThanMessageKey?.message}}<br/><\/small>\t\t\r\n    <\/div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit<\/button>\r\n  <\/form>\r\n<\/div>\r\n",
    "model": "import {  greaterThanAsync,prop, } from   \"@rxweb/reactive-form-validators\" \r\n\rimport { of } from \"rxjs\" \r\n\r\n   \r\n\r\nexport class User {\r\n\r\n\t@prop()\r\n\tage: number;\r\n\r\n\t@greaterThanAsync({validatorConfig:of({fieldName:'age'})}) \r\n\tretiermentAge: number;\r\n\t\r\n\t\r\n\t@greaterThanAsync({validatorConfig:of({value:18})}) \r\n\tminimumAge: number;\r\n\t\r\n\t\r\n\t@greaterThanAsync({validatorConfig:of({fieldName:'age'  ,message:'Please enter number greater than 0.'})}) \r\n\totherAge: number;\r\n\t\r\n\t\r\n\t@greaterThanAsync({validatorConfig:of({fieldName:'age'  ,messageKey:'greaterThanMessageKey'})}) \r\n\tjoiningAge: number;\r\n\t\r\n\t\r\n}\r\n",
    "modelName": "user.model.ts",
    "json": {}
  },
  "fieldNameExample": {
    "notes": null,
    "component": null,
    "html": null,
    "model": "@greaterThanAsync({validatorConfig:of({fieldName:'age'})}) \r\nretiermentAge: number;\r\n",
    "modelName": null,
    "json": {}
  },
  "fieldName": {
    "notes": null,
    "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-greaterThanAsync-fieldName',\r\n    templateUrl: './greater-than-async-field-name.component.html'\r\n})\r\nexport class GreaterThanAsyncFieldNameComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n}\r\n",
    "html": "<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Age<\/label>\r\n      <input type=\"text\" formControlName=\"age\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.age.errors\">{{userFormGroup.controls.age.errors.greaterThan.message}}<br/><\/small>\t\r\n    <\/div>\r\n    <div class=\"form-group\">\r\n      <label>Retirement Age<\/label>\r\n      <input type=\"text\" formControlName=\"retiermentAge\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Retirement Age should be greater than age<br/><\/small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.retiermentAge.errors\">{{userFormGroup.controls.retiermentAge.errors.greaterThan.message}}<br/><\/small>\t\r\n    <\/div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit<\/button>\r\n  <\/form>\r\n<\/div>\r\n",
    "model": "import {  greaterThanAsync,prop, } from   \"@rxweb/reactive-form-validators\" \r\n\rimport { of } from \"rxjs\" \r\n\r\n   \r\n\r\nexport class User {\r\n\r\n\t@prop()\r\n\tage: number;\r\n\r\n\t@greaterThanAsync({validatorConfig:of({fieldName:'age'})}) \r\n\tretiermentAge: number;\r\n\t\r\n\t\r\n}\r\n",
    "modelName": "user.model.ts",
    "json": {}
  },
  "valueExample": {
    "notes": null,
    "component": null,
    "html": null,
    "model": "@greaterThanAsync({validatorConfig:of({value:18})}) \r\nminimumAge: number;\r\n",
    "modelName": null,
    "json": {}
  },
  "value": {
    "notes": null,
    "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-greaterThanAsync-value',\r\n    templateUrl: './greater-than-async-value.component.html'\r\n})\r\nexport class GreaterThanAsyncValueComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n}\r\n",
    "html": "<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Minimum Age<\/label>\r\n      <input type=\"text\" formControlName=\"minimumAge\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.minimumAge.errors\">{{userFormGroup.controls.minimumAge.errors.greaterThan.message}}<br/><\/small>\t\r\n    <\/div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit<\/button>\r\n  <\/form>\r\n<\/div>\r\n",
    "model": "import {  greaterThanAsync, } from   \"@rxweb/reactive-form-validators\" \r\n\rimport { of } from \"rxjs\" \r\n\r\n   \r\n\r\nexport class User {\r\n\r\n\t@greaterThanAsync({validatorConfig:of({value:18})}) \r\n\tminimumAge: number;\r\n\t\r\n\t\r\n}\r\n",
    "modelName": "user.model.ts",
    "json": {}
  },
  "messageExample": {
    "notes": null,
    "component": null,
    "html": null,
    "model": "@greaterThanAsync({validatorConfig:of({fieldName:'age'  ,message:'Please enter number greater than 0.'})}) \r\notherAge: number;\r\n",
    "modelName": null,
    "json": {}
  },
  "message": {
    "notes": null,
    "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-greaterThanAsync-message',\r\n    templateUrl: './greater-than-async-message.component.html'\r\n})\r\nexport class GreaterThanAsyncMessageComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n}\r\n",
    "html": "<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Other Age<\/label>\r\n      <input type=\"text\" formControlName=\"otherAge\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows custom message<br/><\/small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.otherAge.errors\">{{userFormGroup.controls.otherAge.errors.greaterThan.message}}<br/><\/small>\t\r\n    <\/div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit<\/button>\r\n  <\/form>\r\n<\/div>\r\n",
    "model": "import {  greaterThanAsync, } from   \"@rxweb/reactive-form-validators\" \r\n\rimport { of } from \"rxjs\" \r\n\r\n   \r\n\r\nexport class User {\r\n\r\n\t@greaterThanAsync({validatorConfig:of({fieldName:'age'  ,message:'Please enter number greater than 0.'})}) \r\n\totherAge: number;\r\n\t\r\n\t\r\n}\r\n",
    "modelName": "user.model.ts",
    "json": {}
  },
  "messageKeyExample": {
    "notes": null,
    "component": null,
    "html": null,
    "model": "@greaterThanAsync({validatorConfig:of({fieldName:'age'  ,messageKey:'greaterThanMessageKey'})}) \r\njoiningAge: number;\r\n",
    "modelName": null,
    "json": {}
  },
  "messageKey": {
    "notes": null,
    "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-greaterThanAsync-messageKey',\r\n    templateUrl: './greater-than-async-message-key.component.html'\r\n})\r\nexport class GreaterThanAsyncMessageKeyComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n}\r\n",
    "html": "<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Joining Age<\/label>\r\n      <input type=\"text\" formControlName=\"joiningAge\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows custom message based on message key<br/><\/small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.joiningAge.errors\">{{userFormGroup.controls.joiningAge.errors.greaterThanMessageKey.message}}<br/><\/small>\t\t\r\n    <\/div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit<\/button>\r\n  <\/form>\r\n<\/div>\r\n",
    "model": "import {  greaterThanAsync, } from   \"@rxweb/reactive-form-validators\" \r\n\rimport { of } from \"rxjs\" \r\n\r\n   \r\n\r\nexport class User {\r\n\r\n\t@greaterThanAsync({validatorConfig:of({fieldName:'age'  ,messageKey:'greaterThanMessageKey'})}) \r\n\tjoiningAge: number;\r\n\t\r\n\t\r\n}\r\n",
    "modelName": "user.model.ts",
    "json": {}
  },
  "dynamic": {
    "notes": null,
    "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\nimport { FormBuilderConfiguration,} from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-greaterThanAsync-dynamic',\r\n    templateUrl: './greater-than-async-dynamic.component.html'\r\n})\r\nexport class GreaterThanAsyncDynamicComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder,private http: HttpClient    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        let formBuilderConfiguration = new FormBuilderConfiguration();\r\n\t\tthis.http.get('assets/examples/reactive-form-validators/decorators/greaterThanAsync/dynamic/dynamic.json?v=' + environment.appVersion).subscribe(dynamic => {\r\n            formBuilderConfiguration.dynamicValidation = JSON.parse(JSON.stringify(dynamic));\r\n\t\t\tthis.userFormGroup = this.formBuilder.formGroup(user,formBuilderConfiguration);\r\n       })})\r\n    }\r\n}\r\n",
    "html": "<div>\r\n  <form  *ngIf=\"userFormGroup\"  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Age<\/label>\r\n      <input type=\"text\" formControlName=\"age\" class=\"form-control\"   />\r\n      <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.age.errors\">{{userFormGroup.controls.age.errors.greaterThan.message}}<br/><\/small>\r\n    <\/div>\r\n    <div class=\"form-group\">\r\n      <label>Retirement Age<\/label>\r\n      <input type=\"text\" formControlName=\"retiermentAge\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Retirement Age should be greater than age<br/><\/small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.retiermentAge.errors\">{{userFormGroup.controls.retiermentAge.errors.greaterThan.message}}<br/><\/small>\t\r\n    <\/div>\r\n    <div class=\"form-group\">\r\n      <label>Minimum Age<\/label>\r\n      <input type=\"text\" formControlName=\"minimumAge\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.minimumAge.errors\">{{userFormGroup.controls.minimumAge.errors.greaterThan.message}}<br/><\/small>\t\r\n    <\/div>\r\n    <div class=\"form-group\">\r\n      <label>Other Age<\/label>\r\n      <input type=\"text\" formControlName=\"otherAge\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows custom message<br/><\/small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.otherAge.errors\">{{userFormGroup.controls.otherAge.errors.greaterThan.message}}<br/><\/small>\t\r\n    <\/div>\r\n    <div class=\"form-group\">\r\n      <label>Joining Age<\/label>\r\n      <input type=\"text\" formControlName=\"joiningAge\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows custom message based on message key<br/><\/small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.joiningAge.errors\">{{userFormGroup.controls.joiningAge.errors.greaterThanMessageKey.message}}<br/><\/small>\t\t\r\n    <\/div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit<\/button>\r\n  <\/form>\r\n<\/div>\r\n",
    "model": "import {  greaterThanAsync,prop, } from   \"@rxweb/reactive-form-validators\" \r\n\rimport { of } from \"rxjs\" \r\n\r\n   \r\n\r\nexport class User {\r\n\r\n\t@prop()\r\n\tage: number;\r\n\r\n\t@prop()\r\n\tretiermentAge: number;\r\n\r\n\t@prop()\r\n\tminimumAge: number;\r\n\r\n\t@prop()\r\n\totherAge: number;\r\n\r\n\t@prop()\r\n\tjoiningAge: number;\r\n\r\n}\r\n",
    "modelName": "user.model.ts",
    "json": {
      "dynamic.json": {
        "age": {},
        "retiermentAge": {
          "greaterThanAsync": {
            "fieldName": "age"
          }
        },
        "minimumAge": {
          "greaterThanAsync": {
            "value": "18"
          }
        },
        "otherAge": {
          "greaterThanAsync": {
            "fieldName": "age",
            "message": "Please enter number greater than 0."
          }
        },
        "joiningAge": {
          "greaterThanAsync": {
            "fieldName": "age",
            "messageKey": "greaterThanMessageKey"
          }
        }
      }
    }
  },
  "add": {
    "notes": null,
    "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-greaterThanAsync-add',\r\n    templateUrl: './greater-than-async-add.component.html'\r\n})\r\nexport class GreaterThanAsyncAddComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n}\r\n",
    "html": "<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Age<\/label>\r\n      <input type=\"text\" formControlName=\"age\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.age.errors\">{{userFormGroup.controls.age.errors.greaterThan.message}}<br/><\/small>\t\r\n    <\/div>\r\n    <div class=\"form-group\">\r\n      <label>Voter Age<\/label>\r\n      <input type=\"text\" formControlName=\"voterAge\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This is checking greater than validation for  Voter Age must be greater than to age.<br/><\/small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.voterAge.errors\">{{userFormGroup.controls.voterAge.errors.greaterThan.message}}<br/><\/small>\t\r\n    <\/div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit<\/button>\r\n  <\/form>\r\n<\/div>\r\n",
    "model": "import {  greaterThanAsync,prop, } from   \"@rxweb/reactive-form-validators\" \r\n\rimport { of } from \"rxjs\" \r\n\r\n   \r\n\r\nexport class User {\r\n\r\n\t@prop()\r\n\tage: number;\r\n\r\n\t@greaterThanAsync({validatorConfig:of({fieldName:'age'})}) \r\n\tvoterAge: number;\r\n\t\r\n\t\r\n}\r\n",
    "modelName": "user.model.ts",
    "json": {}
  },
  "edit": {
    "notes": null,
    "component": "import { Component, OnInit } from '@angular\/core';\r\nimport { FormGroup } from \"@angular\/forms\"\r\nimport { HttpClient } from '@angular\/common\/http';\r\n\r\nimport { RxFormBuilder } from '@rxweb\/reactive-form-validators';\r\n\r\nimport { User } from '.\/user.model';\r\n\r\n@Component({\r\n    selector: 'app-greaterThanAsync-edit',\r\n    templateUrl: '.\/greater-than-async-edit.component.html'\r\n})\r\nexport class GreaterThanAsyncEditComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder,private http: HttpClient    ) { }\r\n\r\n    ngOnInit() {\r\n        this.http.get('assets\/user-data.json?v=').subscribe(user => {\r\n            this.userFormGroup = this.formBuilder.formGroup<User>(User,user);\r\n       })\r\n    }\r\n}\r\n",
    "html": "<div>\r\n  <form  *ngIf=\"userFormGroup\"  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Age<\/label>\r\n      <input type=\"text\" formControlName=\"age\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.age.errors\">{{userFormGroup.controls.age.errors.greaterThan.message}}<br/><\/small>\t\r\n    <\/div>\r\n    <div class=\"form-group\">\r\n      <label>Voter Age<\/label>\r\n      <input type=\"text\" formControlName=\"voterAge\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This is checking greater than validation for Voter Age must be greater than to age.<br/><\/small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.voterAge.errors\">{{userFormGroup.controls.voterAge.errors.greaterThan.message}}<br/><\/small>\t\r\n    <\/div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit<\/button>\r\n  <\/form>\r\n<\/div>\r\n",
    "model": "import {  greaterThanAsync,prop, } from   \"@rxweb/reactive-form-validators\" \r\n\rimport { of } from \"rxjs\" \r\n\r\n   \r\n\r\nexport class User {\r\n\r\n\t@prop()\r\n\tage: number;\r\n\r\n\t@greaterThanAsync({validatorConfig:of({fieldName:'age'})}) \r\n\tvoterAge: number;\r\n\t\r\n\t\r\n}\r\n",
    "modelName": "user.model.ts",
    "json": {
      "user-data.json": {
        "age": "18",
        "voterAge": "20"
      }
    }
  }
}