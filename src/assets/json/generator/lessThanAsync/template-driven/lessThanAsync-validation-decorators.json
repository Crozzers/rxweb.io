{"complete":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-lessThanAsync-complete-template-driven-validation-decorators',\r\n    templateUrl: './less-than-async-complete.component.html'\r\n})\r\nexport class LessThanAsyncCompleteTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\" [rxwebForm]=\"userForm\" [model]=\"user\">\r\n    <div class=\"form-group\">\r\n      <label>Obtained Marks</label>\r\n\t    <input type=\"text\" name=\"obtainedMarks\" [(ngModel)]=\"user.obtainedMarks\"  class=\"form-control\" />\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.obtainedMarks?.errors\">{{userForm.controls?.obtainedMarks?.errors?.lessThan.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Other Activity Marks</label>\r\n\t    <input type=\"text\" name=\"otherActivityMarks\" [(ngModel)]=\"user.otherActivityMarks\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">Other Activity Marks less than to Obtained marks<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.otherActivityMarks?.errors\">{{userForm.controls?.otherActivityMarks?.errors?.lessThan.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Maximum Age</label>\r\n\t    <input type=\"text\" name=\"maximumAge\" [(ngModel)]=\"user.maximumAge\"  class=\"form-control\" />\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.maximumAge?.errors\">{{userForm.controls?.maximumAge?.errors?.lessThan.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Other Marks</label>\r\n\t    <input type=\"text\" name=\"otherMarks\" [(ngModel)]=\"user.otherMarks\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.otherMarks?.errors\">{{userForm.controls?.otherMarks?.errors?.lessThan.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Discipline Marks</label>\r\n\t    <input type=\"text\" name=\"disciplineMarks\" [(ngModel)]=\"user.disciplineMarks\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">Shows custom message based on message key<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.disciplineMarks?.errors\">{{userForm.controls?.disciplineMarks?.errors?.lessThan.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  lessThanAsync,prop, } from   \"@rxweb/reactive-form-validators\" \r\n\rimport { of } from \"rxjs\" \r\n\r\n   \r\n\r\nexport class User {\r\n\r\n\t@prop()\r\n\tobtainedMarks: number;\r\n\r\n\t@lessThanAsync({validatorConfig:of({fieldName:'obtainedMarks'})}) \r\n\totherActivityMarks: number;\r\n\t\r\n\t\r\n\t@lessThanAsync({validatorConfig:of({value:60})}) \r\n\tmaximumAge: number;\r\n\t\r\n\t\r\n\t@lessThanAsync({validatorConfig:of({fieldName:'obtainedMarks'  ,message:'Please enter number greater than 100.'})}) \r\n\totherMarks: number;\r\n\t\r\n\t\r\n\t@lessThanAsync({validatorConfig:of({fieldName:'obtainedMarks'  ,messageKey:'lessThanMessageKey'})}) \r\n\tdisciplineMarks: number;\r\n\t\r\n\t\r\n}\r\n","modelName":"user.model.ts","json":{}},"fieldNameExample":{"notes":null,"component":null,"html":null,"model":"@lessThanAsync({validatorConfig:of({fieldName:'obtainedMarks'})}) \r\notherActivityMarks: number;\r\n","modelName":null,"json":{}},"fieldName":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-lessThanAsync-fieldName-template-driven-validation-decorators',\r\n    templateUrl: './less-than-async-field-name.component.html'\r\n})\r\nexport class LessThanAsyncFieldNameTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\" [rxwebForm]=\"userForm\" [model]=\"user\">\r\n    <div class=\"form-group\">\r\n      <label>Obtained Marks</label>\r\n\t    <input type=\"text\" name=\"obtainedMarks\" [(ngModel)]=\"user.obtainedMarks\"  class=\"form-control\" />\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.obtainedMarks?.errors\">{{userForm.controls?.obtainedMarks?.errors?.lessThan.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Other Activity Marks</label>\r\n\t    <input type=\"text\" name=\"otherActivityMarks\" [(ngModel)]=\"user.otherActivityMarks\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">Other Activity Marks less than to Obtained marks<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.otherActivityMarks?.errors\">{{userForm.controls?.otherActivityMarks?.errors?.lessThan.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  lessThanAsync,prop, } from   \"@rxweb/reactive-form-validators\" \r\n\rimport { of } from \"rxjs\" \r\n\r\n   \r\n\r\nexport class User {\r\n\r\n\t@prop()\r\n\tobtainedMarks: number;\r\n\r\n\t@lessThanAsync({validatorConfig:of({fieldName:'obtainedMarks'})}) \r\n\totherActivityMarks: number;\r\n\t\r\n\t\r\n}\r\n","modelName":"user.model.ts","json":{}},"valueExample":{"notes":null,"component":null,"html":null,"model":"@lessThanAsync({validatorConfig:of({value:60})}) \r\nmaximumAge: number;\r\n","modelName":null,"json":{}},"value":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-lessThanAsync-value-template-driven-validation-decorators',\r\n    templateUrl: './less-than-async-value.component.html'\r\n})\r\nexport class LessThanAsyncValueTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\" [rxwebForm]=\"userForm\" [model]=\"user\">\r\n    <div class=\"form-group\">\r\n      <label>Maximum Age</label>\r\n\t    <input type=\"text\" name=\"maximumAge\" [(ngModel)]=\"user.maximumAge\"  class=\"form-control\" />\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.maximumAge?.errors\">{{userForm.controls?.maximumAge?.errors?.lessThan.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  lessThanAsync, } from   \"@rxweb/reactive-form-validators\" \r\n\rimport { of } from \"rxjs\" \r\n\r\n   \r\n\r\nexport class User {\r\n\r\n\t@lessThanAsync({validatorConfig:of({value:60})}) \r\n\tmaximumAge: number;\r\n\t\r\n\t\r\n}\r\n","modelName":"user.model.ts","json":{}},"messageExample":{"notes":null,"component":null,"html":null,"model":"@lessThanAsync({validatorConfig:of({fieldName:'obtainedMarks'  ,message:'Please enter number greater than 100.'})}) \r\notherMarks: number;\r\n","modelName":null,"json":{}},"message":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-lessThanAsync-message-template-driven-validation-decorators',\r\n    templateUrl: './less-than-async-message.component.html'\r\n})\r\nexport class LessThanAsyncMessageTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\" [rxwebForm]=\"userForm\" [model]=\"user\">\r\n    <div class=\"form-group\">\r\n      <label>Other Marks</label>\r\n\t    <input type=\"text\" name=\"otherMarks\" [(ngModel)]=\"user.otherMarks\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.otherMarks?.errors\">{{userForm.controls?.otherMarks?.errors?.lessThan.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  lessThanAsync, } from   \"@rxweb/reactive-form-validators\" \r\n\rimport { of } from \"rxjs\" \r\n\r\n   \r\n\r\nexport class User {\r\n\r\n\t@lessThanAsync({validatorConfig:of({fieldName:'obtainedMarks'  ,message:'Please enter number greater than 100.'})}) \r\n\totherMarks: number;\r\n\t\r\n\t\r\n}\r\n","modelName":"user.model.ts","json":{}},"messageKeyExample":{"notes":null,"component":null,"html":null,"model":"@lessThanAsync({validatorConfig:of({fieldName:'obtainedMarks'  ,messageKey:'lessThanMessageKey'})}) \r\ndisciplineMarks: number;\r\n","modelName":null,"json":{}},"messageKey":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-lessThanAsync-messageKey-template-driven-validation-decorators',\r\n    templateUrl: './less-than-async-message-key.component.html'\r\n})\r\nexport class LessThanAsyncMessageKeyTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\" [rxwebForm]=\"userForm\" [model]=\"user\">\r\n    <div class=\"form-group\">\r\n      <label>Discipline Marks</label>\r\n\t    <input type=\"text\" name=\"disciplineMarks\" [(ngModel)]=\"user.disciplineMarks\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">Shows custom message based on message key<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.disciplineMarks?.errors\">{{userForm.controls?.disciplineMarks?.errors?.lessThan.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  lessThanAsync, } from   \"@rxweb/reactive-form-validators\" \r\n\rimport { of } from \"rxjs\" \r\n\r\n   \r\n\r\nexport class User {\r\n\r\n\t@lessThanAsync({validatorConfig:of({fieldName:'obtainedMarks'  ,messageKey:'lessThanMessageKey'})}) \r\n\tdisciplineMarks: number;\r\n\t\r\n\t\r\n}\r\n","modelName":"user.model.ts","json":{}},"add":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-lessThanAsync-add-template-driven-validation-decorators',\r\n    templateUrl: './less-than-async-add.component.html'\r\n})\r\nexport class LessThanAsyncAddTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\" [rxwebForm]=\"userForm\" [model]=\"user\">\r\n    <div class=\"form-group\">\r\n      <label>Marks</label>\r\n\t    <input type=\"text\" name=\"marks\" [(ngModel)]=\"user.marks\"  class=\"form-control\" />\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.marks?.errors\">{{userForm.controls?.marks?.errors?.lessThan.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Passing Marks</label>\r\n\t    <input type=\"text\" name=\"passingMarks\" [(ngModel)]=\"user.passingMarks\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">This is checking less than validation for PassingMarks must be less than to marks.<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.passingMarks?.errors\">{{userForm.controls?.passingMarks?.errors?.lessThan.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  lessThanAsync,prop, } from   \"@rxweb/reactive-form-validators\" \r\n\rimport { of } from \"rxjs\" \r\n\r\n   \r\n\r\nexport class User {\r\n\r\n\t@prop()\r\n\tmarks: number;\r\n\r\n\t@lessThanAsync({validatorConfig:of({fieldName:'marks'})}) \r\n\tpassingMarks: number;\r\n\t\r\n\t\r\n}\r\n","modelName":"user.model.ts","json":{}}}