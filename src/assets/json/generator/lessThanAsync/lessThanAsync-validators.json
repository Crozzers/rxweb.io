{"complete":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-lessThanAsync-complete-validator',\r\n    templateUrl: './less-than-async-complete.component.html'\r\n})\r\nexport class LessThanAsyncCompleteValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n            obtainedMarks:['',], \r\n            otherActivityMarks:['', RxwebValidators.lessThanAsync({validatorConfig:of({fieldName:'obtainedMarks'})})], \r\n            maximumAge:['', RxwebValidators.lessThanAsync({validatorConfig:of({value:60})})], \r\n            otherMarks:['', RxwebValidators.lessThanAsync({validatorConfig:of({fieldName:'obtainedMarks'  ,message:'Please enter number greater than 100.'})})], \r\n            disciplineMarks:['', RxwebValidators.lessThanAsync({validatorConfig:of({fieldName:'obtainedMarks'  ,messageKey:'lessThanMessageKey'})})], \r\n       });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Obtained Marks</label>\r\n      <input type=\"text\" formControlName=\"obtainedMarks\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.obtainedMarks.errors\">{{userFormGroup.controls.obtainedMarks.errors.lessThan.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Other Activity Marks</label>\r\n      <input type=\"text\" formControlName=\"otherActivityMarks\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Other Activity Marks less than to Obtained marks<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.otherActivityMarks.errors\">{{userFormGroup.controls.otherActivityMarks.errors.lessThan.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Maximum Age</label>\r\n      <input type=\"text\" formControlName=\"maximumAge\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.maximumAge.errors\">{{userFormGroup.controls.maximumAge.errors.lessThan.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Other Marks</label>\r\n      <input type=\"text\" formControlName=\"otherMarks\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.otherMarks.errors\">{{userFormGroup.controls.otherMarks.errors.lessThan.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Discipline Marks</label>\r\n      <input type=\"text\" formControlName=\"disciplineMarks\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows custom message based on message key<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.disciplineMarks.errors\">{{userFormGroup.controls.disciplineMarks.errors.lessThanMessageKey.message}}<br/></small>\t\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"json":{}},"fieldNameExample":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.lessThanAsync({validatorConfig:of({fieldName:'obtainedMarks'})});\r\n","modelName":null,"json":{}},"fieldName":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-lessThanAsync-fieldName-validator',\r\n    templateUrl: './less-than-async-field-name.component.html'\r\n})\r\nexport class LessThanAsyncFieldNameValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n            obtainedMarks:['',], \r\n            otherActivityMarks:['', RxwebValidators.lessThanAsync({validatorConfig:of({fieldName:'obtainedMarks'})})], \r\n       });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Obtained Marks</label>\r\n      <input type=\"text\" formControlName=\"obtainedMarks\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.obtainedMarks.errors\">{{userFormGroup.controls.obtainedMarks.errors.lessThan.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Other Activity Marks</label>\r\n      <input type=\"text\" formControlName=\"otherActivityMarks\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Other Activity Marks less than to Obtained marks<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.otherActivityMarks.errors\">{{userFormGroup.controls.otherActivityMarks.errors.lessThan.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"json":{}},"valueExample":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.lessThanAsync({validatorConfig:of({value:60})});\r\n","modelName":null,"json":{}},"value":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-lessThanAsync-value-validator',\r\n    templateUrl: './less-than-async-value.component.html'\r\n})\r\nexport class LessThanAsyncValueValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n            maximumAge:['', RxwebValidators.lessThanAsync({validatorConfig:of({value:60})})], \r\n       });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Maximum Age</label>\r\n      <input type=\"text\" formControlName=\"maximumAge\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.maximumAge.errors\">{{userFormGroup.controls.maximumAge.errors.lessThan.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"json":{}},"messageExample":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.lessThanAsync({validatorConfig:of({fieldName:'obtainedMarks'  ,message:'Please enter number greater than 100.'})});\r\n","modelName":null,"json":{}},"message":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-lessThanAsync-message-validator',\r\n    templateUrl: './less-than-async-message.component.html'\r\n})\r\nexport class LessThanAsyncMessageValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n            otherMarks:['', RxwebValidators.lessThanAsync({validatorConfig:of({fieldName:'obtainedMarks'  ,message:'Please enter number greater than 100.'})})], \r\n       });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Other Marks</label>\r\n      <input type=\"text\" formControlName=\"otherMarks\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.otherMarks.errors\">{{userFormGroup.controls.otherMarks.errors.lessThan.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"json":{}},"messageKeyExample":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.lessThanAsync({validatorConfig:of({fieldName:'obtainedMarks'  ,messageKey:'lessThanMessageKey'})});\r\n","modelName":null,"json":{}},"messageKey":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-lessThanAsync-messageKey-validator',\r\n    templateUrl: './less-than-async-message-key.component.html'\r\n})\r\nexport class LessThanAsyncMessageKeyValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n            disciplineMarks:['', RxwebValidators.lessThanAsync({validatorConfig:of({fieldName:'obtainedMarks'  ,messageKey:'lessThanMessageKey'})})], \r\n       });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Discipline Marks</label>\r\n      <input type=\"text\" formControlName=\"disciplineMarks\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows custom message based on message key<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.disciplineMarks.errors\">{{userFormGroup.controls.disciplineMarks.errors.lessThanMessageKey.message}}<br/></small>\t\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"json":{}},"dynamic":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormBuilderConfiguration,RxFormBuilder} from '@rxweb/reactive-form-validators';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n    selector: 'app-lessThanAsync-dynamic-validator',\r\n    templateUrl: './less-than-async-dynamic.component.html'\r\n})\r\nexport class LessThanAsyncDynamicValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: RxFormBuilder , private http: HttpClient )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n\t\tlet formBuilderConfiguration = new FormBuilderConfiguration();\r\n\t\tthis.http.get('assets/examples/reactive-form-validators/validators/lessThanAsync/dynamic/dynamic.json?v='+environment.appVersion).subscribe(dynamic => {\r\n\t\t\tformBuilderConfiguration.dynamicValidation = JSON.parse(JSON.stringify(dynamic));\r\n\t\t\tvar user = { obtainedMarks:'', otherActivityMarks:'', maximumAge:'', otherMarks:'', disciplineMarks:'',  }\r\n\t\t\tthis.userFormGroup = this.formBuilder.group(user,formBuilderConfiguration);\r\n\t\t})\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  *ngIf=\"userFormGroup\"  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Obtained Marks</label>\r\n      <input type=\"text\" formControlName=\"obtainedMarks\" class=\"form-control\"   />\r\n      <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.obtainedMarks.errors\">{{userFormGroup.controls.obtainedMarks.errors.lessThan.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Other Activity Marks</label>\r\n      <input type=\"text\" formControlName=\"otherActivityMarks\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Other Activity Marks less than to Obtained marks<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.otherActivityMarks.errors\">{{userFormGroup.controls.otherActivityMarks.errors.lessThan.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Maximum Age</label>\r\n      <input type=\"text\" formControlName=\"maximumAge\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.maximumAge.errors\">{{userFormGroup.controls.maximumAge.errors.lessThan.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Other Marks</label>\r\n      <input type=\"text\" formControlName=\"otherMarks\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.otherMarks.errors\">{{userFormGroup.controls.otherMarks.errors.lessThan.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Discipline Marks</label>\r\n      <input type=\"text\" formControlName=\"disciplineMarks\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows custom message based on message key<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.disciplineMarks.errors\">{{userFormGroup.controls.disciplineMarks.errors.lessThanMessageKey.message}}<br/></small>\t\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"json":{"dynamic.json":"{\"obtainedMarks\":{},\"otherActivityMarks\":{\"lessThanAsync\":{\"fieldName\":\"obtainedMarks\"}},\"maximumAge\":{\"lessThanAsync\":{\"value\":\"60\"}},\"otherMarks\":{\"lessThanAsync\":{\"fieldName\":\"obtainedMarks\",\"message\":\"Please enter number greater than 100.\"}},\"disciplineMarks\":{\"lessThanAsync\":{\"fieldName\":\"obtainedMarks\",\"messageKey\":\"lessThanMessageKey\"}}}"}},"add":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-lessThanAsync-add-validator',\r\n    templateUrl: './less-than-async-add.component.html'\r\n})\r\nexport class LessThanAsyncAddValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n            marks:['',], \r\n            passingMarks:['', RxwebValidators.lessThanAsync({validatorConfig:of({fieldName:'marks'})})], \r\n       });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Marks</label>\r\n      <input type=\"text\" formControlName=\"marks\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.marks.errors\">{{userFormGroup.controls.marks.errors.lessThan.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Passing Marks</label>\r\n      <input type=\"text\" formControlName=\"passingMarks\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This is checking less than validation for PassingMarks must be less than to marks.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.passingMarks.errors\">{{userFormGroup.controls.passingMarks.errors.lessThan.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"json":{}}}