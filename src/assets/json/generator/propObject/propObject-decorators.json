{
    "add": {
        "notes": null,
        "component": "import { Component, OnInit } from '@angular\/core';\r\nimport { FormGroup } from \"@angular\/forms\"\r\n\r\nimport { RxFormBuilder } from '@rxweb\/reactive-form-validators';\r\n\r\nimport { User,Address } from '.\/propObject.model';\r\n\r\n@Component({\r\n    selector: 'app-propObject-add',\r\n    templateUrl: '.\/prop-object-add.component.html'\r\n})\r\nexport class PropObjectAddComponent implements OnInit {\r\n\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        user.address = new Address();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n}\r\n",
        "html": "<form *ngIf=\"userFormGroup\" [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n        <label>Email Address<\/label>\r\n        <input type=\"text\" formControlName=\"emailAddress\" class=\"form-control\" \/>\r\n    <\/div>\r\n    <div [formGroup]=\"userFormGroup.controls.address\">\r\n        <div class=\"form-group\">\r\n            <label>City<\/label>\r\n            <input type=\"text\" formControlName=\"city\" class=\"form-control\" \/>\r\n        <\/div>\r\n        <div class=\"form-group\">\r\n            <label>Country<\/label>\r\n            <input type=\"text\" formControlName=\"country\" class=\"form-control\" \/>\r\n        <\/div>\r\n    <\/div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit<\/button>\r\n<\/form>",
        "model": "import { prop, propObject } from \"@rxweb\/reactive-form-validators\"\r\n\r\nexport class Address {\r\n  @prop()\r\n  city: string;\r\n\r\n  @prop()\r\n  country: string;\r\n}\r\n\r\nexport class User {\r\n\r\n  @prop()\r\n  emailAddress: string;\r\n\r\n  @propObject(Address)\r\n  address: Address;\r\n}\r\n",
        "modelName": "propObject.model.ts",
        "jsonName": null,
        "json": null
    },
    "server":{
        "notes": null,
        "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder, FormBuilderConfiguration } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User,Address } from './propObject.model';\r\n\r\n@Component({\r\n    selector: 'app-propObject-server',\r\n    templateUrl: './prop-object-server.component.html'\r\n})\r\nexport class PropObjectServerComponent implements OnInit {\r\n\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        user.address = new Address();\r\n        let formBuilderConfiguration = new FormBuilderConfiguration();\r\n        let userData = {\r\n            City:'Ahmedabad',\r\n            Country:'India',\r\n            email_Address:'bharat.patel@gmail.com',\r\n        };\r\n        formBuilderConfiguration.dynamicValidation = JSON.parse(JSON.stringify(userData));\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n}",
        "html": "<form *ngIf=\"userFormGroup\" [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n        <label>Email Address<\/label>\r\n        <input type=\"text\" formControlName=\"emailAddress\" class=\"form-control\" \/>\r\n    <\/div>\r\n    <div [formGroup]=\"userFormGroup.controls.address\">\r\n        <div class=\"form-group\">\r\n            <label>City<\/label>\r\n            <input type=\"text\" formControlName=\"city\" class=\"form-control\" \/>\r\n        <\/div>\r\n        <div class=\"form-group\">\r\n            <label>Country<\/label>\r\n            <input type=\"text\" formControlName=\"country\" class=\"form-control\" \/>\r\n        <\/div>\r\n    <\/div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit<\/button>\r\n<\/form>",
        "model": "import { prop, propObject } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class Address {\r\n    @prop({name:'City'})\r\n    city: string;\r\n  \r\n    @prop({name:'Country'})\r\n    country: string;\r\n  }\r\n  \r\n  export class User {\r\n  \r\n    @prop({name:'email_address'})\r\n    emailAddress: string;\r\n    \r\n    @propObject(Address)\r\n    address: Address;\r\n  }\r\n",
        "modelName": "propObject.model.ts",
        "jsonName": null,
        "json": null  
    },
    "default":{
        "notes": null,
        "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User,Address } from './propObject.model';\r\n\r\n@Component({\r\n    selector: 'app-propObject-default',\r\n    templateUrl: './prop-object-default.component.html'\r\n})\r\nexport class PropObjectDefaultComponent implements OnInit {\r\n\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        user.address = new Address();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n}\r\n",
        "html": "<form *ngIf=\"userFormGroup\" [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n        <label>Email Address<\/label>\r\n        <input type=\"text\" formControlName=\"emailAddress\" class=\"form-control\" \/>\r\n    <\/div>\r\n    <div [formGroup]=\"userFormGroup.controls.address\">\r\n        <div class=\"form-group\">\r\n            <label>City<\/label>\r\n            <input type=\"text\" formControlName=\"city\" class=\"form-control\" \/>\r\n        <\/div>\r\n        <div class=\"form-group\">\r\n            <label>Country<\/label>\r\n            <input type=\"text\" formControlName=\"country\" class=\"form-control\" \/>\r\n        <\/div>\r\n    <\/div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit<\/button>\r\n<\/form>>",
        "model": "import { prop, propObject } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class Address {\r\n    @prop({defaultValue:'Ahmedabad'})\r\n    city: string;\r\n  \r\n    @prop({defaultValue:'India'})\r\n    country: string;\r\n  }\r\n  \r\n  export class User {\r\n  \r\n    @prop({defaultValue:'bharat.patel@gmail.com'})\r\n    emailAddress: string;\r\n    \r\n    @propObject(Address)\r\n    address: Address;\r\n  }",
        "modelName": "propObject.model.ts",
        "jsonName": null,
        "json": null  
    }
}