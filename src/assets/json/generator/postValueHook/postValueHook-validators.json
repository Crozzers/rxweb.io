{
    "complete": {
        "notes": "Hooks",
        "component": "import { Component, OnInit } from \"@angular/core\";\r\nimport { DynamicFormBuildConfig, DynamicFormConfiguration, RxDynamicFormBuilder } from \"@rxweb/reactive-dynamic-forms\";\r\nimport { UserModel } from \"./user.model\";\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-postValueHook-complete',\r\n  templateUrl: './post-value-hook-complete.component.html'\r\n})\r\n\r\nexport class PostValueHookCompleteComponent implements OnInit {\r\n  serverData = [\r\n    {\r\n      name: 'quantity',\r\n      type: 'text',\r\n      ui: {\r\n        label: 'Enter Quantity'\r\n      },\r\n      modelName: 'quantityModel'\r\n    },\r\n    {\r\n      name: 'price',\r\n      type: 'text',\r\n      ui: {\r\n        label:\"Enter Price\"\r\n      },\r\n      modelName: 'userModel'\r\n    },\r\n    {\r\n      name: 'totalAmount',\r\n      type: 'text',\r\n      ui: {\r\n        label: \"Total amount\"\r\n      }\r\n    }\r\n  ]\r\n\r\n  uiBindings: string[] = [\"quantity\", \"price\", \"totalAmount\"];\r\n  dynamicFormBuildConfig: DynamicFormBuildConfig;\r\n  constructor(private formBuilder: RxDynamicFormBuilder) { }\r\n  ngOnInit() {\r\n    this.dynamicFormBuildConfig = this.formBuilder.formGroup(this.serverData, {\r\n      controlConfigModels: [\r\n        { modelName: \"userModel\", model: UserModel },\r\n       ]\r\n    });\r\n  }\r\n}",
        "html": "<form [formGroup]=\"dynamicFormBuildConfig.formGroup\">\r\n    <div viewMode=\"basic\" [rxwebDynamicForm]=\"dynamicFormBuildConfig\" [uiBindings]=\"uiBindings\"></div>\r\n</form>",
        "model": "import { FormControlConfig, Hooks } from '@rxweb/reactive-dynamic-forms'\r\n\r\nexport class UserModel extends FormControlConfig {\r\n\r\n\r\n  hooks: Hooks = {\r\n    postValue: () => {\r\n      if (this.controlsConfig.quantity.value && this.controlsConfig.price.value) {\r\n        this.controlsConfig.totalAmount.value = this.controlsConfig.quantity.value * this.controlsConfig.price.value;\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n}",
        "modelName": "user.model.ts",
        "json": {}
    }  
}