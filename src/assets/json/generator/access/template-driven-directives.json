{"rightSidebarLinks":[{"id":"access","title":"access","subLink":null},{"id":"anonymous","title":"anonymous","subLink":[]},{"id":"access","title":"access","subLink":[]}],"title":"access","description":"","validatorType":"template-driven","validationTypeTitle":"Template Driven","type":"simple","gitDocPath":"https://github.com/rxweb/rxweb.io/edit/master/docs/angular/routes/access.md","category":"router","subCategory":null,"linkTitle":"access","tabArray":{},"innerHtml":null,"htmlContent":"<div class='row page-section' id= 'anonymous'>\r\n<div class='col-lg-12'>\r\n<h2>anonymous<a title='Link to this heading' class='link-header' href='/router/access/template-driven/directives#anonymous'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Authenticated APIs need an authentication token for accessing the api in the web application but some API need an authentication by pass. For example : Login.</p>\r\n<p class='showHideElement' >For such Api we need <span class='highlighted'>@anonymous</span> decorator in the component  </p>\r\n<div component=\"app-code\" key=\"access-anonymous-model\"></div> \r\n<p class='showHideElement' >The second step is to pass the <span class='highlighted'>@anonymous</span> decorator into the component as below </p>\r\n<div component=\"app-code\" key=\"access-anonymous-component\"></div> \r\n</div></div>\r\n<div class='row page-section' id= 'access'>\r\n<div class='col-lg-12'>\r\n<h2>access<a title='Link to this heading' class='link-header' href='/router/access/template-driven/directives#access'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >While performing role based authorization, It becomes important to maintain it on the client side as well. <span class='highlighted'>@access</span> is used for managing the access based upon the role which is used for adjudging the role access based upon the application module and action.</p>\r\n<table class=\"table table-bordered table-striped\">\r\n<tr><th>Parameter</th><th>Description</th></tr>\r\n<tr><td>accessLevel</td><td>Access level based upon the module</td></tr>\r\n<tr><td>action</td><td>name of the action(HTTP Verb)</td></tr>\r\n</table>\r\n<div component=\"app-code\" key=\"access-complete-model\"></div> \r\n<p class='showHideElement' >The second step is to pass the <span class='highlighted'>@access</span> decorator into the component as below </p>\r\n<div component=\"app-code\" key=\"access-complete-component\"></div> \r\n</div></div>\r\n"}