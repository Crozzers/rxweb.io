{
    "complete": {
        "notes": ["ui-bindings"],
        "component": "import { Component, OnInit } from \"@angular/core\";\r\nimport { DynamicFormBuildConfig, DynamicFormConfiguration, AbstractControlConfig, dynamicComponent, RxDynamicFormBuilder } from \"@rxweb/reactive-dynamic-forms\";\r\nimport { ArrayComponent } from \"./array/array-complete.component\";\r\n\r\n@Component({\r\n    selector: 'app-nestedformarray-complete',\r\n    templateUrl: './nestedformarray-complete.component.html',\r\n    entryComponents: [ArrayComponent]\r\n  })\r\n  \r\n  export class NestedformarrayCompleteComponent implements OnInit {\r\n  \r\n    serverData: Array<{ [key: string]: any }> = [\r\n      {\r\n        name: \"hobbies\",\r\n        type: \"array\",\r\n        controlConfigs: {\r\n          name: {\r\n            type: 'text',\r\n            actionKeyNames: [],\r\n            validators: {\r\n              required: true\r\n            },\r\n            ui: {\r\n              label: 'Name',\r\n              placeholder: 'Enter your User Name',\r\n              description: 'Enter the details of your userName'\r\n            }\r\n          },\r\n          lastName: {\r\n            type: 'text',\r\n            actionKeyNames: [],\r\n            validators: {\r\n              required: true\r\n            },\r\n            ui: {\r\n              label: 'lastname',\r\n              placeholder: 'Enter your User Name',\r\n              description: 'Enter the details of your userName'\r\n            }\r\n          }\r\n        },\r\n        minimumRepeatCount: 5,\r\n        rows: [{\r\n          fields: [\r\n            {\r\n              name: 'name',\r\n              value: 'Srishti'\r\n            }, {\r\n              name: 'lastName',\r\n              value: 'Khandelwal'\r\n            }\r\n          ]\r\n  \r\n        }]\r\n      }\r\n    ]\r\n  \r\n    additionalConfig: any[] = [\r\n      // {\r\n      //    type: 'card',\r\n      //    name: 'addressSection',\r\n      //    childrens: [{ type: 'card-header', ui: { text: 'Address' } }, { type: 'card-body', childrens: ['address.name'] }],\r\n      //    skipDefaultView: true\r\n      // },\r\n      {\r\n        type: \"#addressSection\",\r\n        name: 'addressSection',\r\n        ui: { text: 'Address' },\r\n        childrens: [\"address.name\"],\r\n        skipDefaultView: true,\r\n      },\r\n      {\r\n        type: '#hobbiesSection',\r\n        name: 'hobbiesSection',\r\n        controlConfigName: \"hobbies\",\r\n        ui: { text: 'Hobbies' },\r\n        childrens: [\"name\", \"lastName\"],\r\n        skipDefaultView: true,\r\n      }\r\n    ]\r\n  \r\n    uiBindings: string[] = [\"hobbiesSection\"];\r\n  \r\n    dynamicFormBuildConfig: DynamicFormBuildConfig;\r\n  \r\n    constructor(private formBuilder: RxDynamicFormBuilder) { }\r\n  \r\n    ngOnInit() {\r\n      this.dynamicFormBuildConfig = this.formBuilder.formGroup(this.serverData, {\r\n        additionalConfig: this.additionalConfig\r\n      });\r\n    }\r\n  }",
        "html": "<form [formGroup]=\"dynamicFormBuildConfig.formGroup\">\r\n    <div viewMode=\"basic\" [rxwebDynamicForm]=\"dynamicFormBuildConfig\" [uiBindings]=\"uiBindings\"></div>\r\n</form>",
        "model": null,
        "modelName": null,
        "json": {}
    },
    "array": {
        "notes": [""],
        "component": "import { Component, OnInit } from \"@angular/core\";\r\nimport { DynamicFormBuildConfig, DynamicFormConfiguration, AbstractControlConfig, dynamicComponent, RxDynamicFormBuilder } from \"@rxweb/reactive-dynamic-forms\";\r\n\r\n\r\n@dynamicComponent(\"hobbiesSection\")\r\n@Component({\r\n  templateUrl: './array-complete.component.html',\r\n})\r\n\r\nexport class ArrayComponent extends AbstractControlConfig {\r\n}\r\n",
        "html": "<div>\r\n    <div class=\"card\" >\r\n    <div class=\"card-header\" >{{controlConfig.config.ui.text}}</div>\r\n    <div class=\"card-body\">\r\n     <form>\r\n    <div *ngFor=\"let buildConfig of dynamicFormBuildConfig.controlsConfig[controlConfig.config.controlConfigName];let index=i;\">\r\n        <button class=\"btn btn-primary\" (click)=\"addItem()\">Add</button>\r\n        <button class=\"btn btn-primary\" (click)=\"removeItem(index)\">Remove</button>\r\n        <div viewMode=\"basic\" [rxwebDynamicForm]=\"{controlsConfig:buildConfig,formGroup:dynamicFormBuildConfig.formGroup.controls[controlConfig.config.controlConfigName].controls[index]}\" [uiBindings]=\"controlConfig.config.childrens\">\r\n        </div>\r\n    </div>\r\n    \r\n    </form>\r\n    </div>\r\n    </div>",
        "model": null,
        "modelName": null,
        "json": {}
    }
}