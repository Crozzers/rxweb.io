{"complete":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-maxLengthAsync-complete-template-driven-validation-decorators',\r\n    templateUrl: './max-length-async-complete.component.html'\r\n})\r\nexport class MaxLengthAsyncCompleteTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\" [rxwebForm]=\"userForm\" [model]=\"user\">\r\n    <div class=\"form-group\">\r\n      <label>First Name</label>\r\n\t    <input type=\"text\" name=\"firstName\" [(ngModel)]=\"user.firstName\"  class=\"form-control\" />\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.firstName?.errors\">{{userForm.controls?.firstName?.errors?.maxLengthAsync.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>User Name</label>\r\n\t    <input type=\"text\" name=\"userName\" [(ngModel)]=\"user.userName\"  class=\"form-control\" />\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.userName?.errors\">{{userForm.controls?.userName?.errors?.maxLengthAsync.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Full Name</label>\r\n\t    <input type=\"text\" name=\"fullName\" [(ngModel)]=\"user.fullName\"  class=\"form-control\" />\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.fullName?.errors\">{{userForm.controls?.fullName?.errors?.maxLengthAsync.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  maxLengthAsync, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class User {\r\n\r\n\t@maxLengthAsync({value:16 }) \r\n\tfirstName: string;\r\n\t\r\n\t\r\n\t//Shows custom message\r\n\t@maxLengthAsync({value:10  ,message:'Maximum 10 characters are allowed' }) \r\n\tuserName: string;\r\n\t\r\n\t\r\n\t//Shows custom message based on message key\r\n\t@maxLengthAsync({value:20  ,messageKey:'maxLengthMessageKey' }) \r\n\tfullName: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"user.model.ts","json":{}},"valueExample":{"notes":null,"component":null,"html":null,"model":"@maxLengthAsync({value:16 }) \r\nfirstName: string;\r\n","modelName":null,"json":{}},"value":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-maxLengthAsync-value-template-driven-validation-decorators',\r\n    templateUrl: './max-length-async-value.component.html'\r\n})\r\nexport class MaxLengthAsyncValueTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\" [rxwebForm]=\"userForm\" [model]=\"user\">\r\n    <div class=\"form-group\">\r\n      <label>First Name</label>\r\n\t    <input type=\"text\" name=\"firstName\" [(ngModel)]=\"user.firstName\"  class=\"form-control\" />\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.firstName?.errors\">{{userForm.controls?.firstName?.errors?.maxLengthAsync.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  maxLengthAsync, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class User {\r\n\r\n\t@maxLengthAsync({value:16 }) \r\n\tfirstName: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"user.model.ts","json":{}},"messageExample":{"notes":null,"component":null,"html":null,"model":"@maxLengthAsync({value:10  ,message:'Maximum 10 characters are allowed' }) \r\nuserName: string;\r\n","modelName":null,"json":{}},"message":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-maxLengthAsync-message-template-driven-validation-decorators',\r\n    templateUrl: './max-length-async-message.component.html'\r\n})\r\nexport class MaxLengthAsyncMessageTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\" [rxwebForm]=\"userForm\" [model]=\"user\">\r\n    <div class=\"form-group\">\r\n      <label>User Name</label>\r\n\t    <input type=\"text\" name=\"userName\" [(ngModel)]=\"user.userName\"  class=\"form-control\" />\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.userName?.errors\">{{userForm.controls?.userName?.errors?.maxLengthAsync.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  maxLengthAsync, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class User {\r\n\r\n\t//Shows custom message\r\n\t@maxLengthAsync({value:10  ,message:'Maximum 10 characters are allowed' }) \r\n\tuserName: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"user.model.ts","json":{}},"messageKeyExample":{"notes":null,"component":null,"html":null,"model":"@maxLengthAsync({value:20  ,messageKey:'maxLengthMessageKey' }) \r\nfullName: string;\r\n","modelName":null,"json":{}},"messageKey":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-maxLengthAsync-messageKey-template-driven-validation-decorators',\r\n    templateUrl: './max-length-async-message-key.component.html'\r\n})\r\nexport class MaxLengthAsyncMessageKeyTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\" [rxwebForm]=\"userForm\" [model]=\"user\">\r\n    <div class=\"form-group\">\r\n      <label>Full Name</label>\r\n\t    <input type=\"text\" name=\"fullName\" [(ngModel)]=\"user.fullName\"  class=\"form-control\" />\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.fullName?.errors\">{{userForm.controls?.fullName?.errors?.maxLengthAsync.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  maxLengthAsync, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class User {\r\n\r\n\t//Shows custom message based on message key\r\n\t@maxLengthAsync({value:20  ,messageKey:'maxLengthMessageKey' }) \r\n\tfullName: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"user.model.ts","json":{}},"add":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { Location } from './location.model';\r\n\r\n@Component({\r\n    selector: 'app-maxLengthAsync-add-template-driven-validation-decorators',\r\n    templateUrl: './max-length-async-add.component.html'\r\n})\r\nexport class MaxLengthAsyncAddTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    location: Location\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.location= new Location()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #locationForm = \"ngForm\" [rxwebForm]=\"locationForm\" [model]=\"location\">\r\n    <div class=\"form-group\">\r\n      <label>First Name</label>\r\n\t    <input type=\"text\" name=\"firstName\" [(ngModel)]=\"location.firstName\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">Maximum Length Upto 10 characters<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"locationForm.controls?.firstName?.errors\">{{locationForm.controls?.firstName?.errors?.maxLengthAsync.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!locationForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  maxLengthAsync, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class Location {\r\n\r\n\t@maxLengthAsync({value:10 }) \r\n\tfirstName: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"location.model.ts","json":{}}}