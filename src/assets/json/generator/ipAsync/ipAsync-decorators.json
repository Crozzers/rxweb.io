{"complete":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-ipAsync-complete',\r\n    templateUrl: './ip-async-complete.component.html'\r\n})\r\nexport class IpAsyncCompleteComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\t\t\t\tipTypes = [ \"V4\", \"V6\", \"AnyOne\",];\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Ip Type</label>\r\n      <select formControlName=\"ipType\" class=\"form-control\">\r\n\t\t<option [value]=\"item\" *ngFor=\"let item of ipTypes\">{{item}}</option>\r\n      </select>\r\n      <small class=\"form-text text-muted\">Based on selection of ip type conditional validation is applied<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.ipType.errors\">{{userFormGroup.controls.ipType.errors?.ip?.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>IP V4</label>\r\n      <input type=\"text\" formControlName=\"ipV4\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This validation is applied when input value is not IP V4 Type<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.ipV4.errors\">{{userFormGroup.controls.ipV4.errors?.ip?.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>IP V6</label>\r\n      <input type=\"text\" formControlName=\"ipV6\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This validation is applied when input value is not IP V6 Type<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.ipV6.errors\">{{userFormGroup.controls.ipV6.errors?.ip?.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Any IP Type</label>\r\n      <input type=\"text\" formControlName=\"anyIPType\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This validation is applied when input value is not any type of IP<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.anyIPType.errors\">{{userFormGroup.controls.anyIPType.errors?.ip?.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>IP V4 CIDR</label>\r\n      <input type=\"text\" formControlName=\"ipV4Cidr\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This validation allowed ip version 4 and for supernetting Ips<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.ipV4Cidr.errors\">{{userFormGroup.controls.ipV4Cidr.errors?.ip?.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>IP V6 CIDR</label>\r\n      <input type=\"text\" formControlName=\"ipV6Cidr\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This validation allowed ip version 6 and for supernetting Ips<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.ipV6Cidr.errors\">{{userFormGroup.controls.ipV6Cidr.errors?.ip?.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>IP V4 Custom Message</label>\r\n      <input type=\"text\" formControlName=\"ipV4Message\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This validation allowed ip version 4 it display custom message<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.ipV4Message.errors\">{{userFormGroup.controls.ipV4Message.errors?.ip?.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>IP V6 Custom Message Key</label>\r\n      <input type=\"text\" formControlName=\"ipV6MessageKey\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This field only allows ip version 6 input and shows custom validation message based on message key.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.ipV6MessageKey.errors\">{{userFormGroup.controls.ipV6MessageKey.errors.ipMessageKey.message}}<br/></small>\t\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  ipAsync,prop, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class User {\r\n\r\n\t@prop()\r\n\tipType: string;\r\n\r\n\t@ipAsync({validatorConfig:of({version:1 })})\r\n\tipV4: string;\r\n\t\r\n\t\r\n\t@ipAsync({validatorConfig:of({version:2 })})\r\n\tipV6: string;\r\n\t\r\n\t\r\n\t@ipAsync({validatorConfig:of({version:3 })})\r\n\tanyIPType: string;\r\n\t\r\n\t\r\n\t@ipAsync({validatorConfig:of({version:1  ,isCidr:true })})\r\n\tipV4Cidr: string;\r\n\t\r\n\t\r\n\t@ipAsync({validatorConfig:of({version:2  ,isCidr:true })})\r\n\tipV6Cidr: string;\r\n\t\r\n\t\r\n\t@ipAsync({validatorConfig:of({version:1  ,message:'Please Enter IP V4 type Only' })})\r\n\tipV4Message: string;\r\n\t\r\n\t\r\n\t@ipAsync({validatorConfig:of({version:2  ,messageKey:'ipMessageKey' })})\r\n\tipV6MessageKey: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"user.model.ts","json":{}},"versionExample":{"notes":null,"component":null,"html":null,"model":"@ipAsync({validatorConfig:of({version:1 })})\r\nipV4: string;\r\n","modelName":null,"json":{}},"version":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-ipAsync-version',\r\n    templateUrl: './ip-async-version.component.html'\r\n})\r\nexport class IpAsyncVersionComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>IP V4</label>\r\n      <input type=\"text\" formControlName=\"ipV4\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This validation is applied when input value is not IP V4 Type<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.ipV4.errors\">{{userFormGroup.controls.ipV4.errors?.ip?.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  ipAsync, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class User {\r\n\r\n\t@ipAsync({validatorConfig:of({version:1 })})\r\n\tipV4: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"user.model.ts","json":{}},"isCidrExample":{"notes":null,"component":null,"html":null,"model":"@ipAsync({validatorConfig:of({version:1  ,isCidr:true })})\r\nipV4Cidr: string;\r\n","modelName":null,"json":{}},"isCidr":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-ipAsync-isCidr',\r\n    templateUrl: './ip-async-is-cidr.component.html'\r\n})\r\nexport class IpAsyncIsCidrComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>IP V4 CIDR</label>\r\n      <input type=\"text\" formControlName=\"ipV4Cidr\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This validation allowed ip version 4 and for supernetting Ips<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.ipV4Cidr.errors\">{{userFormGroup.controls.ipV4Cidr.errors?.ip?.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  ipAsync, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class User {\r\n\r\n\t@ipAsync({validatorConfig:of({version:1  ,isCidr:true })})\r\n\tipV4Cidr: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"user.model.ts","json":{}},"messageExample":{"notes":null,"component":null,"html":null,"model":"@ipAsync({validatorConfig:of({version:1  ,message:'Please Enter IP V4 type Only' })})\r\nipV4Message: string;\r\n","modelName":null,"json":{}},"message":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-ipAsync-message',\r\n    templateUrl: './ip-async-message.component.html'\r\n})\r\nexport class IpAsyncMessageComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>IP V4 Custom Message</label>\r\n      <input type=\"text\" formControlName=\"ipV4Message\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This validation allowed ip version 4 it display custom message<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.ipV4Message.errors\">{{userFormGroup.controls.ipV4Message.errors?.ip?.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  ipAsync, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class User {\r\n\r\n\t@ipAsync({validatorConfig:of({version:1  ,message:'Please Enter IP V4 type Only' })})\r\n\tipV4Message: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"user.model.ts","json":{}},"messageKeyExample":{"notes":null,"component":null,"html":null,"model":"@ipAsync({validatorConfig:of({version:2  ,messageKey:'ipMessageKey' })})\r\nipV6MessageKey: string;\r\n","modelName":null,"json":{}},"messageKey":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-ipAsync-messageKey',\r\n    templateUrl: './ip-async-message-key.component.html'\r\n})\r\nexport class IpAsyncMessageKeyComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>IP V6 Custom Message Key</label>\r\n      <input type=\"text\" formControlName=\"ipV6MessageKey\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This field only allows ip version 6 input and shows custom validation message based on message key.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.ipV6MessageKey.errors\">{{userFormGroup.controls.ipV6MessageKey.errors.ipMessageKey.message}}<br/></small>\t\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  ipAsync, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class User {\r\n\r\n\t@ipAsync({validatorConfig:of({version:2  ,messageKey:'ipMessageKey' })})\r\n\tipV6MessageKey: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"user.model.ts","json":{}},"dynamic":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\nimport { FormBuilderConfiguration,} from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-ipAsync-dynamic',\r\n    templateUrl: './ip-async-dynamic.component.html'\r\n})\r\nexport class IpAsyncDynamicComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\t\t\t\tipTypes = [ \"V4\", \"V6\", \"AnyOne\",];\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder,private http: HttpClient    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        let formBuilderConfiguration = new FormBuilderConfiguration();\r\n\t\tthis.http.get('assets/examples/reactive-form-validators/decorators/ipAsync/dynamic/dynamic.json?v=' + environment.appVersion).subscribe(dynamic => {\r\n            formBuilderConfiguration.dynamicValidation = JSON.parse(JSON.stringify(dynamic));\r\n\t\t\tthis.userFormGroup = this.formBuilder.formGroup(user,formBuilderConfiguration);\r\n        })\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  *ngIf=\"userFormGroup\"  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Ip Type</label>\r\n      <select formControlName=\"ipType\" class=\"form-control\">\r\n\t\t<option [value]=\"item\" *ngFor=\"let item of ipTypes\">{{item}}</option>\r\n      </select>\r\n      <small class=\"form-text text-muted\">Based on selection of ip type conditional validation is applied<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.ipType.errors\">{{userFormGroup.controls.ipType.errors?.ip?.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>IP V4</label>\r\n      <input type=\"text\" formControlName=\"ipV4\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This validation is applied when input value is not IP V4 Type<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.ipV4.errors\">{{userFormGroup.controls.ipV4.errors?.ip?.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>IP V6</label>\r\n      <input type=\"text\" formControlName=\"ipV6\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This validation is applied when input value is not IP V6 Type<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.ipV6.errors\">{{userFormGroup.controls.ipV6.errors?.ip?.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Any IP Type</label>\r\n      <input type=\"text\" formControlName=\"anyIPType\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This validation is applied when input value is not any type of IP<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.anyIPType.errors\">{{userFormGroup.controls.anyIPType.errors?.ip?.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>IP V4 CIDR</label>\r\n      <input type=\"text\" formControlName=\"ipV4Cidr\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This validation allowed ip version 4 and for supernetting Ips<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.ipV4Cidr.errors\">{{userFormGroup.controls.ipV4Cidr.errors?.ip?.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>IP V6 CIDR</label>\r\n      <input type=\"text\" formControlName=\"ipV6Cidr\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This validation allowed ip version 6 and for supernetting Ips<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.ipV6Cidr.errors\">{{userFormGroup.controls.ipV6Cidr.errors?.ip?.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>IP V4 Custom Message</label>\r\n      <input type=\"text\" formControlName=\"ipV4Message\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This validation allowed ip version 4 it display custom message<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.ipV4Message.errors\">{{userFormGroup.controls.ipV4Message.errors?.ip?.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>IP V6 Custom Message Key</label>\r\n      <input type=\"text\" formControlName=\"ipV6MessageKey\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This field only allows ip version 6 input and shows custom validation message based on message key.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.ipV6MessageKey.errors\">{{userFormGroup.controls.ipV6MessageKey.errors.ipMessageKey.message}}<br/></small>\t\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  ipAsync,prop, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class User {\r\n\r\n\t@prop()\r\n\tipType: string;\r\n\r\n\t@prop()\r\n\tipV4: string;\r\n\r\n\t@prop()\r\n\tipV6: string;\r\n\r\n\t@prop()\r\n\tanyIPType: string;\r\n\r\n\t@prop()\r\n\tipV4Cidr: string;\r\n\r\n\t@prop()\r\n\tipV6Cidr: string;\r\n\r\n\t@prop()\r\n\tipV4Message: string;\r\n\r\n\t@prop()\r\n\tipV6MessageKey: string;\r\n\r\n}\r\n","modelName":"user.model.ts","json":{"dynamic.json":"{\"ipType\":{},\"ipV4\":{\"ipAsync\":{\"version\":\"1\"}},\"ipV6\":{\"ipAsync\":{\"version\":\"2\"}},\"anyIPType\":{\"ipAsync\":{\"version\":\"3\"}},\"ipV4Cidr\":{\"ipAsync\":{\"version\":\"1\",\"isCidr\":\"true\"}},\"ipV6Cidr\":{\"ipAsync\":{\"version\":\"2\",\"isCidr\":\"true\"}},\"ipV4Message\":{\"ipAsync\":{\"version\":\"1\",\"message\":\"Please Enter IP V4 type Only\"}},\"ipV6MessageKey\":{\"ipAsync\":{\"version\":\"2\",\"messageKey\":\"ipMessageKey\"}}}"}},"add":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-ipAsync-add',\r\n    templateUrl: './ip-async-add.component.html'\r\n})\r\nexport class IpAsyncAddComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>IP V4</label>\r\n      <input type=\"text\" formControlName=\"ipV4\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This validation is applied when input value is not IP V4 Type<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.ipV4.errors\">{{userFormGroup.controls.ipV4.errors?.ip?.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  ipAsync, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class User {\r\n\r\n\t@ipAsync({validatorConfig:of({version:1 })})\r\n\tipV4: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"user.model.ts","json":{}},"edit":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-ipAsync-edit',\r\n    templateUrl: './ip-async-edit.component.html'\r\n})\r\nexport class IpAsyncEditComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder,private http: HttpClient    ) { }\r\n\r\n    ngOnInit() {\r\n        this.http.get('assets/examples/reactive-form-validators/decorators/ipAsync/edit/user-data.json?v=' + environment.appVersion).subscribe(user => {\r\n            this.userFormGroup = this.formBuilder.formGroup<User>(User,user);\r\n        })\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  *ngIf=\"userFormGroup\"  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>IP V4</label>\r\n      <input type=\"text\" formControlName=\"ipV4\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This validation is applied when input value is not IP V4 Type<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.ipV4.errors\">{{userFormGroup.controls.ipV4.errors?.ip?.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  ipAsync, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class User {\r\n\r\n\t@ipAsync({validatorConfig:of({version:1 })})\r\n\tipV4: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"user.model.ts","json":{"user-data.json":"{\"ipV4\":\"192.0.2.1\"}"}}}