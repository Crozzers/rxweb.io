{
    "add": {
        "notes": null,
        "component": "import { Component, OnInit } from '@angular\/core';\r\nimport { FormGroup } from \"@angular\/forms\"\r\n\r\nimport { RxFormBuilder } from '@rxweb\/reactive-form-validators';\r\n\r\nimport { User } from '.\/user.model';\r\n\r\n@Component({\r\n    selector: 'app-prop-add',\r\n    templateUrl: '.\/prop-add.component.html'\r\n})\r\nexport class PropAddComponent implements OnInit {\r\n\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n}\r\n",
        "html": "<form *ngIf=\"userFormGroup\" [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n        <label>Email Address<\/label>\r\n        <input type=\"text\" formControlName=\"emailAddress\" class=\"form-control\" \/>\r\n    <\/div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit<\/button>\r\n<\/form>",
        "model": "import {  prop, } from \"@rxweb\/reactive-form-validators\"\r\nexport class User {\r\n\r\n\t@prop()\r\n\temailAddress: string;\r\n\r\n}\r\n",
        "modelName": "user.model.ts",
        "jsonName": null,
        "json": null
    },
    "server":{
         "notes": null,
        "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder, FormBuilderConfiguration } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-prop-server',\r\n    templateUrl: './prop-server.component.html'\r\n})\r\nexport class PropServerComponent implements OnInit {\r\n\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        let formBuilderConfiguration = new FormBuilderConfiguration();\r\n        let userData = {\r\n            email_Address:'bharat.patel@gmail.com',\r\n        };\r\n        formBuilderConfiguration.dynamicValidation = JSON.parse(JSON.stringify(userData));\r\n        this.userFormGroup = this.formBuilder.formGroup(user,formBuilderConfiguration);\r\n    }\r\n}",
        "html": "<form *ngIf=\"userFormGroup\" [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n        <label>Email Address<\/label>\r\n        <input type=\"text\" formControlName=\"emailAddress\" class=\"form-control\" \/>\r\n    <\/div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit<\/button>\r\n<\/form>",
        "model": "import {  prop, } from \"@rxweb/reactive-form-validators\"\r\nexport class User {\r\n\r\n\t@prop({name:'email_Address'})\r\n\temailAddress: string;\r\n\r\n}",
        "modelName": "user.model.ts",
        "jsonName": null,
        "json": null
    },
    "default":{
        "notes": null,
        "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-prop-default',\r\n    templateUrl: './prop-default.component.html'\r\n})\r\nexport class PropDefaultComponent implements OnInit {\r\n\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n}\r\n",
        "html": "<form *ngIf=\"userFormGroup\" [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n        <label>Email Address<\/label>\r\n        <input type=\"text\" formControlName=\"emailAddress\" class=\"form-control\" \/>\r\n    <\/div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit<\/button>\r\n<\/form>",
        "model": "import {  prop } from \"@rxweb/reactive-form-validators\"\r\nexport class User {\r\n\r\n@prop({defaultValue:'bharat.patel@gmail.com'})\r\nemailAddress:string\r\n\r\n}",
        "modelName": "user.model.ts",
        "jsonName": null,
        "json": null
    },
   
    "exclude":{
        "notes": null,
        "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder,FormBuilderConfiguration } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-prop-exclude',\r\n    templateUrl: './prop-exclude.component.html'\r\n})\r\nexport class PropExcludeComponent implements OnInit {\r\n\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n      let user = new User();\r\n      user.type = \"Personal\";\r\n      this.userFormGroup = this.formBuilder.formGroup(user);  \r\n    }\r\n   \r\n}\r\n",
        "html": "<form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n       <label>Type</label>\r\n       <input type=\"text\" formControlName=\"type\" class=\"form-control\" />\r\n   </div>   \r\n   <button  [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  Value : {{userFormGroup.value | json}}\r\n</form>",
        "model": "import {  prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n  \r\n@prop()\r\ntype:string;\r\n\r\n@prop({ignore:function(){ return this.type == \"Personal\";}})\r\nemailAddress:string;\r\n\r\n\r\n}\r\n",
        "modelName": "user.model.ts",
        "jsonName": null,
        "json": null
    },
    "primary":{
        "notes": null,
        "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,FormArray } from \"@angular/forms\"\r\nimport { RxFormBuilder,RxFormGroup } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-prop-primary',\r\n    templateUrl: './prop-primary.component.html'\r\n})\r\nexport class PropPrimaryComponent implements OnInit {\r\n    userInfoFormGroup: RxFormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        user.userId = 1;\r\n        this.userInfoFormGroup = <RxFormGroup>this.formBuilder.formGroup(user); \r\n    }\r\n}\r\n",
        "html": "<div>\r\n    <form  [formGroup]=\"userInfoFormGroup\">\r\n      <div class=\"form-group\">\r\n        <label>User Id</label>\r\n        <input type=\"text\" formControlName=\"userId\" class=\"form-control\"  />      \r\n      </div>\r\n \r\n      <div class=\"form-group\">\r\n        <label>FirstName</label>\r\n        <input type=\"text\" formControlName=\"firstName\" class=\"form-control\"  />      \r\n      </div>\r\n  \r\n      <button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n    \r\n    </form>\r\n  </div>\r\n  ",
        "model": "import {  prop} from   \"@rxweb/reactive-form-validators\"   \r\n\r\n\r\nexport class User {\r\n    @prop({ isPrimaryKey: true})\r\n    userId: number;\r\n    \r\n    @prop() \r\n    firstName: string;\r\n\t\r\n   \r\n}",
        "modelName": "user.model.ts",
        "jsonName": null,
        "json": null
    }
    
}