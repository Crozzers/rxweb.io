{
    "add": {
        "notes": [],
        "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\nimport { User } from './user.model';\r\n@Component({\r\n    selector: 'app-model-add',\r\n    templateUrl: './model-add.component.html'\r\n})\r\nexport class ModelAddComponent implements OnInit {\r\n  \r\n    userFormGroup: FormGroup;\r\n    constructor(private formBuilder: RxFormBuilder) { }\r\n    ngOnInit() {\r\n        let user = new User();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n   \r\n}\r\n",
        "html": "<form *ngIf=\"userFormGroup\" [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>User Name</label>\r\n      <input type=\"text\" formControlName=\"userName\" class=\"form-control\"  />\r\n   </div>  \r\n    <div class=\"form-group\">\r\n     <label>Password</label>\r\n      <input type=\"text\" formControlName=\"password\" class=\"form-control\"  />  \r\n  </div>\r\n   <div class=\"form-group\">\r\n     <label>City Name</label>\r\n      <input type=\"text\" formControlName=\"cityName\" class=\"form-control\"  />  \r\n  </div>\r\n  <div class=\"form-group\">\r\n     <label>Country Name</label>\r\n      <input type=\"text\" formControlName=\"countryName\" class=\"form-control\"  />  \r\n  </div>\r\n  <div class=\"form-group\">\r\n     <label>Area Name</label>\r\n      <input type=\"text\" formControlName=\"areaName\" class=\"form-control\"  />  \r\n  </div>\r\n  </form>",
        "model": "import {  prop,elementClass,model } from \"@rxweb/reactive-form-validators\"\r\nimport { AbstractControl } from \"@angular/forms\"\r\n\r\n@model([{\r\n    propNames: [\":all:\"], validationConfig: { required: true } }])\r\nexport class User{\r\n\r\n@prop()\r\nuserName:string;\r\n\r\n@prop()\r\npassword:string;\r\n\r\n@prop()\r\ncityName:string;\r\n\r\n@prop()\r\ncountryName:string;\r\n\r\n@prop()\r\nareaName:string;\r\n}",
        "modelName": "user.model.ts",
        "json": {}
    },
    "exclude":{
        "notes": null,
        "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\nimport { User } from './user.model';\r\n@Component({\r\n    selector: 'app-model-exclude',\r\n    templateUrl: './model-exclude.component.html'\r\n})\r\nexport class ModelExcludeComponent implements OnInit {\r\n  \r\n    userFormGroup: FormGroup;\r\n    constructor(private formBuilder: RxFormBuilder) { }\r\n    ngOnInit() {\r\n        let user = new User();\r\n        user.type = \"Admin\";\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n   \r\n}\r\n",
        "html": "<form *ngIf=\"userFormGroup\" [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n       <label>Type</label>\r\n       <input type=\"text\" formControlName=\"type\" class=\"form-control\"  />\r\n    </div>  \r\n     <div class=\"form-group\">\r\n      <label>Password</label>\r\n       <input type=\"text\" formControlName=\"password\" class=\"form-control\"  />  \r\n   </div>\r\n    <div class=\"form-group\">\r\n      <label>City Name</label>\r\n       <input type=\"text\" formControlName=\"cityName\" class=\"form-control\"  />  \r\n   </div>\r\n   <div class=\"form-group\">\r\n      <label>Country Name</label>\r\n       <input type=\"text\" formControlName=\"countryName\" class=\"form-control\"  />  \r\n   </div>\r\n   <div class=\"form-group\">\r\n      <label>Area Name</label>\r\n       <input type=\"text\" formControlName=\"areaName\" class=\"form-control\"  />  \r\n   </div>\r\n   </form>",
        "model": "import {  prop,elementClass,model } from \"@rxweb/reactive-form-validators\"\r\nimport { AbstractControl } from \"@angular/forms\"\r\n\r\n@model([{\r\n    propNames: [\"userName\"],\r\n    ignore:(x)=>x.type == \"Admin\"}])\r\nexport class User{\r\n\r\n@prop()\r\ntype:string;\r\n\r\n@prop()\r\nuserName:string;\r\n\r\n@prop()\r\npassword:string;\r\n\r\n@prop()\r\ncityName:string;\r\n\r\n@prop()\r\ncountryName:string;\r\n\r\n@prop()\r\nareaName:string;\r\n}",
        "modelName": "user.model.ts",  
        "jsonName": null,
        "json": null
    },
    "error":{
        "notes": null,
        "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\nimport { User } from './user.model';\r\n@Component({\r\n    selector: 'app-model-error',\r\n    templateUrl: './model-error.component.html'\r\n})\r\nexport class ModelErrorComponent implements OnInit {\r\n  \r\n    userFormGroup: FormGroup;\r\n    constructor(private formBuilder: RxFormBuilder) { }\r\n    ngOnInit() {\r\n        let user = new User();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n     submit(){\r\n      if(this.userFormGroup.invalid)\r\n        this.userFormGroup.controls.userName.setValue(\"john\");      \r\n    }\r\n}\r\n",
        "html": "<form *ngIf=\"userFormGroup\" [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>User Name</label>\r\n      <input type=\"text\" formControlName=\"userName\" class=\"form-control\"  />\r\n      <small class=\"form-text text-danger\" >{{userFormGroup.controls.userName[\"errorMessage\"]}}</small>\r\n   </div>  \r\n    <div class=\"form-group\">\r\n     <label>Password</label>\r\n      <input type=\"text\" formControlName=\"password\" class=\"form-control\"  /> \r\n       <small class=\"form-text text-danger\" >{{userFormGroup.controls.password[\"errorMessage\"]}}</small> \r\n  </div>\r\n   <div class=\"form-group\">\r\n     <label>City Name</label>\r\n      <input type=\"text\" formControlName=\"cityName\" class=\"form-control\"  /> \r\n        <small class=\"form-text text-danger\" >{{userFormGroup.controls.cityName[\"errorMessage\"]}}</small>  \r\n  </div>\r\n  <div class=\"form-group\">\r\n     <label>Country Name</label>\r\n      <input type=\"text\" formControlName=\"countryName\" class=\"form-control\"  /> \r\n         <small class=\"form-text text-danger\" >{{userFormGroup.controls.cityName[\"errorMessage\"]}}</small>  \r\n  </div>\r\n  <div class=\"form-group\">\r\n     <label>Area Name</label>\r\n      <input type=\"text\" formControlName=\"areaName\" class=\"form-control\"  />  \r\n         <small class=\"form-text text-danger\" >{{userFormGroup.controls.cityName[\"errorMessage\"]}}</small> \r\n  </div>\r\n  <button (click)=\"submit()\" class=\"btn btn-primary\">Submit</button>\r\n  </form>",
        "model": "import {  prop,elementClass,model,required } from \"@rxweb/reactive-form-validators\"\r\nimport { AbstractControl } from \"@angular/forms\"\r\n\r\n@model([{\r\n  propNames: [\":all:\"], validationConfig: { required: true }, error:  {conditionalExpression:function(control:AbstractControl){ return this.userName == \"john\"} } \r\n}, ])\r\nexport class User{\r\n\r\n@prop()\r\nuserName:string;\r\n\r\n@prop()\r\n@required()\r\npassword:string;\r\n\r\n@prop()\r\ncityName:string;\r\n\r\n@prop()\r\ncountryName:string;\r\n\r\n@prop()\r\nareaName:string;\r\n}",
        "modelName": "user.model.ts",
        "jsonName": null,
        "json": null
    },
    "element":{
        "notes": null,
        "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\nimport { User } from './user.model';\r\n@Component({\r\n    selector: 'app-model-element',\r\n    templateUrl: './model-element.component.html'\r\n})\r\nexport class ModelElementComponent implements OnInit {\r\n  \r\n    userFormGroup: FormGroup;\r\n    constructor(private formBuilder: RxFormBuilder) { }\r\n    ngOnInit() {\r\n        let user = new User();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n   \r\n}\r\n",
        "html": "<form *ngIf=\"userFormGroup\" [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>User Name</label>\r\n      <input type=\"text\" formControlName=\"userName\" class=\"form-control\"  />\r\n   </div>  \r\n    <div class=\"form-group\">\r\n     <label>Password</label>\r\n      <input type=\"text\" formControlName=\"password\" class=\"form-control\"  />  \r\n       <small class=\"form-text text-danger\" >{{userFormGroup.controls.password[\"errorMessage\"]}}</small>\r\n  </div>\r\n   <div class=\"form-group\">\r\n     <label>City Name</label>\r\n      <input type=\"text\" formControlName=\"cityName\" class=\"form-control\"  />  \r\n  </div>\r\n  <div class=\"form-group\">\r\n     <label>Country Name</label>\r\n      <input type=\"text\" formControlName=\"countryName\" class=\"form-control\"  />  \r\n  </div>\r\n  <div class=\"form-group\">\r\n     <label>Area Name</label>\r\n      <input type=\"text\" formControlName=\"areaName\" class=\"form-control\"  />  \r\n  </div>\r\n  </form>",
        "model": "import {  prop,elementClass,model } from \"@rxweb/reactive-form-validators\"\r\nimport { AbstractControl } from \"@angular/forms\"\r\n\r\n@model([{\r\n    propNames: [\":all:\"], \r\n   elementClass: {\r\n       conditionalExpression: function (c) {\r\n           return this.password == \"complex\" && c.dirty == true ? 'dirty' : '';\r\n       }}\r\n    }])\r\nexport class User{\r\n\r\n@prop()\r\nuserName:string;\r\n\r\n@prop()\r\npassword:string;\r\n\r\n@prop()\r\ncityName:string;\r\n\r\n@prop()\r\ncountryName:string;\r\n\r\n@prop()\r\nareaName:string;\r\n}",
        "modelName": "user.model.ts",
        "jsonName": null,
        "json": null
    }
}