{
    "complete":{
        "component":"import { Injectable } from '@angular\/core';\r\nimport { IAuthResolver } from '@rxweb\/angular-router'\r\nimport { RxHttp } from '@rxweb\/http';\r\nimport { BrowserStorage } from '..\/services\/browser-storage';\r\nimport { CoreComponent } from '@rxweb\/angular-router';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class AuthResolver extends CoreComponent implements IAuthResolver {\r\n\r\n    constructor(private http: RxHttp,private storagedata: BrowserStorage) {\r\n        super();\r\n        this.storagedata = new BrowserStorage();\r\n    }\r\n\r\n    resolveAuth(): Promise<{ [key: string]: any; }> | { [key: string]: any; } {\r\n        debugger;\r\n        var promise = new Promise<{ [key: string]: any; }>((resolve, reject) => {\r\n            var auth = this.storagedata.local.get(\"auth\");\r\n            if (auth) {\r\n                this.http.get({ path: \"api\/Authorize\/userDetails\",}).subscribe(response => {\r\n                    resolve(response);\r\n                })\r\n            }\r\n        })\r\n\r\n        return promise;\r\n    }\r\n}"
    }
}