{
    "add": {
        "notes": [],
        "component": "import { Component, OnInit } from '@angular\/core';\r\nimport { FormGroup,Validators } from \"@angular\/forms\"\r\n\r\nimport { RxFormGroup,FormGroupExtension,RxFormBuilder,FormBuilderConfiguration,RxwebValidators } from '@rxweb\/reactive-form-validators';\r\nimport { FormField } from '.\/form.model';\r\n\r\n\r\n@Component({\r\n    selector: 'app-error-add',\r\n    templateUrl: '.\/error-add.component.html'\r\n})\r\nexport class ErrorAddComponent implements OnInit {\r\n    errorObject = {}\r\n    userInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n      var formField = new FormField();\r\n        this.userInfoFormGroup =<RxFormGroup>this.formBuilder.formGroup(formField);\r\n    }\r\n\r\n    submit(){\r\n      if(this.userInfoFormGroup.invalid)\r\n        this.userInfoFormGroup.controls.action.setValue(\"submit\");\r\n      \r\n    }\r\n}\r\n",
        "html": "<form [formGroup]=\"userInfoFormGroup\">\r\n<div class=\"form-group\">\r\n    <label>First Name<\/label>\r\n    <input type=\"text\" formControlName=\"firstName\" class=\"form-control\"  \/>\r\n  <small class=\"form-text text-danger\" >{{userInfoFormGroup.controls.firstName[\"errorMessage\"]}}<\/small>\r\n<\/div>\r\n<div class=\"form-group\">\r\n    <label>User Name<\/label>\r\n    <input type=\"text\" formControlName=\"userName\" class=\"form-control\"  \/>\r\n  <small class=\"form-text text-danger\" >{{userInfoFormGroup.controls.userName[\"errorMessage\"]}}<\/small>\r\n<\/div>\r\n<button (click)=\"submit()\" class=\"btn btn-primary\">Submit<\/button>\r\n<\/form>",
        "model": "import { required,error,prop } from \"@rxweb\/reactive-form-validators\"\r\nimport {AbstractControl } from \"@angular\/forms\"\r\nexport class FormField{\r\n  \r\n  @prop()\r\n  action:string;\r\n\r\n  @error({conditionalExpression:function(control:AbstractControl){ return this.action === \"submit\"}})\r\n  @required()\r\n  firstName:string;\r\n\r\n  @error({conditionalExpression:function(control:AbstractControl){ return this.action == \"submit\"}})\r\n  @required()\r\n  userName:string;\r\n \r\n}",
        "modelName": "form.model.ts",
        "json": {}
    }
}