{
    "http": {
        "step1": "export class BaseComponent extends RxHttp {\r\n\r\n}",
        "step2": "@http({\r\n    hostKey: \"local\",\r\n    path: \"api/posts\",\r\n})\r\nexport class BaseComponent extends RxHttp {\r\n\r\n}",
        "step3": "HttpClientConfig.register({\r\n    hostURIs: [{\r\n        name: 'local',\r\n        default: true,\r\n        uri: 'http://localhost:3004'\r\n    }],\r\n    filters: [],\r\n    onError: (r) => {\r\n        console.log(r)\r\n    },\r\n    isProductionEnvironment: false\r\n})",
        "get": "Get() {\r\n        this.get({}).subscribe(res => {\r\n          console.log(res);\r\n        })    \r\n}",
        "post": "Post() {\r\n        this.post({ params: [], body: { firstName: \"Srishti\", lastName: 'Khandelwal', department: 'Dotnet' } }).subscribe(res=>{\r\n            console.log(res);\r\n        })\r\n    }",
        "put": "Put() {\r\n        this.put({ params: [1], body: { firstName: \"Srishti\", lastName: 'Khandelwal', department: 'Dotnet' } }).subscribe(res=>{\r\n            console.log(res);\r\n        })\r\n    }",
        "patch": "Patch() {\r\n        this.patch({ params: [1], body: { firstName: \"Srishti\", } }).subscribe(res => {\r\n            console.log(res);\r\n        })\r\n    }",
        "delete": "Delete() {\r\n        this.delete({ params: [1], body: { id: 2 } }).subscribe(res => {\r\n            console.log(res);\r\n        })\r\n    }",
        "component": "import { Component, OnInit } from '@angular/core';\r\nimport { HttpClientConfig, RxHttp, http } from \"@rxweb/http\";\r\nimport { UserInfo } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-decorators-http',\r\n    templateUrl: './decorators-http.component.html'\r\n})\r\n@http({\r\n    hostKey: \"local\",\r\n    path: \"posts\",\r\n})\r\nexport class DecoratorsHttpComponent extends RxHttp implements OnInit {\r\n\r\n    result: UserInfo[]\r\n\r\n    ngOnInit() {\r\n    \r\n        HttpClientConfig.register({\r\n            hostURIs: [{\r\n                name: 'local',\r\n                default: true,\r\n                uri: 'http://localhost:3005'\r\n            }],\r\n            filters: [],\r\n            onError: (r) => { console.log(r) },\r\n            isProductionEnvironment: false\r\n        })\r\n    \r\n    }\r\n\r\n    Get() {\r\n        this.get({}).subscribe(res => {\r\n            this.result = res as UserInfo[];\r\n            console.log(res);\r\n        })\r\n    }\r\n\r\n    Post() {\r\n        this.post({ params: [], body: { firstName: \"Srishti\", lastName: 'Khandelwal', department: 'Dotnet' } }).subscribe(res=>{\r\n            console.log(res);\r\n        })\r\n    }\r\n\r\n    Put() {\r\n        this.put({ params: [1], body: { firstName: \"Srishti\", lastName: 'Khandelwal', department: 'Dotnet' } }).subscribe(res=>{\r\n            console.log(res);\r\n        })\r\n    }\r\n\r\n    Patch() {\r\n        this.patch({ params: [1], body: { firstName: \"Srishti\", } }).subscribe(res => {\r\n            console.log(res);\r\n        })\r\n    }\r\n\r\n    Delete() {\r\n        this.delete({ params: [1], body: { id: 2 } }).subscribe(res => {\r\n            console.log(res);\r\n        })\r\n    }\r\n\r\n}\r\n",
        "html": "<button class=\"btn btn-primary\" (click)=\"Get()\">Get Data</button>\r\n<button class=\"btn btn-primary\" (click)=\"Post()\">Post Data</button>\r\n<button class=\"btn btn-primary\" (click)=\"Put()\">Put Data</button>\r\n<button class=\"btn btn-primary\" (click)=\"Patch()\">Patch Data</button>\r\n<button class=\"btn btn-primary\" (click)=\"Delete()\">Delete Data</button>\r\n\r\n{{ result | json }}",
        "model": "export class UserInfo { \r\n  id: number; \r\n  firstName: string;  \r\n  lastName: string; \r\n  department: string;\r\n}"
    },
    "inMemory": {
        "model": "import { RxHttp, http, inMemory } from \"@rxweb/http\";\r\n\r\nexport class BaseComponent extends RxHttp {\r\n\r\n}\r\n@inMemory()\r\nexport class AppDomain extends BaseComponent {\r\n\r\n}"
    },
    "xhrFilter": {
        "model": "import { RxHttp, xhrFilter } from \"@rxweb/http\";\r\n\r\nexport class BaseComponent extends RxHttp {\r\n\r\n}\r\n\r\n@xhrFilter()\r\nexport class AppDomain extends BaseComponent {\r\n\r\n}"
    }
}