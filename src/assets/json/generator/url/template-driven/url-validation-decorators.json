{"complete":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-url-complete-template-driven-validation-decorators',\r\n    templateUrl: './url-complete.component.html'\r\n})\r\nexport class UrlCompleteTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\" [rxwebForm]=\"userForm\" [model]=\"user\">\r\n    <div class=\"form-group\">\r\n      <label>Admin Website Url</label>\r\n\t    <input type=\"text\" name=\"adminWebsiteUrl\" [(ngModel)]=\"user.adminWebsiteUrl\"  class=\"form-control\" />\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.adminWebsiteUrl?.errors\">{{userForm.controls?.adminWebsiteUrl?.errors?.url.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Customer Website Url</label>\r\n\t    <input type=\"text\" name=\"customerWebsiteUrl\" [(ngModel)]=\"user.customerWebsiteUrl\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Customer Website Url' then you need to add 'admin Website Url' input as 'https://google.co.in'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.customerWebsiteUrl?.errors\">{{userForm.controls?.customerWebsiteUrl?.errors?.url.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Maintenance Website Url</label>\r\n\t    <input type=\"text\" name=\"maintenanceWebSiteUrl\" [(ngModel)]=\"user.maintenanceWebSiteUrl\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message.<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.maintenanceWebSiteUrl?.errors\">{{userForm.controls?.maintenanceWebSiteUrl?.errors?.url.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>FQDN Domain Url</label>\r\n\t    <input type=\"text\" name=\"fqdnDomainUrl\" [(ngModel)]=\"user.fqdnDomainUrl\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">Enter valid FQDN url.<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.fqdnDomainUrl?.errors\">{{userForm.controls?.fqdnDomainUrl?.errors?.url.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Localhost Url</label>\r\n\t    <input type=\"text\" name=\"localhostUrl\" [(ngModel)]=\"user.localhostUrl\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">Enter valid localhost url.<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.localhostUrl?.errors\">{{userForm.controls?.localhostUrl?.errors?.url.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>IntraServer Url</label>\r\n\t    <input type=\"text\" name=\"intraServerUrl\" [(ngModel)]=\"user.intraServerUrl\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">Enter valid IntraServer url.<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.intraServerUrl?.errors\">{{userForm.controls?.intraServerUrl?.errors?.url.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Deployed Website Url</label>\r\n\t    <input type=\"text\" name=\"deployedWebSiteUrl\" [(ngModel)]=\"user.deployedWebSiteUrl\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message based on message key<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.deployedWebSiteUrl?.errors\">{{userForm.controls?.deployedWebSiteUrl?.errors?.url.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  url, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class User {\r\n\r\n\t@url() \r\n\tadminWebsiteUrl: string;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@url({conditionalExpression:(x,y) => x.adminWebsiteUrl == \"https://google.co.in\"  }) \r\n\tqaWebsiteUrl: string;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@url({conditionalExpression:'x => x.adminWebsiteUrl == \"https://google.co.in\"'  }) \r\n\tcustomerWebsiteUrl: string;\r\n\t\r\n\t\r\n\t@url({message:'{{0}} Is not the correct url pattern.' }) \r\n\tmaintenanceWebSiteUrl: string;\r\n\t\r\n\t\r\n\t@url({urlValidationType:1 }) \r\n\tfqdnDomainUrl: string;\r\n\t\r\n\t\r\n\t@url({urlValidationType:2 }) \r\n\tlocalhostUrl: string;\r\n\t\r\n\t\r\n\t@url({urlValidationType:3 }) \r\n\tintraServerUrl: string;\r\n\t\r\n\t\r\n\t@url({messageKey:'urlMessageKey' }) \r\n\tdeployedWebSiteUrl: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"user.model.ts","json":{}},"conditionalExpressionExampleFunction":{"notes":null,"component":null,"html":null,"model":"@url({conditionalExpression:(x,y) => x.adminWebsiteUrl == \"https://google.co.in\"  }) \r\nqaWebsiteUrl: string;\r\n","modelName":null,"json":{}},"conditionalExpression":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-url-conditionalExpression-template-driven-validation-decorators',\r\n    templateUrl: './url-conditional-expression.component.html'\r\n})\r\nexport class UrlConditionalExpressionTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\" [rxwebForm]=\"userForm\" [model]=\"user\">\r\n    <div class=\"form-group\">\r\n      <label>Admin Website Url</label>\r\n\t    <input type=\"text\" name=\"adminWebsiteUrl\" [(ngModel)]=\"user.adminWebsiteUrl\"  class=\"form-control\" />\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.adminWebsiteUrl?.errors\">{{userForm.controls?.adminWebsiteUrl?.errors?.url.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Customer Website Url</label>\r\n\t    <input type=\"text\" name=\"customerWebsiteUrl\" [(ngModel)]=\"user.customerWebsiteUrl\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Customer Website Url' then you need to add 'admin Website Url' input as 'https://google.co.in'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.customerWebsiteUrl?.errors\">{{userForm.controls?.customerWebsiteUrl?.errors?.url.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  url, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class User {\r\n\r\n\t@url() \r\n\tadminWebsiteUrl: string;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@url({conditionalExpression:'x => x.adminWebsiteUrl == \"https://google.co.in\"'  }) \r\n\tcustomerWebsiteUrl: string;\r\n\t\r\n\t\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@url({conditionalExpression:(x,y) => x.adminWebsiteUrl == \"https://google.co.in\"  }) \r\n\tqaWebsiteUrl: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"user.model.ts","json":{}},"conditionalExpressionExampleString":{"notes":null,"component":null,"html":null,"model":"@url({conditionalExpression:'x => x.adminWebsiteUrl == \"https://google.co.in\"'  }) \r\ncustomerWebsiteUrl: string;\r\n","modelName":null,"json":{}},"messageExample":{"notes":null,"component":null,"html":null,"model":"@url({message:'{{0}} Is not the correct url pattern.' }) \r\nmaintenanceWebSiteUrl: string;\r\n","modelName":null,"json":{}},"message":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-url-message-template-driven-validation-decorators',\r\n    templateUrl: './url-message.component.html'\r\n})\r\nexport class UrlMessageTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\" [rxwebForm]=\"userForm\" [model]=\"user\">\r\n    <div class=\"form-group\">\r\n      <label>Maintenance Website Url</label>\r\n\t    <input type=\"text\" name=\"maintenanceWebSiteUrl\" [(ngModel)]=\"user.maintenanceWebSiteUrl\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message.<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.maintenanceWebSiteUrl?.errors\">{{userForm.controls?.maintenanceWebSiteUrl?.errors?.url.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  url, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class User {\r\n\r\n\t@url({message:'{{0}} Is not the correct url pattern.' }) \r\n\tmaintenanceWebSiteUrl: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"user.model.ts","json":{}},"urlValidationTypeExample":{"notes":null,"component":null,"html":null,"model":"@url({urlValidationType:1 }) \r\nfqdnDomainUrl: string;\r\n","modelName":null,"json":{}},"urlValidationType":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-url-urlValidationType-template-driven-validation-decorators',\r\n    templateUrl: './url-url-validation-type.component.html'\r\n})\r\nexport class UrlUrlValidationTypeTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\" [rxwebForm]=\"userForm\" [model]=\"user\">\r\n    <div class=\"form-group\">\r\n      <label>FQDN Domain Url</label>\r\n\t    <input type=\"text\" name=\"fqdnDomainUrl\" [(ngModel)]=\"user.fqdnDomainUrl\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">Enter valid FQDN url.<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.fqdnDomainUrl?.errors\">{{userForm.controls?.fqdnDomainUrl?.errors?.url.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  url, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class User {\r\n\r\n\t@url({urlValidationType:1 }) \r\n\tfqdnDomainUrl: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"user.model.ts","json":{}},"messageKeyExample":{"notes":null,"component":null,"html":null,"model":"@url({messageKey:'urlMessageKey' }) \r\ndeployedWebSiteUrl: string;\r\n","modelName":null,"json":{}},"messageKey":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-url-messageKey-template-driven-validation-decorators',\r\n    templateUrl: './url-message-key.component.html'\r\n})\r\nexport class UrlMessageKeyTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\" [rxwebForm]=\"userForm\" [model]=\"user\">\r\n    <div class=\"form-group\">\r\n      <label>Deployed Website Url</label>\r\n\t    <input type=\"text\" name=\"deployedWebSiteUrl\" [(ngModel)]=\"user.deployedWebSiteUrl\"  class=\"form-control\" />\r\n\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message based on message key<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.deployedWebSiteUrl?.errors\">{{userForm.controls?.deployedWebSiteUrl?.errors?.url.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  url, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class User {\r\n\r\n\t@url({messageKey:'urlMessageKey' }) \r\n\tdeployedWebSiteUrl: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"user.model.ts","json":{}},"add":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { WebSiteInfoModel } from './web-site-info-model.model';\r\n\r\n@Component({\r\n    selector: 'app-url-add-template-driven-validation-decorators',\r\n    templateUrl: './url-add.component.html'\r\n})\r\nexport class UrlAddTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    websiteinfomodel: WebSiteInfoModel\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.websiteinfomodel= new WebSiteInfoModel()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #websiteinfomodelForm = \"ngForm\" [rxwebForm]=\"websiteinfomodelForm\" [model]=\"websiteinfomodel\">\r\n    <div class=\"form-group\">\r\n      <label>Admin Website Url</label>\r\n\t    <input type=\"text\" name=\"adminWebsiteUrl\" [(ngModel)]=\"websiteinfomodel.adminWebsiteUrl\"  class=\"form-control\" />\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"websiteinfomodelForm.controls?.adminWebsiteUrl?.errors\">{{websiteinfomodelForm.controls?.adminWebsiteUrl?.errors?.url.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!websiteinfomodelForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  url, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class WebSiteInfoModel {\r\n\r\n\t@url() \r\n\tadminWebsiteUrl: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"web-site-info-model.model.ts","json":{}}}