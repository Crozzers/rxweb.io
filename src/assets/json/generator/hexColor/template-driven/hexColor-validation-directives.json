{"complete":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { HexcolorInfo } from './hexcolor-info.model';\r\n\r\n@Component({\r\n    selector: 'app-hexColor-complete-template-driven-validation-directives',\r\n    templateUrl: './hex-color-complete.component.html'\r\n})\r\nexport class HexColorCompleteTemplateDrivenValidationDirectivesComponent implements OnInit {\r\n    hexcolorinfo: HexcolorInfo\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.hexcolorinfo= new HexcolorInfo()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #hexcolorinfoForm = \"ngForm\" [rxwebForm]=\"hexcolorinfoForm\" [model]=\"hexcolorinfo\">\r\n    <div class=\"form-group\">\r\n      <label>Color Picker</label>\r\n\t    <input type=\"text\" name=\"color\" [(ngModel)]=\"hexcolorinfo.color\"  class=\"form-control\" hexColor/>\r\n\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Footer Hexcode' or 'Header Hexcode', then you need to add 'Color Picker' input as '#AFAFAF'<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"hexcolorinfoForm.controls?.color?.errors\">{{hexcolorinfoForm.controls?.color?.errors?.hexColor.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Header Hexcode</label>\r\n\t    <input type=\"text\" name=\"headerHexcolorCode\" [(ngModel)]=\"hexcolorinfo.headerHexcolorCode\"  class=\"form-control\" [hexColor]=\"{'conditionalExpression':'x => x.color == \\'#AFAFAF\\''}\"/>\r\n\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Header Hexcode' then you need to add 'Color Picker' input as '#AFAFAF'<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"hexcolorinfoForm.controls?.headerHexcolorCode?.errors\">{{hexcolorinfoForm.controls?.headerHexcolorCode?.errors?.hexColor.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Body Hexcode</label>\r\n\t    <input type=\"text\" name=\"bodyHexcolorCode\" [(ngModel)]=\"hexcolorinfo.bodyHexcolorCode\"  class=\"form-control\" [hexColor]=\"{'message':'Please enter the right format of hexcode for body like \\'#AFAFAF\\''}\"/>\r\n\r\n      <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"hexcolorinfoForm.controls?.bodyHexcolorCode?.errors\">{{hexcolorinfoForm.controls?.bodyHexcolorCode?.errors?.hexColor.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!hexcolorinfoForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class HexcolorInfo {\r\n\r\n\tcolor: string;\r\n\t\r\n\t\r\n\tfooterHexCode: string;\r\n\t\r\n\t\r\n\theaderHexcolorCode: string;\r\n\t\r\n\t\r\n\tbodyHexcolorCode: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"hexcolor-info.model.ts","json":{}},"conditionalExpressionExampleFunction":{"notes":null,"component":null,"html":null,"model":"[hexColor]=\"{'conditionalExpression':(x,y) =>x.color == \\'#AFAFAF\\'}\"","modelName":null,"json":{}},"conditionalExpression":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { HexcolorInfo } from './hexcolor-info.model';\r\n\r\n@Component({\r\n    selector: 'app-hexColor-conditionalExpression-template-driven-validation-directives',\r\n    templateUrl: './hex-color-conditional-expression.component.html'\r\n})\r\nexport class HexColorConditionalExpressionTemplateDrivenValidationDirectivesComponent implements OnInit {\r\n    hexcolorinfo: HexcolorInfo\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.hexcolorinfo= new HexcolorInfo()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #hexcolorinfoForm = \"ngForm\" [rxwebForm]=\"hexcolorinfoForm\" [model]=\"hexcolorinfo\">\r\n    <div class=\"form-group\">\r\n      <label>Color Picker</label>\r\n\t    <input type=\"text\" name=\"color\" [(ngModel)]=\"hexcolorinfo.color\"  class=\"form-control\" hexColor/>\r\n\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Footer Hexcode' or 'Header Hexcode', then you need to add 'Color Picker' input as '#AFAFAF'<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"hexcolorinfoForm.controls?.color?.errors\">{{hexcolorinfoForm.controls?.color?.errors?.hexColor.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Header Hexcode</label>\r\n\t    <input type=\"text\" name=\"headerHexcolorCode\" [(ngModel)]=\"hexcolorinfo.headerHexcolorCode\"  class=\"form-control\" [hexColor]=\"{'conditionalExpression':'x => x.color == \\'#AFAFAF\\''}\"/>\r\n\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Header Hexcode' then you need to add 'Color Picker' input as '#AFAFAF'<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"hexcolorinfoForm.controls?.headerHexcolorCode?.errors\">{{hexcolorinfoForm.controls?.headerHexcolorCode?.errors?.hexColor.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!hexcolorinfoForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class HexcolorInfo {\r\n\r\n\tcolor: string;\r\n\t\r\n\t\r\n\theaderHexcolorCode: string;\r\n\t\r\n\t\r\n\tfooterHexCode: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"hexcolor-info.model.ts","json":{}},"conditionalExpressionExampleString":{"notes":null,"component":null,"html":null,"model":"[hexColor]=\"{'conditionalExpression':'x => x.color == \\'#AFAFAF\\''}\"","modelName":null,"json":{}},"messageExample":{"notes":null,"component":null,"html":null,"model":"[hexColor]=\"{'message':'Please enter the right format of hexcode for body like \\'#AFAFAF\\''}\"","modelName":null,"json":{}},"message":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { HexcolorInfo } from './hexcolor-info.model';\r\n\r\n@Component({\r\n    selector: 'app-hexColor-message-template-driven-validation-directives',\r\n    templateUrl: './hex-color-message.component.html'\r\n})\r\nexport class HexColorMessageTemplateDrivenValidationDirectivesComponent implements OnInit {\r\n    hexcolorinfo: HexcolorInfo\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.hexcolorinfo= new HexcolorInfo()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #hexcolorinfoForm = \"ngForm\" [rxwebForm]=\"hexcolorinfoForm\" [model]=\"hexcolorinfo\">\r\n    <div class=\"form-group\">\r\n      <label>Body Hexcode</label>\r\n\t    <input type=\"text\" name=\"bodyHexcolorCode\" [(ngModel)]=\"hexcolorinfo.bodyHexcolorCode\"  class=\"form-control\" [hexColor]=\"{'message':'Please enter the right format of hexcode for body like \\'#AFAFAF\\''}\"/>\r\n\r\n      <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"hexcolorinfoForm.controls?.bodyHexcolorCode?.errors\">{{hexcolorinfoForm.controls?.bodyHexcolorCode?.errors?.hexColor.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!hexcolorinfoForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class HexcolorInfo {\r\n\r\n\tbodyHexcolorCode: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"hexcolor-info.model.ts","json":{}},"add":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-hexColor-add-template-driven-validation-directives',\r\n    templateUrl: './hex-color-add.component.html'\r\n})\r\nexport class HexColorAddTemplateDrivenValidationDirectivesComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\" [rxwebForm]=\"userForm\" [model]=\"user\">\r\n    <div class=\"form-group\">\r\n      <label>Color Picker</label>\r\n\t    <input type=\"text\" name=\"color\" [(ngModel)]=\"user.color\"  class=\"form-control\" hexColor/>\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.color?.errors\">{{userForm.controls?.color?.errors?.hexColor.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class User {\r\n\r\n\tcolor: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"user.model.ts","json":{}}}