{"complete":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-grid-complete-validator',\r\n    templateUrl: './grid-complete.component.html'\r\n})\r\nexport class GridCompleteValidatorComponent implements OnInit {\r\n    digitalInfoFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.digitalInfoFormGroup = this.formBuilder.group({\r\n            soundRecordingGrid:['', RxwebValidators.grid()], \r\n            audioVisualRecordingGrid:['', RxwebValidators.grid({conditionalExpression:(x,y) => x.soundRecordingGrid == \"A12425GABC1234002M\"  })], \r\n            photographGrid:['', RxwebValidators.grid({conditionalExpression:'x => x.soundRecordingGrid ==\"A12425GABC1234002M\"' })], \r\n            graphicImageGrid:['', RxwebValidators.grid({message:'This is Not valid GRid' })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"digitalInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>SoundRecording GRid</label>\r\n      <input type=\"text\" formControlName=\"soundRecordingGrid\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'AudioVisualRecording GRid' or 'Photograph GRid' then you need to add this input to 'A12425GABC1234002M'.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"digitalInfoFormGroup.controls.soundRecordingGrid.errors\">{{digitalInfoFormGroup.controls.soundRecordingGrid.errors.grid?.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>AudioVisualRecording GRid</label>\r\n      <input type=\"text\" formControlName=\"audioVisualRecordingGrid\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'AudioVisualRecording GRid' then you need to add 'SoundRecording GRid' field input to 'A12425GABC1234002M'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"digitalInfoFormGroup.controls.audioVisualRecordingGrid.errors\">{{digitalInfoFormGroup.controls.audioVisualRecordingGrid.errors.grid?.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Photograph GRid</label>\r\n      <input type=\"text\" formControlName=\"photographGrid\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Photograph GRid' then you need to add 'SoundRecording GRid' field input to 'A12425GABC1234002M'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"digitalInfoFormGroup.controls.photographGrid.errors\">{{digitalInfoFormGroup.controls.photographGrid.errors.grid?.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>GraphicImage GRid</label>\r\n      <input type=\"text\" formControlName=\"graphicImageGrid\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"digitalInfoFormGroup.controls.graphicImageGrid.errors\">{{digitalInfoFormGroup.controls.graphicImageGrid.errors.grid?.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!digitalInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"json":{}},"conditionalExpressionExampleFunction":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.grid({conditionalExpression:(x,y) => x.soundRecordingGrid == \"A12425GABC1234002M\"  });\r\n","modelName":null,"json":{}},"conditionalExpression":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-grid-conditionalExpression-validator',\r\n    templateUrl: './grid-conditional-expression.component.html'\r\n})\r\nexport class GridConditionalExpressionValidatorComponent implements OnInit {\r\n    digitalInfoFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.digitalInfoFormGroup = this.formBuilder.group({\r\n            soundRecordingGrid:['', RxwebValidators.grid()], \r\n            photographGrid:['', RxwebValidators.grid({conditionalExpression:'x => x.soundRecordingGrid ==\"A12425GABC1234002M\"' })], \r\n            audioVisualRecordingGrid:['', RxwebValidators.grid({conditionalExpression:(x,y) => x.soundRecordingGrid == \"A12425GABC1234002M\"  })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"digitalInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>SoundRecording GRid</label>\r\n      <input type=\"text\" formControlName=\"soundRecordingGrid\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'AudioVisualRecording GRid' or 'Photograph GRid' then you need to add this input to 'A12425GABC1234002M'.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"digitalInfoFormGroup.controls.soundRecordingGrid.errors\">{{digitalInfoFormGroup.controls.soundRecordingGrid.errors.grid?.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Photograph GRid</label>\r\n      <input type=\"text\" formControlName=\"photographGrid\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Photograph GRid' then you need to add 'SoundRecording GRid' field input to 'A12425GABC1234002M'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"digitalInfoFormGroup.controls.photographGrid.errors\">{{digitalInfoFormGroup.controls.photographGrid.errors.grid?.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>AudioVisualRecording GRid</label>\r\n      <input type=\"text\" formControlName=\"audioVisualRecordingGrid\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'AudioVisualRecording GRid' then you need to add 'SoundRecording GRid' field input to 'A12425GABC1234002M'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"digitalInfoFormGroup.controls.audioVisualRecordingGrid.errors\">{{digitalInfoFormGroup.controls.audioVisualRecordingGrid.errors.grid?.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!digitalInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"json":{}},"conditionalExpressionExampleString":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.grid({conditionalExpression:'x => x.soundRecordingGrid ==\"A12425GABC1234002M\"' });\r\n","modelName":null,"json":{}},"messageExample":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.grid({message:'This is Not valid GRid' });\r\n","modelName":null,"json":{}},"message":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-grid-message-validator',\r\n    templateUrl: './grid-message.component.html'\r\n})\r\nexport class GridMessageValidatorComponent implements OnInit {\r\n    digitalInfoFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.digitalInfoFormGroup = this.formBuilder.group({\r\n            graphicImageGrid:['', RxwebValidators.grid({message:'This is Not valid GRid' })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"digitalInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>GraphicImage GRid</label>\r\n      <input type=\"text\" formControlName=\"graphicImageGrid\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"digitalInfoFormGroup.controls.graphicImageGrid.errors\">{{digitalInfoFormGroup.controls.graphicImageGrid.errors.grid?.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!digitalInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"json":{}},"dynamic":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormBuilderConfiguration,RxFormBuilder} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-grid-dynamic-validator',\r\n    templateUrl: './grid-dynamic.component.html'\r\n})\r\nexport class GridDynamicValidatorComponent implements OnInit {\r\n    digitalInfoFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: RxFormBuilder , private http: HttpClient )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n\t\tlet formBuilderConfiguration = new FormBuilderConfiguration();\r\n\t\tthis.http.get('assets/examples/reactive-form-validators/validators/grid/dynamic/dynamic.json').subscribe(dynamic => {\r\n\t\t\tformBuilderConfiguration.dynamicValidation = JSON.parse(JSON.stringify(dynamic));\r\n\t\t\tvar digitalInfo = { soundRecordingGrid:'', audioVisualRecordingGrid:'', photographGrid:'', graphicImageGrid:'',  }\r\n\t\t\tthis.digitalInfoFormGroup = this.formBuilder.group(digitalInfo,formBuilderConfiguration);\r\n\t\t})\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  *ngIf=\"digitalInfoFormGroup\"  [formGroup]=\"digitalInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>SoundRecording GRid</label>\r\n      <input type=\"text\" formControlName=\"soundRecordingGrid\" class=\"form-control\"   />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'AudioVisualRecording GRid' or 'Photograph GRid' then you need to add this input to 'A12425GABC1234002M'.<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"digitalInfoFormGroup.controls.soundRecordingGrid.errors\">{{digitalInfoFormGroup.controls.soundRecordingGrid.errors.grid.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Photograph GRid</label>\r\n      <input type=\"text\" formControlName=\"photographGrid\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Photograph GRid' then you need to add 'SoundRecording GRid' field input to 'A12425GABC1234002M'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"digitalInfoFormGroup.controls.photographGrid.errors\">{{digitalInfoFormGroup.controls.photographGrid.errors.grid.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>GraphicImage GRid</label>\r\n      <input type=\"text\" formControlName=\"graphicImageGrid\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"digitalInfoFormGroup.controls.graphicImageGrid.errors\">{{digitalInfoFormGroup.controls.graphicImageGrid.errors.grid.message}}<br/></small>\r\n    </div>\r\n    <button [disabled]=\"!digitalInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"json":{"dynamic.json":"{\"soundRecordingGrid\":{\"grid\":true},\"photographGrid\":{\"grid\":{\"conditionalExpression\":\"x => x.soundRecordingGrid ==\\\"A12425GABC1234002M\\\"\"}},\"graphicImageGrid\":{\"grid\":{\"message\":\"This is Not valid GRid\"}}}"}},"add":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-grid-add-validator',\r\n    templateUrl: './grid-add.component.html'\r\n})\r\nexport class GridAddValidatorComponent implements OnInit {\r\n    digitalInfoFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.digitalInfoFormGroup = this.formBuilder.group({\r\n            soundRecordingGrid:['', RxwebValidators.grid()], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"digitalInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>SoundRecording Grid</label>\r\n      <input type=\"text\" formControlName=\"soundRecordingGrid\" class=\"form-control\"  />\r\n\t <small class=\"form-text text-danger\" *ngIf=\"digitalInfoFormGroup.controls.soundRecordingGrid.errors\">{{digitalInfoFormGroup.controls.soundRecordingGrid.errors.grid?.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!digitalInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"json":{}}}