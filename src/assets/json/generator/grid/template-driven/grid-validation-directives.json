{"complete":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { DigitalInfo } from './digital-info.model';\r\n\r\n@Component({\r\n    selector: 'app-grid-complete-template-driven-validation-directives',\r\n    templateUrl: './grid-complete.component.html'\r\n})\r\nexport class GridCompleteTemplateDrivenValidationDirectivesComponent implements OnInit {\r\n    digitalinfo: DigitalInfo\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.digitalinfo= new DigitalInfo()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #digitalinfoForm = \"ngForm\" [rxwebForm]=\"digitalinfoForm\">\r\n    <div class=\"form-group\">\r\n      <label>SoundRecording GRid</label>\r\n\t    <input type=\"text\" name=\"soundRecordingGrid\" [(ngModel)]=\"digitalinfo.soundRecordingGrid\"  class=\"form-control\" grid/>\r\n\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'AudioVisualRecording GRid' or 'Photograph GRid' then you need to add this input to 'A12425GABC1234002M'.<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"digitalinfoForm.controls?.soundRecordingGrid?.errors\">{{digitalinfoForm.controls?.soundRecordingGrid?.errors?.grid.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Photograph GRid</label>\r\n\t    <input type=\"text\" name=\"photographGrid\" [(ngModel)]=\"digitalinfo.photographGrid\"  class=\"form-control\" [grid]=\"{'conditionalExpression':'x => x.soundRecordingGrid ==\\'A12425GABC1234002M\\''}\"/>\r\n\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Photograph GRid' then you need to add 'SoundRecording GRid' field input to 'A12425GABC1234002M'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"digitalinfoForm.controls?.photographGrid?.errors\">{{digitalinfoForm.controls?.photographGrid?.errors?.grid.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>GraphicImage GRid</label>\r\n\t    <input type=\"text\" name=\"graphicImageGrid\" [(ngModel)]=\"digitalinfo.graphicImageGrid\"  class=\"form-control\" [grid]=\"{'message':'This is Not valid GRid'}\"/>\r\n\r\n      <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"digitalinfoForm.controls?.graphicImageGrid?.errors\">{{digitalinfoForm.controls?.graphicImageGrid?.errors?.grid.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!digitalinfoForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class DigitalInfo {\r\n\r\n\tsoundRecordingGrid: string;\r\n\r\n\taudioVisualRecordingGrid: string;\r\n\r\n\tphotographGrid: string;\r\n\r\n\tgraphicImageGrid: string;\r\n\r\n}\r\n","modelName":"digital-info.model.ts","json":{}},"conditionalExpressionExampleFunction":{"notes":null,"component":null,"html":null,"model":"[grid]=\"{'conditionalExpression':(x,y) => x.soundRecordingGrid == \\'A12425GABC1234002M\\' }\"","modelName":null,"json":{}},"conditionalExpression":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { DigitalInfo } from './digital-info.model';\r\n\r\n@Component({\r\n    selector: 'app-grid-conditionalExpression-template-driven-validation-directives',\r\n    templateUrl: './grid-conditional-expression.component.html'\r\n})\r\nexport class GridConditionalExpressionTemplateDrivenValidationDirectivesComponent implements OnInit {\r\n    digitalinfo: DigitalInfo\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.digitalinfo= new DigitalInfo()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #digitalinfoForm = \"ngForm\" [rxwebForm]=\"digitalinfoForm\">\r\n    <div class=\"form-group\">\r\n      <label>SoundRecording GRid</label>\r\n\t    <input type=\"text\" name=\"soundRecordingGrid\" [(ngModel)]=\"digitalinfo.soundRecordingGrid\"  class=\"form-control\" grid/>\r\n\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'AudioVisualRecording GRid' or 'Photograph GRid' then you need to add this input to 'A12425GABC1234002M'.<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"digitalinfoForm.controls?.soundRecordingGrid?.errors\">{{digitalinfoForm.controls?.soundRecordingGrid?.errors?.grid.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Photograph GRid</label>\r\n\t    <input type=\"text\" name=\"photographGrid\" [(ngModel)]=\"digitalinfo.photographGrid\"  class=\"form-control\" [grid]=\"{'conditionalExpression':'x => x.soundRecordingGrid ==\\'A12425GABC1234002M\\''}\"/>\r\n\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Photograph GRid' then you need to add 'SoundRecording GRid' field input to 'A12425GABC1234002M'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"digitalinfoForm.controls?.photographGrid?.errors\">{{digitalinfoForm.controls?.photographGrid?.errors?.grid.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!digitalinfoForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class DigitalInfo {\r\n\r\n\tsoundRecordingGrid: string;\r\n\r\n\tphotographGrid: string;\r\n\r\n\taudioVisualRecordingGrid: string;\r\n\r\n}\r\n","modelName":"digital-info.model.ts","json":{}},"conditionalExpressionExampleString":{"notes":null,"component":null,"html":null,"model":"[grid]=\"{'conditionalExpression':'x => x.soundRecordingGrid ==\\'A12425GABC1234002M\\''}\"","modelName":null,"json":{}},"messageExample":{"notes":null,"component":null,"html":null,"model":"[grid]=\"{'message':'This is Not valid GRid'}\"","modelName":null,"json":{}},"message":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { DigitalInfo } from './digital-info.model';\r\n\r\n@Component({\r\n    selector: 'app-grid-message-template-driven-validation-directives',\r\n    templateUrl: './grid-message.component.html'\r\n})\r\nexport class GridMessageTemplateDrivenValidationDirectivesComponent implements OnInit {\r\n    digitalinfo: DigitalInfo\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.digitalinfo= new DigitalInfo()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #digitalinfoForm = \"ngForm\" [rxwebForm]=\"digitalinfoForm\">\r\n    <div class=\"form-group\">\r\n      <label>GraphicImage GRid</label>\r\n\t    <input type=\"text\" name=\"graphicImageGrid\" [(ngModel)]=\"digitalinfo.graphicImageGrid\"  class=\"form-control\" [grid]=\"{'message':'This is Not valid GRid'}\"/>\r\n\r\n      <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"digitalinfoForm.controls?.graphicImageGrid?.errors\">{{digitalinfoForm.controls?.graphicImageGrid?.errors?.grid.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!digitalinfoForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class DigitalInfo {\r\n\r\n\tgraphicImageGrid: string;\r\n\r\n}\r\n","modelName":"digital-info.model.ts","json":{}},"add":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { DigitalInfo } from './digital-info.model';\r\n\r\n@Component({\r\n    selector: 'app-grid-add-template-driven-validation-directives',\r\n    templateUrl: './grid-add.component.html'\r\n})\r\nexport class GridAddTemplateDrivenValidationDirectivesComponent implements OnInit {\r\n    digitalinfo: DigitalInfo\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.digitalinfo= new DigitalInfo()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #digitalinfoForm = \"ngForm\" [rxwebForm]=\"digitalinfoForm\">\r\n    <div class=\"form-group\">\r\n      <label>SoundRecording Grid</label>\r\n\t    <input type=\"text\" name=\"soundRecordingGrid\" [(ngModel)]=\"digitalinfo.soundRecordingGrid\"  class=\"form-control\" grid/>\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"digitalinfoForm.controls?.soundRecordingGrid?.errors\">{{digitalinfoForm.controls?.soundRecordingGrid?.errors?.grid.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!digitalinfoForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class DigitalInfo {\r\n\r\n\tsoundRecordingGrid: string;\r\n\r\n}\r\n","modelName":"digital-info.model.ts","json":{}}}