{
    "onsubmit": {
        "notes": [],
        "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,FormArray } from \"@angular/forms\"\r\nimport { RxFormBuilder,RxFormGroup } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User,Address,Skill } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-errormessagestrategy-onsubmit',\r\n    templateUrl: './errormessagestrategy-onsubmit.component.html'\r\n})\r\nexport class ErrormessagestrategyOnsubmitComponent implements OnInit {\r\n    userFormGroup: RxFormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        user.address = new Address();\r\n        user.skills = new Array<Skill>();\r\n        user.skills.push(new Skill());\r\n        this.userFormGroup = this.formBuilder.formGroup(user) as RxFormGroup;\r\n        }\r\n\r\n     getFormArray(){\r\n      let formarray = this.userFormGroup.controls.skills as FormArray;\r\n      return formarray.controls;\r\n    }\r\n    onSubmit()\r\n    {\r\n        this.userFormGroup.submitted = true;\r\n    }\r\n}\r\n",
        "html": "<div>\r\n    <form  [formGroup]=\"userFormGroup\">\r\n      <div class=\"form-group\">\r\n        <label>User Name</label>\r\n        <input type=\"text\" formControlName=\"userName\" class=\"form-control\"  />\r\n       <small class=\"form-text text-danger\">{{userFormGroup.controls.userName.errorMessage}}<br/></small>\t\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label>Password</label>\r\n        <input type=\"text\" formControlName=\"password\" class=\"form-control\"  />\r\n        \r\n      <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.password.errors\">{{userFormGroup.controls.password.errorMessage}}<br/></small>\r\n      </div>\r\n  \r\n    \r\n        <div class=\"form-group\" [formGroup]=\"userFormGroup.controls.address\">\r\n            <label>City</label>\r\n            <input type=\"text\" formControlName=\"city\" class=\"form-control\" />\r\n            <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.address.controls.city.errors\">{{userFormGroup.controls.address.controls.city.errorMessage}}<br/></small>\r\n        </div>\r\n     \r\n  \r\n        <div class=\"form-group\" [formGroup]=\"skillGroup\" *ngFor=\"let skillGroup of getFormArray()\">\r\n            <label>SkillName</label>\r\n            <input type=\"text\" formControlName=\"skillName\" class=\"form-control\" />\r\n            <small class=\"form-text text-danger\" *ngIf=\"skillGroup.controls.skillName.errors\">  {{skillGroup.controls.skillName.errorMessage}}<br/></small>\r\n        </div>\r\n   \r\n      <button (click)=\"onSubmit()\" class=\"btn btn-primary\">Submit</button>\r\n    </form>\r\n  </div>\r\n  ",
        "model": "import { required,error,propArray,propObject } from   \"@rxweb/reactive-form-validators\"   \r\n\texport class Skill {\r\n\r\n    @required()\r\n    skillName: string;\r\n}\r\n\r\nexport class Address {\r\n\r\n    @required()\r\n    city: string;\r\n}\r\nexport class User {\r\n\r\n    @required()\r\n    userName: string;\r\n\r\n     @required()\r\n    password: string;\r\n\r\n    @propArray(Skill)\r\n    skills: Skill[];\r\n\r\n    @propObject(Address)\r\n    address: Address;\r\n}\r\n",
        "modelName": "user.model.ts",
        "json": {}
    },
    "reactiveForm":{
        "component":"ReactiveFormConfig.set({\r\n          reactiveForm: {\r\n             errorMessageBindingStrategy: ErrorBindingStrategy.onSubmit\r\n          }\r\n})"
    }  
}