{
    "complete": {
        "notes": null,
        "component": "import { Component, OnInit } from '@angular\/core';\r\nimport { FormGroup,FormArray } from \"@angular\/forms\"\r\n\r\nimport { RxFormBuilder } from '@rxweb\/reactive-form-validators';\r\n\r\nimport { User,Progression } from '.\/user.model';\r\n\r\n@Component({\r\n    selector: 'app-greaterThanLessThanFormArray-complete',\r\n    templateUrl: '.\/greater-than-less-than-form-array-complete.component.html'\r\n})\r\nexport class GreaterThanLessThanFormArrayCompleteComponent implements OnInit {\r\n\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        user.progressions = new Array<Progression>();\r\n        let progression = new Progression();\r\n        user.progressions.push(progression);\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n        }\r\n\r\n    addIndex(){\r\n      let progressions = this.userFormGroup.controls.progressions as FormArray;\r\n      progressions.push(this.formBuilder.formGroup(Progression));\r\n    }\r\n\r\n  \r\n}\r\n",
        "html": "<form *ngIf=\"userFormGroup\" [formGroup]=\"userFormGroup\">\r\n    \r\n    <button class=\"btn btn-primary\" (click)=\"addIndex()\">Add Number<\/button>\r\n    <table class=\"table\">\r\n        <thead>\r\n            <tr>\r\n                <th scope=\"col\">#<\/th>\r\n                <th scope=\"col\">Positive Arithemtic Expression<\/th>\r\n               \r\n            <\/tr>\r\n        <\/thead>\r\n        <tbody>\r\n            <tr [formGroup]=\"address\" *ngFor=\"let address of userFormGroup.controls.progressions.controls; let i = index\">\r\n                <th scope=\"row\">{{i}}<\/th>\r\n                <td><input type=\"text\" formControlName=\"positiveArithemticExpression\" class=\"form-control\" \/>\r\n                <\/td>\r\n                <br\/>\r\n              \t<small class=\"form-text text-danger\" *ngIf=\"address.controls.positiveArithemticExpression.errors\">{{address.controls.positiveArithemticExpression.errors.greaterThan.message}}<br\/><\/small>\r\n            <\/tr>\r\n        <\/tbody>\r\n    <\/table>\r\n    <button  [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit<\/button>\r\n<\/form>",
        "model": "import { propArray, greaterThan } from \"@rxweb\/reactive-form-validators\"\r\n\r\nexport class Progression {\r\n\r\n  @greaterThan({isArrayControl:true})\r\n   positiveArithemticExpression: number;\r\n\r\n}\r\n\r\nexport class User {\r\n\r\n  @propArray(Progression)\r\n   progressions: Progression[];\r\n\r\n}\r\n",
        "modelName": "user.model.ts",
        "json": {}
      },
      "add":{
        "notes": null,
        "component": "import { Component, OnInit } from '@angular\/core';\r\nimport { FormGroup,FormArray } from \"@angular\/forms\"\r\n\r\nimport { RxFormBuilder } from '@rxweb\/reactive-form-validators';\r\n\r\nimport { User,Progression } from '.\/user.model';\r\n\r\n@Component({\r\n    selector: 'app-greaterThanLessThanFormArray-add',\r\n    templateUrl: '.\/greater-than-less-than-form-array-add.component.html'\r\n})\r\nexport class GreaterThanLessThanFormArrayAddComponent implements OnInit {\r\n\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        user.progressions = new Array<Progression>();\r\n        let progression = new Progression();\r\n        user.progressions.push(progression);\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n        }\r\n\r\n    addIndex(){\r\n      let progressions = this.userFormGroup.controls.progressions as FormArray;\r\n      progressions.push(this.formBuilder.formGroup(Progression));\r\n    }\r\n\r\n}\r\n",
        "html": "<form *ngIf=\"userFormGroup\" [formGroup]=\"userFormGroup\">\r\n    \r\n    <button class=\"btn btn-primary\" (click)=\"addIndex()\">Add Number<\/button>\r\n    <table class=\"table\">\r\n        <thead>\r\n            <tr>\r\n                <th scope=\"col\">#<\/th>\r\n                <th scope=\"col\">Negative Arithemtic Expression<\/th>\r\n               \r\n            <\/tr>\r\n        <\/thead>\r\n        <tbody>\r\n            <tr [formGroup]=\"address\" *ngFor=\"let address of userFormGroup.controls.progressions.controls; let i = index\">\r\n                <th scope=\"row\">{{i}}<\/th>\r\n                <td><input type=\"text\" formControlName=\"positiveArithemticExpression\" class=\"form-control\" \/>\r\n                <\/td>\r\n                <br\/>\r\n              \t<small class=\"form-text text-danger\" *ngIf=\"address.controls.positiveArithemticExpression.errors\">{{address.controls.positiveArithemticExpression.errors.lessThan.message}}<br\/><\/small>\r\n            <\/tr>\r\n        <\/tbody>\r\n    <\/table>\r\n    <button  [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit<\/button>\r\n<\/form>",
        "model": "import { propArray,lessThan } from \"@rxweb\/reactive-form-validators\"\r\n\r\nexport class Progression {\r\n  @lessThan({isArrayControl:true})\r\n  positiveArithemticExpression: number;\r\n\r\n}\r\n\r\nexport class User {\r\n\r\n  @propArray(Progression)\r\n  progressions: Progression[];\r\n}\r\n",
        "modelName": "user.model.ts",
        "json": {}
      }
}