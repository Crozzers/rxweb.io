{
    "complete": {
        "notes": null,
        "component": "import { Component, OnInit } from '@angular\/core';\r\nimport { FormGroup, FormBuilder, FormArray } from \"@angular\/forms\";\r\nimport { RxwebValidators, ReactiveFormConfig } from '@rxweb\/reactive-form-validators'\r\n\r\n@Component({\r\n    selector: 'app-greaterThanLessThanFormArray-complete-validator',\r\n    templateUrl: '.\/greater-than-less-than-form-array-complete.component.html'\r\n})\r\nexport class GreaterThanLessThanFormArrayCompleteValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup;\r\n    constructor(private formBuilder: FormBuilder) {\r\n\r\n    }\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n            name: [],\r\n            progressions: this.formBuilder.array([])\r\n        })\r\n        const add = this.userFormGroup.get('progressions') as FormArray;\r\n        add.push(this.formBuilder.group({\r\n            positiveArithemticExpression: ['', RxwebValidators.greaterThan({ isArrayControl: true })],\r\n\r\n        }))\r\n    }\r\n\r\n\r\n\r\n    addIndex() {\r\n        const add = this.userFormGroup.get('progressions') as FormArray;\r\n        add.push(this.formBuilder.group({\r\n            positiveArithemticExpression: ['', RxwebValidators.greaterThan({ isArrayControl: true })],\r\n\r\n        }))\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n",
        "html": "<form *ngIf=\"userFormGroup\" [formGroup]=\"userFormGroup\">\r\n    \r\n    <button class=\"btn btn-primary\" (click)=\"addIndex()\">Add Number<\/button>\r\n    <table class=\"table\">\r\n        <thead>\r\n            <tr>\r\n                <th scope=\"col\">#<\/th>\r\n                <th scope=\"col\">Positive Arithemtic Expression<\/th>\r\n               \r\n            <\/tr>\r\n        <\/thead>\r\n        <tbody>\r\n            <tr [formGroup]=\"address\" *ngFor=\"let address of userFormGroup.controls.progressions.controls; let i = index\">\r\n                <th scope=\"row\">{{i }}<\/th>\r\n                <td><input type=\"text\" formControlName=\"positiveArithemticExpression\" class=\"form-control\" \/>\r\n                <\/td>\r\n                <br\/>\r\n              \t<small class=\"form-text text-danger\" *ngIf=\"address.controls.positiveArithemticExpression.errors\">{{address.controls.positiveArithemticExpression.errors.greaterThan.message}}<br\/><\/small>\r\n            <\/tr>\r\n        <\/tbody>\r\n    <\/table>\r\n    <button  [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit<\/button>\r\n<\/form>",
        "model": null,
        "modelName": null,
        "json": {}
      },
      "add":{
        "notes": null,
        "html": "<form *ngIf=\"userFormGroup\" [formGroup]=\"userFormGroup\">\r\n    \r\n    <button class=\"btn btn-primary\" (click)=\"addIndex()\">Add Number<\/button>\r\n    <table class=\"table\">\r\n        <thead>\r\n            <tr>\r\n                <th scope=\"col\">#<\/th>\r\n                <th scope=\"col\">Negative Arithemtic Expression<\/th>\r\n               \r\n            <\/tr>\r\n        <\/thead>\r\n        <tbody>\r\n            <tr [formGroup]=\"address\" *ngFor=\"let address of userFormGroup.controls.progressions.controls; let i = index\">\r\n                <th scope=\"row\">{{i }}<\/th>\r\n                <td><input type=\"text\" formControlName=\"positiveArithemticExpression\" class=\"form-control\" \/>\r\n                <\/td>\r\n                <br\/>\r\n              \t<small class=\"form-text text-danger\" *ngIf=\"address.controls.positiveArithemticExpression.errors\">{{address.controls.positiveArithemticExpression.errors.lessThan.message}}<br\/><\/small>\r\n            <\/tr>\r\n        <\/tbody>\r\n    <\/table>\r\n    <button  [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit<\/button>\r\n<\/form>",
        "component": "import { Component, OnInit } from '@angular\/core';\r\nimport { FormGroup, FormBuilder, FormArray } from \"@angular\/forms\";\r\nimport { RxwebValidators, ReactiveFormConfig } from '@rxweb\/reactive-form-validators'\r\n\r\n@Component({\r\n    selector: 'app-greaterThanLessThanFormArray-add-validator',\r\n    templateUrl: '.\/greater-than-less-than-form-array-add.component.html'\r\n})\r\nexport class GreaterThanLessThanFormArrayAddValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup;\r\n    constructor(private formBuilder: FormBuilder) {\r\n\r\n    }\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n            name: [],\r\n            progressions: this.formBuilder.array([])\r\n        })\r\n        const add = this.userFormGroup.get('progressions') as FormArray;\r\n        add.push(this.formBuilder.group({\r\n            positiveArithemticExpression: ['', RxwebValidators.lessThan({ isArrayControl: true })],\r\n\r\n        }))\r\n    }\r\n\r\n\r\n\r\n    addIndex() {\r\n        const add = this.userFormGroup.get('progressions') as FormArray;\r\n        add.push(this.formBuilder.group({\r\n            positiveArithemticExpression: ['', RxwebValidators.greaterThan({ isArrayControl: true })],\r\n\r\n        }))\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n",
        "model": null,
        "modelName": null,
        "json": {}
      }
}