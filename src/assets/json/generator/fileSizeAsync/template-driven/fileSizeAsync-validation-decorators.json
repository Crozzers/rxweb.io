{"complete":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-fileSizeAsync-complete-template-driven-validation-decorators',\r\n    templateUrl: './file-size-async-complete.component.html'\r\n})\r\nexport class FileSizeAsyncCompleteTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    userinfo: UserInfo\r\n\t\t\t\t\tfileTypes = [ \"Picture\", \"Document\",];\r\n\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.userinfo= new UserInfo()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userinfoForm = \"ngForm\" [rxwebForm]=\"userinfoForm\" [model]=\"userinfo\">\r\n    <div class=\"form-group\">\r\n      <label>File Type</label>\r\n      <select name=\"fileType\" [(ngModel)]=\"userinfo.fileType\"  class=\"form-control\" >\r\n\t\t<option [value]=\"item\" *ngFor=\"let item of fileTypes\">{{item}}</option>\r\n      </select>\r\n\r\n      <small class=\"form-text text-muted\">Based on selection of file type conditional validation is applied<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userinfoForm.controls?.fileType?.errors\">{{userinfoForm.controls?.fileType?.errors?.fileSize.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Video File</label>\r\n\t    <input type=\"file\" name=\"videoFile\"\r\n            [(ngModel)]=\"userinfo.videoFile\"  class=\"form-control\"\r\n      />\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userinfoForm.controls?.videoFile?.errors\">{{userinfoForm.controls?.videoFile?.errors?.fileSize.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Audio File</label>\r\n\t    <input type=\"file\" name=\"audioFile\"\r\n            [(ngModel)]=\"userinfo.audioFile\"  class=\"form-control\"\r\n      />\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userinfoForm.controls?.audioFile?.errors\">{{userinfoForm.controls?.audioFile?.errors?.fileSize.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Contact File</label>\r\n\t    <input type=\"file\" name=\"contactFile\"\r\n            [(ngModel)]=\"userinfo.contactFile\"  class=\"form-control\"\r\n      />\r\n\r\n      <small class=\"form-text text-muted\">Uploaded File must be in the file size range.<br/></small>\r\n      <small class=\"form-text text-muted\">It shows custom message<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userinfoForm.controls?.contactFile?.errors\">{{userinfoForm.controls?.contactFile?.errors?.fileSize.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Profile Picture</label>\r\n\t    <input type=\"file\" name=\"profilePicture\"\r\n            [(ngModel)]=\"userinfo.profilePicture\"  class=\"form-control\"\r\n      />\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userinfoForm.controls?.profilePicture?.errors\">{{userinfoForm.controls?.profilePicture?.errors?.fileSize.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Excel File</label>\r\n\t    <input type=\"file\" name=\"excelFile\"\r\n            [(ngModel)]=\"userinfo.excelFile\"  class=\"form-control\"\r\n      />\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userinfoForm.controls?.excelFile?.errors\">{{userinfoForm.controls?.excelFile?.errors?.fileSize.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userinfoForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  fileSizeAsync,prop, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class UserInfo {\r\n\r\n\t@prop()\r\n\tfileType: string;\r\n\r\n\t@fileSizeAsync({validatorConfig:of({maxSize:100})}) \r\n\tvideoFile: string;\r\n\t\r\n\t\r\n\t@fileSizeAsync({validatorConfig:of({minSize:3  ,maxSize:100})}) \r\n\taudioFile: string;\r\n\t\r\n\t\r\n\t@fileSizeAsync({validatorConfig:of({maxSize:10  ,message:'File exceed maximum size.'})}) \r\n\tcontactFile: string;\r\n\t\r\n\t\r\n\t@fileSizeAsync({validatorConfig:of({maxSize:50})}) \r\n\tprofilePicture: string;\r\n\t\r\n\t\r\n\t@fileSizeAsync({validatorConfig:of({maxSize:100  ,messageKey:'fileSizeMessageKey'})}) \r\n\texcelFile: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"user-info.model.ts","json":{}},"maxSizeExample":{"notes":null,"component":null,"html":null,"model":"@fileSizeAsync({validatorConfig:of({maxSize:100})}) \r\nvideoFile: string;\r\n","modelName":null,"json":{}},"maxSize":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-fileSizeAsync-maxSize-template-driven-validation-decorators',\r\n    templateUrl: './file-size-async-max-size.component.html'\r\n})\r\nexport class FileSizeAsyncMaxSizeTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    userinfo: UserInfo\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.userinfo= new UserInfo()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userinfoForm = \"ngForm\" [rxwebForm]=\"userinfoForm\" [model]=\"userinfo\">\r\n    <div class=\"form-group\">\r\n      <label>Video File</label>\r\n\t    <input type=\"file\" name=\"videoFile\"\r\n            [(ngModel)]=\"userinfo.videoFile\"  class=\"form-control\"\r\n      />\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userinfoForm.controls?.videoFile?.errors\">{{userinfoForm.controls?.videoFile?.errors?.fileSize.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userinfoForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  fileSizeAsync, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class UserInfo {\r\n\r\n\t@fileSizeAsync({validatorConfig:of({maxSize:100})}) \r\n\tvideoFile: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"user-info.model.ts","json":{}},"minSizeExample":{"notes":null,"component":null,"html":null,"model":"@fileSizeAsync({validatorConfig:of({minSize:3  ,maxSize:100})}) \r\naudioFile: string;\r\n","modelName":null,"json":{}},"minSize":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-fileSizeAsync-minSize-template-driven-validation-decorators',\r\n    templateUrl: './file-size-async-min-size.component.html'\r\n})\r\nexport class FileSizeAsyncMinSizeTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    userinfo: UserInfo\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.userinfo= new UserInfo()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userinfoForm = \"ngForm\" [rxwebForm]=\"userinfoForm\" [model]=\"userinfo\">\r\n    <div class=\"form-group\">\r\n      <label>Audio File</label>\r\n\t    <input type=\"file\" name=\"audioFile\"\r\n            [(ngModel)]=\"userinfo.audioFile\"  class=\"form-control\"\r\n      />\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userinfoForm.controls?.audioFile?.errors\">{{userinfoForm.controls?.audioFile?.errors?.fileSize.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userinfoForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  fileSizeAsync, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class UserInfo {\r\n\r\n\t@fileSizeAsync({validatorConfig:of({minSize:3  ,maxSize:100})}) \r\n\taudioFile: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"user-info.model.ts","json":{}},"messageExample":{"notes":null,"component":null,"html":null,"model":"@fileSizeAsync({validatorConfig:of({maxSize:10  ,message:'File exceed maximum size.'})}) \r\ncontactFile: string;\r\n","modelName":null,"json":{}},"message":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-fileSizeAsync-message-template-driven-validation-decorators',\r\n    templateUrl: './file-size-async-message.component.html'\r\n})\r\nexport class FileSizeAsyncMessageTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    userinfo: UserInfo\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.userinfo= new UserInfo()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userinfoForm = \"ngForm\" [rxwebForm]=\"userinfoForm\" [model]=\"userinfo\">\r\n    <div class=\"form-group\">\r\n      <label>Contact File</label>\r\n\t    <input type=\"file\" name=\"contactFile\"\r\n            [(ngModel)]=\"userinfo.contactFile\"  class=\"form-control\"\r\n      />\r\n\r\n      <small class=\"form-text text-muted\">Uploaded File must be in the file size range.<br/></small>\r\n      <small class=\"form-text text-muted\">It shows custom message<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userinfoForm.controls?.contactFile?.errors\">{{userinfoForm.controls?.contactFile?.errors?.fileSize.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userinfoForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  fileSizeAsync, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class UserInfo {\r\n\r\n\t@fileSizeAsync({validatorConfig:of({maxSize:10  ,message:'File exceed maximum size.'})}) \r\n\tcontactFile: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"user-info.model.ts","json":{}},"messageKeyExample":{"notes":null,"component":null,"html":null,"model":"@fileSizeAsync({validatorConfig:of({maxSize:100  ,messageKey:'fileSizeMessageKey'})}) \r\nexcelFile: string;\r\n","modelName":null,"json":{}},"messageKey":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-fileSizeAsync-messageKey-template-driven-validation-decorators',\r\n    templateUrl: './file-size-async-message-key.component.html'\r\n})\r\nexport class FileSizeAsyncMessageKeyTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    userinfo: UserInfo\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.userinfo= new UserInfo()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userinfoForm = \"ngForm\" [rxwebForm]=\"userinfoForm\" [model]=\"userinfo\">\r\n    <div class=\"form-group\">\r\n      <label>Excel File</label>\r\n\t    <input type=\"file\" name=\"excelFile\"\r\n            [(ngModel)]=\"userinfo.excelFile\"  class=\"form-control\"\r\n      />\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userinfoForm.controls?.excelFile?.errors\">{{userinfoForm.controls?.excelFile?.errors?.fileSize.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userinfoForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  fileSizeAsync, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class UserInfo {\r\n\r\n\t@fileSizeAsync({validatorConfig:of({maxSize:100  ,messageKey:'fileSizeMessageKey'})}) \r\n\texcelFile: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"user-info.model.ts","json":{}},"add":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-fileSizeAsync-add-template-driven-validation-decorators',\r\n    templateUrl: './file-size-async-add.component.html'\r\n})\r\nexport class FileSizeAsyncAddTemplateDrivenValidationDecoratorsComponent implements OnInit {\r\n    userinfo: UserInfo\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.userinfo= new UserInfo()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userinfoForm = \"ngForm\" [rxwebForm]=\"userinfoForm\" [model]=\"userinfo\">\r\n    <div class=\"form-group\">\r\n      <label>Profile Picture</label>\r\n\t    <input type=\"file\" name=\"profilePicture\"\r\n            [(ngModel)]=\"userinfo.profilePicture\"  class=\"form-control\"\r\n      />\r\n\r\n      <small class=\"form-text text-muted\">Uploaded File must be in the file size range.<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userinfoForm.controls?.profilePicture?.errors\">{{userinfoForm.controls?.profilePicture?.errors?.fileSize.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userinfoForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  fileSizeAsync, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class UserInfo {\r\n\r\n\t@fileSizeAsync({validatorConfig:of({maxSize:10})}) \r\n\tprofilePicture: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"user-info.model.ts","json":{}}}