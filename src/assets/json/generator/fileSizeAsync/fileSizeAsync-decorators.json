{"complete":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-fileSizeAsync-complete',\r\n    templateUrl: './file-size-async-complete.component.html'\r\n})\r\nexport class FileSizeAsyncCompleteComponent implements OnInit {\r\n    userInfoFormGroup: FormGroup\r\n\t\t\t\tfileTypes = [ \"Picture\", \"Document\",];\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let userInfo = new UserInfo();\r\n        this.userInfoFormGroup = this.formBuilder.formGroup(userInfo);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>File Type</label>\r\n      <select formControlName=\"fileType\" class=\"form-control\">\r\n\t\t<option [value]=\"item\" *ngFor=\"let item of fileTypes\">{{item}}</option>\r\n      </select>\r\n      <small class=\"form-text text-muted\">Based on selection of file type conditional validation is applied<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.fileType.errors\">{{userInfoFormGroup.controls.fileType.errors.fileSizeAsync.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Video File</label>\r\n      <input type=\"file\" formControlName=\"videoFile\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.videoFile.errors\">{{userInfoFormGroup.controls.videoFile.errors.fileSizeAsync.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Audio File</label>\r\n      <input type=\"file\" formControlName=\"audioFile\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.audioFile.errors\">{{userInfoFormGroup.controls.audioFile.errors.fileSizeAsync.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Contact File</label>\r\n      <input type=\"file\" formControlName=\"contactFile\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Uploaded File must be in the file size range.<br/></small>\r\n      <small class=\"form-text text-muted\">It shows custom message<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.contactFile.errors\">{{userInfoFormGroup.controls.contactFile.errors.fileSizeAsync.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Profile Picture</label>\r\n      <input type=\"file\" formControlName=\"profilePicture\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.profilePicture.errors\">{{userInfoFormGroup.controls.profilePicture.errors.fileSizeAsync.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Excel File</label>\r\n      <input type=\"file\" formControlName=\"excelFile\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.excelFile.errors\">{{userInfoFormGroup.controls.excelFile.errors.fileSizeMessageKey.message}}<br/></small>\t\t\r\n    </div>\r\n    <button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  fileSizeAsync,prop, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class UserInfo {\r\n\r\n\t@prop()\r\n\tfileType: string;\r\n\r\n\t@fileSizeAsync({maxSize:100 }) \r\n\tvideoFile: string;\r\n\t\r\n\t\r\n\t@fileSizeAsync({minSize:3  ,maxSize:100 }) \r\n\taudioFile: string;\r\n\t\r\n\t\r\n\t@fileSizeAsync({maxSize:10  ,message:'File exceed maximum size.' }) \r\n\tcontactFile: string;\r\n\t\r\n\t\r\n\t@fileSizeAsync({maxSize:50 }) \r\n\tprofilePicture: string;\r\n\t\r\n\t\r\n\t@fileSizeAsync({maxSize:100  ,messageKey:'fileSizeMessageKey' }) \r\n\texcelFile: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"user-info.model.ts","json":{}},"maxSizeExample":{"notes":null,"component":null,"html":null,"model":"@fileSizeAsync({maxSize:100 }) \r\nvideoFile: string;\r\n","modelName":null,"json":{}},"maxSize":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-fileSizeAsync-maxSize',\r\n    templateUrl: './file-size-async-max-size.component.html'\r\n})\r\nexport class FileSizeAsyncMaxSizeComponent implements OnInit {\r\n    userInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let userInfo = new UserInfo();\r\n        this.userInfoFormGroup = this.formBuilder.formGroup(userInfo);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Video File</label>\r\n      <input type=\"file\" formControlName=\"videoFile\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.videoFile.errors\">{{userInfoFormGroup.controls.videoFile.errors.fileSizeAsync.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  fileSizeAsync, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class UserInfo {\r\n\r\n\t@fileSizeAsync({maxSize:100 }) \r\n\tvideoFile: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"user-info.model.ts","json":{}},"minSizeExample":{"notes":null,"component":null,"html":null,"model":"@fileSizeAsync({minSize:3  ,maxSize:100 }) \r\naudioFile: string;\r\n","modelName":null,"json":{}},"minSize":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-fileSizeAsync-minSize',\r\n    templateUrl: './file-size-async-min-size.component.html'\r\n})\r\nexport class FileSizeAsyncMinSizeComponent implements OnInit {\r\n    userInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let userInfo = new UserInfo();\r\n        this.userInfoFormGroup = this.formBuilder.formGroup(userInfo);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Audio File</label>\r\n      <input type=\"file\" formControlName=\"audioFile\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.audioFile.errors\">{{userInfoFormGroup.controls.audioFile.errors.fileSizeAsync.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  fileSizeAsync, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class UserInfo {\r\n\r\n\t@fileSizeAsync({minSize:3  ,maxSize:100 }) \r\n\taudioFile: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"user-info.model.ts","json":{}},"messageExample":{"notes":null,"component":null,"html":null,"model":"@fileSizeAsync({maxSize:10  ,message:'File exceed maximum size.' }) \r\ncontactFile: string;\r\n","modelName":null,"json":{}},"message":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-fileSizeAsync-message',\r\n    templateUrl: './file-size-async-message.component.html'\r\n})\r\nexport class FileSizeAsyncMessageComponent implements OnInit {\r\n    userInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let userInfo = new UserInfo();\r\n        this.userInfoFormGroup = this.formBuilder.formGroup(userInfo);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Contact File</label>\r\n      <input type=\"file\" formControlName=\"contactFile\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Uploaded File must be in the file size range.<br/></small>\r\n      <small class=\"form-text text-muted\">It shows custom message<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.contactFile.errors\">{{userInfoFormGroup.controls.contactFile.errors.fileSizeAsync.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  fileSizeAsync, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class UserInfo {\r\n\r\n\t@fileSizeAsync({maxSize:10  ,message:'File exceed maximum size.' }) \r\n\tcontactFile: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"user-info.model.ts","json":{}},"messageKeyExample":{"notes":null,"component":null,"html":null,"model":"@fileSizeAsync({maxSize:100  ,messageKey:'fileSizeMessageKey' }) \r\nexcelFile: string;\r\n","modelName":null,"json":{}},"messageKey":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-fileSizeAsync-messageKey',\r\n    templateUrl: './file-size-async-message-key.component.html'\r\n})\r\nexport class FileSizeAsyncMessageKeyComponent implements OnInit {\r\n    userInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let userInfo = new UserInfo();\r\n        this.userInfoFormGroup = this.formBuilder.formGroup(userInfo);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Excel File</label>\r\n      <input type=\"file\" formControlName=\"excelFile\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.excelFile.errors\">{{userInfoFormGroup.controls.excelFile.errors.fileSizeMessageKey.message}}<br/></small>\t\t\r\n    </div>\r\n    <button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  fileSizeAsync, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class UserInfo {\r\n\r\n\t@fileSizeAsync({maxSize:100  ,messageKey:'fileSizeMessageKey' }) \r\n\texcelFile: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"user-info.model.ts","json":{}},"dynamic":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\nimport { FormBuilderConfiguration,} from '@rxweb/reactive-form-validators';\r\n\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-fileSizeAsync-dynamic',\r\n    templateUrl: './file-size-async-dynamic.component.html'\r\n})\r\nexport class FileSizeAsyncDynamicComponent implements OnInit {\r\n    userInfoFormGroup: FormGroup\r\n\t\t\t\tfileTypes = [ \"Picture\", \"Document\",];\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder,private http: HttpClient    ) { }\r\n\r\n    ngOnInit() {\r\n        let userInfo = new UserInfo();\r\n        let formBuilderConfiguration = new FormBuilderConfiguration();\r\n\t\tthis.http.get('assets/examples/reactive-form-validators/decorators/fileSizeAsync/dynamic/dynamic.json?v=' + environment.appVersion).subscribe(dynamic => {\r\n            formBuilderConfiguration.dynamicValidation = JSON.parse(JSON.stringify(dynamic));\r\n\t\t\tthis.userInfoFormGroup = this.formBuilder.formGroup(userInfo,formBuilderConfiguration);\r\n        })\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  *ngIf=\"userInfoFormGroup\"  [formGroup]=\"userInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>File Type</label>\r\n      <select formControlName=\"fileType\" class=\"form-control\">\r\n\t\t<option [value]=\"item\" *ngFor=\"let item of fileTypes\">{{item}}</option>\r\n      </select>\r\n      <small class=\"form-text text-muted\">Based on selection of file type conditional validation is applied<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.fileType.errors\">{{userInfoFormGroup.controls.fileType.errors.fileSizeAsync.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Video File</label>\r\n      <input type=\"file\" formControlName=\"videoFile\" class=\"form-control\"   />\r\n     <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.videoFile.errors\">{{userInfoFormGroup.controls.videoFile.errors.fileSizeAsync.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Audio File</label>\r\n      <input type=\"file\" formControlName=\"audioFile\" class=\"form-control\"   />\r\n     <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.audioFile.errors\">{{userInfoFormGroup.controls.audioFile.errors.fileSizeAsync.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Contact File</label>\r\n      <input type=\"file\" formControlName=\"contactFile\" class=\"form-control\"   />\r\n      <small class=\"form-text text-muted\">Uploaded File must be in the file size range.<br/></small>\r\n      <small class=\"form-text text-muted\">It shows custom message<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.contactFile.errors\">{{userInfoFormGroup.controls.contactFile.errors.fileSizeAsync.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Profile Picture</label>\r\n      <input type=\"file\" formControlName=\"profilePicture\" class=\"form-control\"   />\r\n     <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.profilePicture.errors\">{{userInfoFormGroup.controls.profilePicture.errors.fileSizeAsync.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Excel File</label>\r\n      <input type=\"file\" formControlName=\"excelFile\" class=\"form-control\"   />\r\n     <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.excelFile.errors\">{{userInfoFormGroup.controls.excelFile.errors.fileSizeMessageKey.message}}<br/></small>\t\t\r\n    </div>\r\n    <button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  fileSizeAsync,prop, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class UserInfo {\r\n\r\n\t@prop()\r\n\tfileType: string;\r\n\r\n\t@prop()\r\n\tvideoFile: string;\r\n\r\n\t@prop()\r\n\taudioFile: string;\r\n\r\n\t@prop()\r\n\tcontactFile: string;\r\n\r\n\t@prop()\r\n\tprofilePicture: string;\r\n\r\n\t@prop()\r\n\texcelFile: string;\r\n\r\n}\r\n","modelName":"user-info.model.ts","json":{"dynamic.json":"{\"fileType\":{},\"videoFile\":{\"fileSizeAsync\":{\"maxSize\":\"100\"}},\"audioFile\":{\"fileSizeAsync\":{\"minSize\":\"3\",\"maxSize\":\"100\"}},\"contactFile\":{\"fileSizeAsync\":{\"maxSize\":\"10\",\"message\":\"File exceed maximum size.\"}},\"profilePicture\":{\"fileSizeAsync\":{\"maxSize\":\"50\"}},\"excelFile\":{\"fileSizeAsync\":{\"maxSize\":\"100\",\"messageKey\":\"fileSizeMessageKey\"}}}"}},"add":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-fileSizeAsync-add',\r\n    templateUrl: './file-size-async-add.component.html'\r\n})\r\nexport class FileSizeAsyncAddComponent implements OnInit {\r\n    userInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let userInfo = new UserInfo();\r\n        this.userInfoFormGroup = this.formBuilder.formGroup(userInfo);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Profile Picture</label>\r\n      <input type=\"file\" formControlName=\"profilePicture\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Uploaded File must be in the file size range.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.profilePicture.errors\">{{userInfoFormGroup.controls.profilePicture.errors.fileSizeAsync.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  fileSizeAsync, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class UserInfo {\r\n\r\n\t@fileSizeAsync({maxSize:10 }) \r\n\tprofilePicture: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"user-info.model.ts","json":{}},"edit":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { UserInfo } from './user-info.model';\r\n\r\n@Component({\r\n    selector: 'app-fileSizeAsync-edit',\r\n    templateUrl: './file-size-async-edit.component.html'\r\n})\r\nexport class FileSizeAsyncEditComponent implements OnInit {\r\n    userInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder,private http: HttpClient    ) { }\r\n\r\n    ngOnInit() {\r\n        this.http.get('assets/examples/reactive-form-validators/decorators/fileSizeAsync/edit/user-info-data.json?v=' + environment.appVersion).subscribe(userInfo => {\r\n            this.userInfoFormGroup = this.formBuilder.formGroup<UserInfo>(UserInfo,userInfo);\r\n        })\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  *ngIf=\"userInfoFormGroup\"  [formGroup]=\"userInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Profile Picture</label>\r\n      <input type=\"file\" formControlName=\"profilePicture\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Uploaded File must be in the file size range.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.profilePicture.errors\">{{userInfoFormGroup.controls.profilePicture.errors.fileSizeAsync.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  fileSizeAsync, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class UserInfo {\r\n\r\n\t@fileSizeAsync({maxSize:10 }) \r\n\tprofilePicture: string;\r\n\t\r\n\t\r\n}\r\n","modelName":"user-info.model.ts","json":{"user-info-data.json":"{\"profilePicture\":\"google.jpg\"}"}}}