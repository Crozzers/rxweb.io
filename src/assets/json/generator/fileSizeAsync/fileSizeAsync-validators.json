{"complete":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-fileSizeAsync-complete-validator',\r\n    templateUrl: './file-size-async-complete.component.html'\r\n})\r\nexport class FileSizeAsyncCompleteValidatorComponent implements OnInit {\r\n    userInfoFormGroup: FormGroup\r\n\r\n\t\t\t\tfileTypes = [ \"Picture\", \"Document\",];\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.userInfoFormGroup = this.formBuilder.group({\r\n            fileType:['',], \r\n            videoFile:['', RxwebValidators.fileSizeAsync({maxSize:100 })], \r\n            audioFile:['', RxwebValidators.fileSizeAsync({minSize:3  ,maxSize:100 })], \r\n            contactFile:['', RxwebValidators.fileSizeAsync({maxSize:10  ,message:'File exceed maximum size.' })], \r\n            profilePicture:['', RxwebValidators.fileSizeAsync({maxSize:50 })], \r\n            excelFile:['', RxwebValidators.fileSizeAsync({maxSize:100  ,messageKey:'fileSizeMessageKey' })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>File Type</label>\r\n      <select formControlName=\"fileType\" class=\"form-control\">\r\n\t\t<option [value]=\"item\" *ngFor=\"let item of fileTypes\">{{item}}</option>\r\n      </select>\r\n      <small class=\"form-text text-muted\">Based on selection of file type conditional validation is applied<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.fileType.errors\">{{userInfoFormGroup.controls.fileType.errors.fileSizeAsync.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Video File</label>\r\n      <input type=\"file\" formControlName=\"videoFile\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.videoFile.errors\">{{userInfoFormGroup.controls.videoFile.errors.fileSizeAsync.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Audio File</label>\r\n      <input type=\"file\" formControlName=\"audioFile\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.audioFile.errors\">{{userInfoFormGroup.controls.audioFile.errors.fileSizeAsync.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Contact File</label>\r\n      <input type=\"file\" formControlName=\"contactFile\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Uploaded File must be in the file size range.<br/></small>\r\n      <small class=\"form-text text-muted\">It shows custom message<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.contactFile.errors\">{{userInfoFormGroup.controls.contactFile.errors.fileSizeAsync.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Profile Picture</label>\r\n      <input type=\"file\" formControlName=\"profilePicture\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.profilePicture.errors\">{{userInfoFormGroup.controls.profilePicture.errors.fileSizeAsync.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Excel File</label>\r\n      <input type=\"file\" formControlName=\"excelFile\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.excelFile.errors\">{{userInfoFormGroup.controls.excelFile.errors.fileSizeMessageKey.message}}<br/></small>\t\t\r\n    </div>\r\n    <button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"json":{}},"maxSizeExample":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.fileSizeAsync({maxSize:100 });\r\n","modelName":null,"json":{}},"maxSize":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-fileSizeAsync-maxSize-validator',\r\n    templateUrl: './file-size-async-max-size.component.html'\r\n})\r\nexport class FileSizeAsyncMaxSizeValidatorComponent implements OnInit {\r\n    userInfoFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.userInfoFormGroup = this.formBuilder.group({\r\n            videoFile:['', RxwebValidators.fileSizeAsync({maxSize:100 })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Video File</label>\r\n      <input type=\"file\" formControlName=\"videoFile\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.videoFile.errors\">{{userInfoFormGroup.controls.videoFile.errors.fileSizeAsync.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"json":{}},"minSizeExample":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.fileSizeAsync({minSize:3  ,maxSize:100 });\r\n","modelName":null,"json":{}},"minSize":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-fileSizeAsync-minSize-validator',\r\n    templateUrl: './file-size-async-min-size.component.html'\r\n})\r\nexport class FileSizeAsyncMinSizeValidatorComponent implements OnInit {\r\n    userInfoFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.userInfoFormGroup = this.formBuilder.group({\r\n            audioFile:['', RxwebValidators.fileSizeAsync({minSize:3  ,maxSize:100 })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Audio File</label>\r\n      <input type=\"file\" formControlName=\"audioFile\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.audioFile.errors\">{{userInfoFormGroup.controls.audioFile.errors.fileSizeAsync.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"json":{}},"messageExample":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.fileSizeAsync({maxSize:10  ,message:'File exceed maximum size.' });\r\n","modelName":null,"json":{}},"message":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-fileSizeAsync-message-validator',\r\n    templateUrl: './file-size-async-message.component.html'\r\n})\r\nexport class FileSizeAsyncMessageValidatorComponent implements OnInit {\r\n    userInfoFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.userInfoFormGroup = this.formBuilder.group({\r\n            contactFile:['', RxwebValidators.fileSizeAsync({maxSize:10  ,message:'File exceed maximum size.' })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Contact File</label>\r\n      <input type=\"file\" formControlName=\"contactFile\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Uploaded File must be in the file size range.<br/></small>\r\n      <small class=\"form-text text-muted\">It shows custom message<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.contactFile.errors\">{{userInfoFormGroup.controls.contactFile.errors.fileSizeAsync.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"json":{}},"messageKeyExample":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.fileSizeAsync({maxSize:100  ,messageKey:'fileSizeMessageKey' });\r\n","modelName":null,"json":{}},"messageKey":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-fileSizeAsync-messageKey-validator',\r\n    templateUrl: './file-size-async-message-key.component.html'\r\n})\r\nexport class FileSizeAsyncMessageKeyValidatorComponent implements OnInit {\r\n    userInfoFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.userInfoFormGroup = this.formBuilder.group({\r\n            excelFile:['', RxwebValidators.fileSizeAsync({maxSize:100  ,messageKey:'fileSizeMessageKey' })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Excel File</label>\r\n      <input type=\"file\" formControlName=\"excelFile\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.excelFile.errors\">{{userInfoFormGroup.controls.excelFile.errors.fileSizeMessageKey.message}}<br/></small>\t\t\r\n    </div>\r\n    <button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"json":{}},"dynamic":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormBuilderConfiguration,RxFormBuilder} from '@rxweb/reactive-form-validators';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n    selector: 'app-fileSizeAsync-dynamic-validator',\r\n    templateUrl: './file-size-async-dynamic.component.html'\r\n})\r\nexport class FileSizeAsyncDynamicValidatorComponent implements OnInit {\r\n    userInfoFormGroup: FormGroup\r\n\r\n\t\t\t\tfileTypes = [ \"Picture\", \"Document\",];\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\tconstructor(\r\n        private formBuilder: RxFormBuilder , private http: HttpClient )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n\t\tlet formBuilderConfiguration = new FormBuilderConfiguration();\r\n\t\tthis.http.get('assets/examples/reactive-form-validators/validators/fileSizeAsync/dynamic/dynamic.json?v='+environment.appVersion).subscribe(dynamic => {\r\n\t\t\tformBuilderConfiguration.dynamicValidation = JSON.parse(JSON.stringify(dynamic));\r\n\t\t\tvar userInfo = { fileType:'', videoFile:'', audioFile:'', contactFile:'', profilePicture:'', excelFile:'',  }\r\n\t\t\tthis.userInfoFormGroup = this.formBuilder.group(userInfo,formBuilderConfiguration);\r\n\t\t})\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  *ngIf=\"userInfoFormGroup\"  [formGroup]=\"userInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>File Type</label>\r\n      <select formControlName=\"fileType\" class=\"form-control\">\r\n\t\t<option [value]=\"item\" *ngFor=\"let item of fileTypes\">{{item}}</option>\r\n      </select>\r\n      <small class=\"form-text text-muted\">Based on selection of file type conditional validation is applied<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.fileType.errors\">{{userInfoFormGroup.controls.fileType.errors.fileSizeAsync.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Video File</label>\r\n      <input type=\"file\" formControlName=\"videoFile\" class=\"form-control\"   />\r\n     <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.videoFile.errors\">{{userInfoFormGroup.controls.videoFile.errors.fileSizeAsync.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Audio File</label>\r\n      <input type=\"file\" formControlName=\"audioFile\" class=\"form-control\"   />\r\n     <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.audioFile.errors\">{{userInfoFormGroup.controls.audioFile.errors.fileSizeAsync.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Contact File</label>\r\n      <input type=\"file\" formControlName=\"contactFile\" class=\"form-control\"   />\r\n      <small class=\"form-text text-muted\">Uploaded File must be in the file size range.<br/></small>\r\n      <small class=\"form-text text-muted\">It shows custom message<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.contactFile.errors\">{{userInfoFormGroup.controls.contactFile.errors.fileSizeAsync.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Profile Picture</label>\r\n      <input type=\"file\" formControlName=\"profilePicture\" class=\"form-control\"   />\r\n     <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.profilePicture.errors\">{{userInfoFormGroup.controls.profilePicture.errors.fileSizeAsync.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Excel File</label>\r\n      <input type=\"file\" formControlName=\"excelFile\" class=\"form-control\"   />\r\n     <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.excelFile.errors\">{{userInfoFormGroup.controls.excelFile.errors.fileSizeMessageKey.message}}<br/></small>\t\t\r\n    </div>\r\n    <button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"json":{"dynamic.json":"{\"fileType\":{},\"videoFile\":{\"fileSizeAsync\":{\"maxSize\":\"100\"}},\"audioFile\":{\"fileSizeAsync\":{\"minSize\":\"3\",\"maxSize\":\"100\"}},\"contactFile\":{\"fileSizeAsync\":{\"maxSize\":\"10\",\"message\":\"File exceed maximum size.\"}},\"profilePicture\":{\"fileSizeAsync\":{\"maxSize\":\"50\"}},\"excelFile\":{\"fileSizeAsync\":{\"maxSize\":\"100\",\"messageKey\":\"fileSizeMessageKey\"}}}"}},"add":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-fileSizeAsync-add-validator',\r\n    templateUrl: './file-size-async-add.component.html'\r\n})\r\nexport class FileSizeAsyncAddValidatorComponent implements OnInit {\r\n    userInfoFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.userInfoFormGroup = this.formBuilder.group({\r\n            profilePicture:['', RxwebValidators.fileSizeAsync({maxSize:10 })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Profile Picture</label>\r\n      <input type=\"file\" formControlName=\"profilePicture\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Uploaded File must be in the file size range.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userInfoFormGroup.controls.profilePicture.errors\">{{userInfoFormGroup.controls.profilePicture.errors.fileSizeAsync.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"json":{}}}