{"rightSidebarLinks":[{"id":"example","title":"Example","subLink":[]}],"title":"Dynamically Bind Validation Config","description":"","validatorType":"template-driven","validationTypeTitle":"Template Driven","type":"tabs","category":"how-to","linkTitle":"bindConfig","tabArray":{},"innerHtml":null,"htmlContent":"<p class='showHideElement' >While developing large forms, we have multiple needs to validate the FormControl. For that we are going to write the custom business logic a lot to manage the complex scenarios.</p>\r\n<p class='showHideElement' >The benefit of using this is don't have worry about when this validator will call, this will be called whatever properties you have used in the dynamicConfig function. Those thing the framework automatically take cares of it.</p>\r\n<p class='showHideElement' >Here is an example for a scenerio such that there are two fields Purchase price and Resale Price and the resaleprice is validated such that Resale price must be at least 30% more than Purchase price, This can be achieved using dynamicConfig. Lets see how:</p>\r\n<div class='row page-section' id= 'example'>\r\n<div class='col-lg-12'>\r\n<h2>Example<a title='Link to this heading' class='link-header' href='/how-to/bindConfig/template-driven/directives#example'><i class='fa fa-link'></i></a></h2>\r\n\r\n<div component=\"app-code\" key=\"bind-complete-component\"></div> \r\n<p class='showHideElement' >Next, we need to write html code.</p>\r\n<div component=\"app-code\" key=\"bind-complete-html\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-bind-complete\"></div>\r\n</div></div>\r\n"}