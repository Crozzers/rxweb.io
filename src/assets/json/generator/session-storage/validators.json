{"rightSidebarLinks":[{"id":"session-storage","title":"session-storage","subLink":null},{"id":"sessionstorage","title":"Session Storage","subLink":[]},{"id":"accessingthesessionstorage","title":"Accessing the session storage","subLink":[]},{"id":"example","title":"Example","subLink":[]}],"title":"Session Storage","description":"","validatorType":"validators","validationTypeTitle":"Validators","type":"simple","gitDocPath":"https://github.com/rxweb/rxweb.io/edit/master/docs/angular/storage/session-storage.md","category":"storage","subCategory":"","linkTitle":"sessionstorage","tabArray":{},"innerHtml":null,"htmlContent":"<div class='row page-section' id= 'sessionstorage'>\r\n<div class='col-lg-12'>\r\n<h2>Session Storage<a title='Link to this heading' class='link-header' href='/storage/sessionstorage/validators#sessionstorage'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' ><span class='highlighted'>session</span> property allows you to access the <span class='highlighted'>Storage</span> object for the <span class='highlighted'>BrowserStorage</span> base which maintains the data stored for the duration of a single page session. If multiple windows or tabs visit the same site, they will have two different Session Storage instances even if the browser is same.</p>\r\n<blockquote class='showHideElement' ><p>Session storage is maintained only per session. Once the userâ€™s browser is closed, that session would be lost and the persisted data will be deleted from the browser.</p></blockquote>\r\n</div></div>\r\n<div class='row page-section' id= 'accessingthesessionstorage'>\r\n<div class='col-lg-12'>\r\n<h2>Accessing the session storage<a title='Link to this heading' class='link-header' href='/storage/sessionstorage/validators#accessingthesessionstorage'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Session storage is available in the <span class='highlighted'>session</span> property of  the browserStorage object which extends the <span class='highlighted'>ClientDataStorage</span> of  <span class='highlighted'>@rxweb\\storage</span>. You just need to inject <span class='highlighted'>BrowserStorage</span>  in your component. </p>\r\n</div></div>\r\n<div class='row page-section' id= 'example'>\r\n<div class='col-lg-12'>\r\n<h2>Example<a title='Link to this heading' class='link-header' href='/storage/sessionstorage/validators#example'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Consider a scenario where you want to display the user's name on the UI, you just have to inject the BrowserStorage object in constructor of the component and use it like </p>\r\n<blockquote class='showHideElement' ><p>this.browserStorage.session.get('username');</p></blockquote>\r\n<p class='showHideElement' >Here is a sample component code mentioned.</p>\r\n<pre><code class=''>\r\n@Component({\r\n    selector: 'app-user-add',\r\n    template: \"<span>Hello {{user}}</span>\"\r\n})\r\nexport class UserAddComponent implements OnInit {\r\n  user: string = \"\";\r\n  constructor(private browserStorage: BrowserStorage) { }\r\n  ngOnInit() {\r\n    this.user = this.browserStorage.session.get('username');\r\n  }\r\n}\r\n</code></pre>\r\n</div></div>\r\n"}