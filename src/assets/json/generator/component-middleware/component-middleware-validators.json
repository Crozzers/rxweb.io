{
    "add":{
        "component":"import { Injectable } from \"@angular\/core\";\r\nimport { IMiddleware } from \"@rxweb\/angular-router\";\r\nimport { ActivatedRoute, Router } from \"@angular\/router\";\r\nimport { BrowserStorage } from \".\/browser-strorage\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class LoggedInMiddleware implements IMiddleware {\r\n  constructor(private router: Router, private storagedata: BrowserStorage) {}\r\n\r\n  invoke(user: { [key: string]: any }) {\r\n    const promise = new Promise<any>((resolve, reject) => {\r\n      var auth = this.storagedata.local.get(\"auth\",false);\r\n      if (auth) this.router.navigate([\"\/dashboard\"]);\r\n      else resolve(true);\r\n    });\r\n    return promise;\r\n  }\r\n}",
        "html":"import { Component, OnInit, OnDestroy } from '@angular\/core';\r\nimport { CoreComponent, middleware } from '@rxweb\/angular-router'\r\nimport { Router } from '@angular\/router';\r\nimport { LoggedInMiddleware } from 'src\/app\/domain\/security\/middleware\/logged-in.middleware';\r\n\r\n\/\/ Middleware decorator\r\n@middleware([LoggedInMiddleware])\r\n\r\n@Component({\r\n    selector: 'app-login',\r\n    templateUrl: '.\/login.component.html',\r\n    styleUrls: ['.\/login.component.css']\r\n})\r\n\r\nexport class LoginComponent  implements OnInit {\r\n    constructor(private router : Router) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n       \r\n    }\r\n\r\n    login(): void {\r\n       this.router.navigate(['\/dashboard'])\r\n    }\r\n  \r\n\r\n}\r\n",
        "model":""
    }
}