{
    "additionalConfig": {
        "notes": "DynamicFormConfiguration",
        "component": "import { Component,OnInit } from \"@angular/core\";\r\nimport { DynamicFormBuildConfig, DynamicFormConfiguration, RxDynamicFormBuilder } from \"@rxweb/reactive-dynamic-forms\";\r\n\r\n@Component({\r\n    selector: 'app-DynamicFormBuilderConfiguration-additionalConfig',\r\n    templateUrl: './-dynamic-form-builder-configuration-additional-config.component.html'\r\n})\r\n\r\nexport class DynamicFormBuilderConfigurationAdditionalConfigComponent implements OnInit {\r\n\r\n    serverData: Array<{ [key: string]: any }> = [\r\n      {\r\n            name: \"firstName\",\r\n             type: \"text\",\r\n             ui: {\r\n                label: 'FirstName',                      \r\n            }        \r\n    },\r\n    {\r\n       name: \"lastName\",\r\n             type: \"text\",\r\n             ui: {\r\n                label: 'LastName',                      \r\n            }       \r\n    }]\r\n    \r\n    uiBindings: string[] = [\"registerHeading\",\"paragraphHeading\",\"firstName\",\"lastName\",\"submitButton\"];\r\n    additionalConfig=[{\r\n      \"name\":\"registerHeading\",\r\n      \"type\":\"h1\",\r\n      \"props\":{\r\n       \"text\":\"Registration Form\"\r\n      }\r\n    },\r\n    {\r\n      \"name\":\"paragraphHeading\",\r\n      \"type\":\"p\",\r\n      \"props\":{\r\n        \"text\":\"Register yourself to get our services\"\r\n      }\r\n    },\r\n     {\r\n      \"name\":\"submitButton\",\r\n      \"type\":\"button\",\r\n      \"props\":{\r\n        \"text\":\"Submit\",\r\n      },\r\n      \"ui\":{\r\n        \"class\":[\"btn\",\"btn-primary\"]\r\n      }\r\n     \r\n    }]\r\n    dynamicFormBuildConfig: DynamicFormBuildConfig;\r\n    \r\n    dynamicFormConfiguration:DynamicFormConfiguration\r\n\r\n    constructor(private formBuilder: RxDynamicFormBuilder) { }\r\n    \r\n    ngOnInit()\r\n    {\r\n        this.dynamicFormConfiguration = {additionalConfig:this.additionalConfig}\r\n        this.dynamicFormBuildConfig = this.formBuilder.formGroup(this.serverData, this.dynamicFormConfiguration);\r\n    }\r\n}",
        "html": "<form [formGroup]=\"dynamicFormBuildConfig.formGroup\">\r\n    <div viewMode=\"basic\" [rxwebDynamicForm]=\"dynamicFormBuildConfig\" [uiBindings]=\"uiBindings\"></div>\r\n</form>",
        "model": null,
        "modelName": null,
        "json": {
            "server-json": "{\r\n      \"name\":\"registerHeading\",\r\n      \"type\":\"h1\",\r\n      \"props\":{\r\n        \"text\":\"Registration Form\"\r\n      }\r\n    },\r\n    {\r\n      \"name\":\"paragraphHeading\",\r\n      \"type\":\"p\",\r\n      \"props\":{\r\n        \"text\":\"Register yourself to get our services\"\r\n      }\r\n    },\r\n       {\r\n      \"name\":\"submitButton\",\r\n      \"type\":\"button\",\r\n      \"props\":{\r\n        \"text\":\"Submit\",\r\n        \"class\":[\"btn\",\"btn-primary\"]\r\n      }\r\n    }"
        }
    },
    "controlConfig": {
        "notes": "DynamicFormConfiguration",
        "component": "import { Component, OnInit } from \"@angular/core\";\r\nimport { DynamicFormBuildConfig, DynamicFormConfiguration, RxDynamicFormBuilder } from \"@rxweb/reactive-dynamic-forms\";\r\nimport { SameAsAddressModel } from \"./same-as-address.model\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-DynamicFormBuilderConfiguration-controlConfig',\r\n  templateUrl: './-dynamic-form-builder-configuration-control-config.component.html'\r\n})\r\n\r\nexport class DynamicFormBuilderConfigurationControlConfigComponent implements OnInit {\r\n\r\n  serverData = [\r\n    {\r\n        type:'textarea',\r\n        name:'permanentAddress',\r\n        ui:{label:'Permanent Address',placeholder:'Enter Your Permanent Address'}\r\n      },\r\n    {\r\n        type:'checkbox',\r\n        name:'sameAsPermanent',\r\n        modelName:'sameAsAddress',\r\n        source:[{value:1,text:'Same As Permanent'}]\r\n      },\r\n      {\r\n        type:'textarea',\r\n        name:'correspondenceAddress',\r\n        ui:{label:'Correspondence Address',placeholder:'Enter Your Correspondence Address'}\r\n      }\r\n  ]\r\n\r\n  uiBindings: string[] = [\"permanentAddress\",\"sameAsPermanent\", \"correspondenceAddress\"];\r\n\r\n  dynamicFormBuildConfig: DynamicFormBuildConfig;\r\n\r\n  dynamicFormConfiguration: DynamicFormConfiguration;\r\n\r\n  constructor(private formBuilder: RxDynamicFormBuilder) { }\r\n\r\n  ngOnInit() {\r\n    this.dynamicFormConfiguration = {\r\n      controlConfigModels: [{modelName:\"sameAsAddress\",model:SameAsAddressModel}],\r\n    }\r\n    this.dynamicFormBuildConfig = this.formBuilder.formGroup(this.serverData, this.dynamicFormConfiguration);\r\n  }\r\n\r\n}",
        "html": "<form [formGroup]=\"dynamicFormBuildConfig.formGroup\">\r\n    <div viewMode=\"basic\" [rxwebDynamicForm]=\"dynamicFormBuildConfig\" [uiBindings]=\"uiBindings\"></div>\r\n</form>",
        "model": "import { FormControlConfig } from \"@rxweb/reactive-dynamic-forms\"\r\n\r\nexport class SameAsAddressModel extends FormControlConfig{\r\n\r\n    hooks = {\r\n        postValue:()=>{\r\n            if(this.value)\r\n              this.controlsConfig.correspondenceAddress.value = this.controlsConfig.permanentAddress.value;\r\n            else\r\n              this.controlsConfig.correspondenceAddress.value = null;\r\n        }\r\n      }\r\n}",
        "modelName": "same-as-address.model.ts",
        "json": {}
    }
}