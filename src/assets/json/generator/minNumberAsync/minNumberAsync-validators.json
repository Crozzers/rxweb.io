{"complete":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-minNumberAsync-complete-validator',\r\n    templateUrl: './min-number-async-complete.component.html'\r\n})\r\nexport class MinNumberAsyncCompleteValidatorComponent implements OnInit {\r\n    resultInfoFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.resultInfoFormGroup = this.formBuilder.group({\r\n            maths:['', RxwebValidators.minNumberAsync({value:35 })], \r\n            science:['', RxwebValidators.minNumberAsync({value:35  ,message:'Number should not be less than 35' })], \r\n            economics:['', RxwebValidators.minNumberAsync({value:35  ,messageKey:'minNumberMessageKey' })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"resultInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Maths</label>\r\n      <input type=\"text\" formControlName=\"maths\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"resultInfoFormGroup.controls.maths.errors\">{{resultInfoFormGroup.controls.maths.errors.minNumberAsync.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Science</label>\r\n      <input type=\"text\" formControlName=\"science\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message<br/></small>\r\n      <small class=\"form-text text-muted\">you can enter min number upto 35<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"resultInfoFormGroup.controls.science.errors\">{{resultInfoFormGroup.controls.science.errors.minNumberAsync.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Economics</label>\r\n      <input type=\"text\" formControlName=\"economics\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message using message key<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"resultInfoFormGroup.controls.economics.errors\">{{resultInfoFormGroup.controls.economics.errors.minNumberMessageKey.message}}<br/></small>\t\t\r\n    </div>\r\n    <button [disabled]=\"!resultInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"json":{}},"valueExample":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.minNumberAsync({value:35 });\r\n","modelName":null,"json":{}},"value":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-minNumberAsync-value-validator',\r\n    templateUrl: './min-number-async-value.component.html'\r\n})\r\nexport class MinNumberAsyncValueValidatorComponent implements OnInit {\r\n    resultInfoFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.resultInfoFormGroup = this.formBuilder.group({\r\n            maths:['', RxwebValidators.minNumberAsync({value:35 })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"resultInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Maths</label>\r\n      <input type=\"text\" formControlName=\"maths\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"resultInfoFormGroup.controls.maths.errors\">{{resultInfoFormGroup.controls.maths.errors.minNumberAsync.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!resultInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"json":{}},"messageExample":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.minNumberAsync({value:35  ,message:'Number should not be less than 35' });\r\n","modelName":null,"json":{}},"message":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-minNumberAsync-message-validator',\r\n    templateUrl: './min-number-async-message.component.html'\r\n})\r\nexport class MinNumberAsyncMessageValidatorComponent implements OnInit {\r\n    resultInfoFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.resultInfoFormGroup = this.formBuilder.group({\r\n            science:['', RxwebValidators.minNumberAsync({value:35  ,message:'Number should not be less than 35' })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"resultInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Science</label>\r\n      <input type=\"text\" formControlName=\"science\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message<br/></small>\r\n      <small class=\"form-text text-muted\">you can enter min number upto 35<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"resultInfoFormGroup.controls.science.errors\">{{resultInfoFormGroup.controls.science.errors.minNumberAsync.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!resultInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"json":{}},"messageKeyExample":{"notes":null,"component":null,"html":null,"model":"RxwebValidators.minNumberAsync({value:35  ,messageKey:'minNumberMessageKey' });\r\n","modelName":null,"json":{}},"messageKey":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-minNumberAsync-messageKey-validator',\r\n    templateUrl: './min-number-async-message-key.component.html'\r\n})\r\nexport class MinNumberAsyncMessageKeyValidatorComponent implements OnInit {\r\n    resultInfoFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.resultInfoFormGroup = this.formBuilder.group({\r\n            economics:['', RxwebValidators.minNumberAsync({value:35  ,messageKey:'minNumberMessageKey' })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"resultInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Economics</label>\r\n      <input type=\"text\" formControlName=\"economics\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message using message key<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"resultInfoFormGroup.controls.economics.errors\">{{resultInfoFormGroup.controls.economics.errors.minNumberMessageKey.message}}<br/></small>\t\t\r\n    </div>\r\n    <button [disabled]=\"!resultInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"json":{}},"dynamic":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormBuilderConfiguration,RxFormBuilder} from '@rxweb/reactive-form-validators';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n    selector: 'app-minNumberAsync-dynamic-validator',\r\n    templateUrl: './min-number-async-dynamic.component.html'\r\n})\r\nexport class MinNumberAsyncDynamicValidatorComponent implements OnInit {\r\n    resultInfoFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: RxFormBuilder , private http: HttpClient )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n\t\tlet formBuilderConfiguration = new FormBuilderConfiguration();\r\n\t\tthis.http.get('assets/examples/reactive-form-validators/validators/minNumberAsync/dynamic/dynamic.json?v='+environment.appVersion).subscribe(dynamic => {\r\n\t\t\tformBuilderConfiguration.dynamicValidation = JSON.parse(JSON.stringify(dynamic));\r\n\t\t\tvar resultInfo = { maths:'', science:'', economics:'',  }\r\n\t\t\tthis.resultInfoFormGroup = this.formBuilder.group(resultInfo,formBuilderConfiguration);\r\n\t\t})\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  *ngIf=\"resultInfoFormGroup\"  [formGroup]=\"resultInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Maths</label>\r\n      <input type=\"text\" formControlName=\"maths\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"resultInfoFormGroup.controls.maths.errors\">{{resultInfoFormGroup.controls.maths.errors.minNumberAsync.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Science</label>\r\n      <input type=\"text\" formControlName=\"science\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message<br/></small>\r\n      <small class=\"form-text text-muted\">you can enter min number upto 35<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"resultInfoFormGroup.controls.science.errors\">{{resultInfoFormGroup.controls.science.errors.minNumberAsync.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Economics</label>\r\n      <input type=\"text\" formControlName=\"economics\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message using message key<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"resultInfoFormGroup.controls.economics.errors\">{{resultInfoFormGroup.controls.economics.errors.minNumberMessageKey.message}}<br/></small>\t\t\r\n    </div>\r\n    <button [disabled]=\"!resultInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"json":{"dynamic.json":"{\"maths\":{\"minNumberAsync\":{\"value\":\"35\"}},\"science\":{\"minNumberAsync\":{\"value\":\"35\",\"message\":\"Number should not be less than 35\"}},\"economics\":{\"minNumberAsync\":{\"value\":\"35\",\"messageKey\":\"minNumberMessageKey\"}}}"}},"add":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-minNumberAsync-add-validator',\r\n    templateUrl: './min-number-async-add.component.html'\r\n})\r\nexport class MinNumberAsyncAddValidatorComponent implements OnInit {\r\n    resultInfoFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.resultInfoFormGroup = this.formBuilder.group({\r\n            maths:['', RxwebValidators.minNumberAsync({value:35 })], \r\n        });\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"resultInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Maths</label>\r\n      <input type=\"text\" formControlName=\"maths\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">you can enter min number upto 35<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"resultInfoFormGroup.controls.maths.errors\">{{resultInfoFormGroup.controls.maths.errors.minNumberAsync.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!resultInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":null,"modelName":null,"json":{}}}