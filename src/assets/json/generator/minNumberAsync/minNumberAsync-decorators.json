{
  "complete": {
    "notes": null,
    "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { ResultInfo } from './result-info.model';\r\n\r\n@Component({\r\n    selector: 'app-minNumberAsync-complete',\r\n    templateUrl: './min-number-async-complete.component.html'\r\n})\r\nexport class MinNumberAsyncCompleteComponent implements OnInit {\r\n    resultInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let resultInfo = new ResultInfo();\r\n        this.resultInfoFormGroup = this.formBuilder.formGroup(resultInfo);\r\n    }\r\n}\r\n",
    "html": "<div>\r\n  <form  [formGroup]=\"resultInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Maths<\/label>\r\n      <input type=\"text\" formControlName=\"maths\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"resultInfoFormGroup.controls.maths.errors\">{{resultInfoFormGroup.controls.maths.errors.minNumber.message}}<br/><\/small>\t\r\n    <\/div>\r\n    <div class=\"form-group\">\r\n      <label>Science<\/label>\r\n      <input type=\"text\" formControlName=\"science\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message<br/><\/small>\r\n      <small class=\"form-text text-muted\">you can enter min number upto 35<br/><\/small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"resultInfoFormGroup.controls.science.errors\">{{resultInfoFormGroup.controls.science.errors.minNumber.message}}<br/><\/small>\t\r\n    <\/div>\r\n    <div class=\"form-group\">\r\n      <label>Economics<\/label>\r\n      <input type=\"text\" formControlName=\"economics\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message using message key<br/><\/small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"resultInfoFormGroup.controls.economics.errors\">{{resultInfoFormGroup.controls.economics.errors.minNumberMessageKey.message}}<br/><\/small>\t\t\r\n    <\/div>\r\n    <button [disabled]=\"!resultInfoFormGroup.valid\" class=\"btn btn-primary\">Submit<\/button>\r\n  <\/form>\r\n<\/div>\r\n",
    "model": "import {  minNumberAsync, } from   \"@rxweb/reactive-form-validators\" \r\n\rimport { of } from \"rxjs\" \r\n\r\n   \r\n\r\nexport class ResultInfo {\r\n\r\n\t@minNumberAsync({validatorConfig:of({value:35})}) \r\n\tmaths: number;\r\n\t\r\n\t\r\n\t@minNumberAsync({validatorConfig:of({value:35  ,message:'Number should not be less than 35'})}) \r\n\tscience: number;\r\n\t\r\n\t\r\n\t@minNumberAsync({validatorConfig:of({value:35  ,messageKey:'minNumberMessageKey'})}) \r\n\teconomics: number;\r\n\t\r\n\t\r\n}\r\n",
    "modelName": "result-info.model.ts",
    "json": {}
  },
  "valueExample": {
    "notes": null,
    "component": null,
    "html": null,
    "model": "@minNumberAsync({validatorConfig:of({value:35})}) \r\nmaths: number;\r\n",
    "modelName": null,
    "json": {}
  },
  "value": {
    "notes": null,
    "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { ResultInfo } from './result-info.model';\r\n\r\n@Component({\r\n    selector: 'app-minNumberAsync-value',\r\n    templateUrl: './min-number-async-value.component.html'\r\n})\r\nexport class MinNumberAsyncValueComponent implements OnInit {\r\n    resultInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let resultInfo = new ResultInfo();\r\n        this.resultInfoFormGroup = this.formBuilder.formGroup(resultInfo);\r\n    }\r\n}\r\n",
    "html": "<div>\r\n  <form  [formGroup]=\"resultInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Maths<\/label>\r\n      <input type=\"text\" formControlName=\"maths\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"resultInfoFormGroup.controls.maths.errors\">{{resultInfoFormGroup.controls.maths.errors.minNumber.message}}<br/><\/small>\t\r\n    <\/div>\r\n    <button [disabled]=\"!resultInfoFormGroup.valid\" class=\"btn btn-primary\">Submit<\/button>\r\n  <\/form>\r\n<\/div>\r\n",
    "model": "import {  minNumberAsync, } from   \"@rxweb/reactive-form-validators\" \r\n\rimport { of } from \"rxjs\" \r\n\r\n   \r\n\r\nexport class ResultInfo {\r\n\r\n\t@minNumberAsync({validatorConfig:of({value:35})}) \r\n\tmaths: number;\r\n\t\r\n\t\r\n}\r\n",
    "modelName": "result-info.model.ts",
    "json": {}
  },
  "messageExample": {
    "notes": null,
    "component": null,
    "html": null,
    "model": "@minNumberAsync({validatorConfig:of({value:35  ,message:'Number should not be less than 35'})}) \r\nscience: number;\r\n",
    "modelName": null,
    "json": {}
  },
  "message": {
    "notes": null,
    "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { ResultInfo } from './result-info.model';\r\n\r\n@Component({\r\n    selector: 'app-minNumberAsync-message',\r\n    templateUrl: './min-number-async-message.component.html'\r\n})\r\nexport class MinNumberAsyncMessageComponent implements OnInit {\r\n    resultInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let resultInfo = new ResultInfo();\r\n        this.resultInfoFormGroup = this.formBuilder.formGroup(resultInfo);\r\n    }\r\n}\r\n",
    "html": "<div>\r\n  <form  [formGroup]=\"resultInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Science<\/label>\r\n      <input type=\"text\" formControlName=\"science\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message<br/><\/small>\r\n      <small class=\"form-text text-muted\">you can enter min number upto 35<br/><\/small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"resultInfoFormGroup.controls.science.errors\">{{resultInfoFormGroup.controls.science.errors.minNumber.message}}<br/><\/small>\t\r\n    <\/div>\r\n    <button [disabled]=\"!resultInfoFormGroup.valid\" class=\"btn btn-primary\">Submit<\/button>\r\n  <\/form>\r\n<\/div>\r\n",
    "model": "import {  minNumberAsync, } from   \"@rxweb/reactive-form-validators\" \r\n\rimport { of } from \"rxjs\" \r\n\r\n   \r\n\r\nexport class ResultInfo {\r\n\r\n\t@minNumberAsync({validatorConfig:of({value:35  ,message:'Number should not be less than 35'})}) \r\n\tscience: number;\r\n\t\r\n\t\r\n}\r\n",
    "modelName": "result-info.model.ts",
    "json": {}
  },
  "messageKeyExample": {
    "notes": null,
    "component": null,
    "html": null,
    "model": "@minNumberAsync({validatorConfig:of({value:35  ,messageKey:'minNumberMessageKey'})}) \r\neconomics: number;\r\n",
    "modelName": null,
    "json": {}
  },
  "messageKey": {
    "notes": null,
    "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { ResultInfo } from './result-info.model';\r\n\r\n@Component({\r\n    selector: 'app-minNumberAsync-messageKey',\r\n    templateUrl: './min-number-async-message-key.component.html'\r\n})\r\nexport class MinNumberAsyncMessageKeyComponent implements OnInit {\r\n    resultInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let resultInfo = new ResultInfo();\r\n        this.resultInfoFormGroup = this.formBuilder.formGroup(resultInfo);\r\n    }\r\n}\r\n",
    "html": "<div>\r\n  <form  [formGroup]=\"resultInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Economics<\/label>\r\n      <input type=\"text\" formControlName=\"economics\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message using message key<br/><\/small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"resultInfoFormGroup.controls.economics.errors\">{{resultInfoFormGroup.controls.economics.errors.minNumberMessageKey.message}}<br/><\/small>\t\t\r\n    <\/div>\r\n    <button [disabled]=\"!resultInfoFormGroup.valid\" class=\"btn btn-primary\">Submit<\/button>\r\n  <\/form>\r\n<\/div>\r\n",
    "model": "import {  minNumberAsync, } from   \"@rxweb/reactive-form-validators\" \r\n\rimport { of } from \"rxjs\" \r\n\r\n   \r\n\r\nexport class ResultInfo {\r\n\r\n\t@minNumberAsync({validatorConfig:of({value:35  ,messageKey:'minNumberMessageKey'})}) \r\n\teconomics: number;\r\n\t\r\n\t\r\n}\r\n",
    "modelName": "result-info.model.ts",
    "json": {}
  },
  "dynamic": {
    "notes": null,
    "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\nimport { FormBuilderConfiguration,} from '@rxweb/reactive-form-validators';\r\n\r\nimport { ResultInfo } from './result-info.model';\r\n\r\n@Component({\r\n    selector: 'app-minNumberAsync-dynamic',\r\n    templateUrl: './min-number-async-dynamic.component.html'\r\n})\r\nexport class MinNumberAsyncDynamicComponent implements OnInit {\r\n    resultInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder,private http: HttpClient    ) { }\r\n\r\n    ngOnInit() {\r\n        let resultInfo = new ResultInfo();\r\n        let formBuilderConfiguration = new FormBuilderConfiguration();\r\n\t\tthis.http.get('assets/examples/reactive-form-validators/decorators/minNumberAsync/dynamic/dynamic.json?v=' + environment.appVersion).subscribe(dynamic => {\r\n            formBuilderConfiguration.dynamicValidation = JSON.parse(JSON.stringify(dynamic));\r\n\t\t\tthis.resultInfoFormGroup = this.formBuilder.formGroup(resultInfo,formBuilderConfiguration);\r\n       })})\r\n    }\r\n}\r\n",
    "html": "<div>\r\n  <form  *ngIf=\"resultInfoFormGroup\"  [formGroup]=\"resultInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Maths<\/label>\r\n      <input type=\"text\" formControlName=\"maths\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"resultInfoFormGroup.controls.maths.errors\">{{resultInfoFormGroup.controls.maths.errors.minNumber.message}}<br/><\/small>\t\r\n    <\/div>\r\n    <div class=\"form-group\">\r\n      <label>Science<\/label>\r\n      <input type=\"text\" formControlName=\"science\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message<br/><\/small>\r\n      <small class=\"form-text text-muted\">you can enter min number upto 35<br/><\/small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"resultInfoFormGroup.controls.science.errors\">{{resultInfoFormGroup.controls.science.errors.minNumber.message}}<br/><\/small>\t\r\n    <\/div>\r\n    <div class=\"form-group\">\r\n      <label>Economics<\/label>\r\n      <input type=\"text\" formControlName=\"economics\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message using message key<br/><\/small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"resultInfoFormGroup.controls.economics.errors\">{{resultInfoFormGroup.controls.economics.errors.minNumberMessageKey.message}}<br/><\/small>\t\t\r\n    <\/div>\r\n    <button [disabled]=\"!resultInfoFormGroup.valid\" class=\"btn btn-primary\">Submit<\/button>\r\n  <\/form>\r\n<\/div>\r\n",
    "model": "import {  minNumberAsync,prop, } from   \"@rxweb/reactive-form-validators\" \r\n\rimport { of } from \"rxjs\" \r\n\r\n   \r\n\r\nexport class ResultInfo {\r\n\r\n\t@prop()\r\n\tmaths: number;\r\n\r\n\t@prop()\r\n\tscience: number;\r\n\r\n\t@prop()\r\n\teconomics: number;\r\n\r\n}\r\n",
    "modelName": "result-info.model.ts",
    "json": {
      "dynamic.json": {
        "maths": {
          "minNumberAsync": {
            "value": "35"
          }
        },
        "science": {
          "minNumberAsync": {
            "value": "35",
            "message": "Number should not be less than 35"
          }
        },
        "economics": {
          "minNumberAsync": {
            "value": "35",
            "messageKey": "minNumberMessageKey"
          }
        }
      }
    }
  },
  "add": {
    "notes": null,
    "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { ResultInfo } from './result-info.model';\r\n\r\n@Component({\r\n    selector: 'app-minNumberAsync-add',\r\n    templateUrl: './min-number-async-add.component.html'\r\n})\r\nexport class MinNumberAsyncAddComponent implements OnInit {\r\n    resultInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let resultInfo = new ResultInfo();\r\n        this.resultInfoFormGroup = this.formBuilder.formGroup(resultInfo);\r\n    }\r\n}\r\n",
    "html": "<div>\r\n  <form  [formGroup]=\"resultInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Maths<\/label>\r\n      <input type=\"text\" formControlName=\"maths\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">you can enter min number upto 35<br/><\/small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"resultInfoFormGroup.controls.maths.errors\">{{resultInfoFormGroup.controls.maths.errors.minNumber.message}}<br/><\/small>\t\r\n    <\/div>\r\n    <button [disabled]=\"!resultInfoFormGroup.valid\" class=\"btn btn-primary\">Submit<\/button>\r\n  <\/form>\r\n<\/div>\r\n",
    "model": "import {  minNumberAsync, } from   \"@rxweb/reactive-form-validators\" \r\n\rimport { of } from \"rxjs\" \r\n\r\n   \r\n\r\nexport class ResultInfo {\r\n\r\n\t@minNumberAsync({validatorConfig:of({value:35})}) \r\n\tmaths: number;\r\n\t\r\n\t\r\n}\r\n",
    "modelName": "result-info.model.ts",
    "json": {}
  },
  "edit": {
    "notes": null,
    "component": "import { Component, OnInit } from '@angular\/core';\r\nimport { FormGroup } from \"@angular\/forms\"\r\nimport { HttpClient } from '@angular\/common\/http';\r\n\r\nimport { RxFormBuilder } from '@rxweb\/reactive-form-validators';\r\n\r\nimport { ResultInfo } from '.\/result-info.model';\r\n\r\n@Component({\r\n    selector: 'app-minNumberAsync-edit',\r\n    templateUrl: '.\/min-number-async-edit.component.html'\r\n})\r\nexport class MinNumberAsyncEditComponent implements OnInit {\r\n    resultInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder,private http: HttpClient    ) { }\r\n\r\n    ngOnInit() {\r\n        this.http.get('assets\/result-info-data.json?v=').subscribe(resultInfo => {\r\n            this.resultInfoFormGroup = this.formBuilder.formGroup<ResultInfo>(ResultInfo,resultInfo);\r\n       })\r\n    }\r\n}\r\n",
    "html": "<div>\r\n  <form  *ngIf=\"resultInfoFormGroup\"  [formGroup]=\"resultInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Maths<\/label>\r\n      <input type=\"text\" formControlName=\"maths\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">you can enter min number upto 35<br/><\/small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"resultInfoFormGroup.controls.maths.errors\">{{resultInfoFormGroup.controls.maths.errors.minNumber.message}}<br/><\/small>\t\r\n    <\/div>\r\n    <button [disabled]=\"!resultInfoFormGroup.valid\" class=\"btn btn-primary\">Submit<\/button>\r\n  <\/form>\r\n<\/div>\r\n",
    "model": "import {  minNumberAsync, } from   \"@rxweb/reactive-form-validators\" \r\n\rimport { of } from \"rxjs\" \r\n\r\n   \r\n\r\nexport class ResultInfo {\r\n\r\n\t@minNumberAsync({validatorConfig:of({value:35})}) \r\n\tmaths: number;\r\n\t\r\n\t\r\n}\r\n",
    "modelName": "result-info.model.ts",
    "json": {
      "result-info-data.json": {
        "maths": "50"
      }
    }
  }
}