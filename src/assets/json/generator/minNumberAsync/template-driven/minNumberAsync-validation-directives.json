{"complete":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { ResultInfo } from './result-info.model';\r\n\r\n@Component({\r\n    selector: 'app-minNumberAsync-complete-template-driven-validation-directives',\r\n    templateUrl: './min-number-async-complete.component.html'\r\n})\r\nexport class MinNumberAsyncCompleteTemplateDrivenValidationDirectivesComponent implements OnInit {\r\n    resultinfo: ResultInfo\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.resultinfo= new ResultInfo()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #resultinfoForm = \"ngForm\" [rxwebForm]=\"resultinfoForm\" [model]=\"resultinfo\">\r\n    <div class=\"form-group\">\r\n      <label>Maths</label>\r\n\t    <input type=\"text\" name=\"maths\" [(ngModel)]=\"resultinfo.maths\"  class=\"form-control\" [rxminNumberAsync]=\"{'value':35}\"/>\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"resultinfoForm.controls?.maths?.errors\">{{resultinfoForm.controls?.maths?.errors?.minNumber.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Science</label>\r\n\t    <input type=\"text\" name=\"science\" [(ngModel)]=\"resultinfo.science\"  class=\"form-control\" [rxminNumberAsync]=\"{'value':35,'message':'Number should not be less than 35'}\"/>\r\n\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message<br/></small>\r\n      <small class=\"form-text text-muted\">you can enter min number upto 35<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"resultinfoForm.controls?.science?.errors\">{{resultinfoForm.controls?.science?.errors?.minNumber.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Economics</label>\r\n\t    <input type=\"text\" name=\"economics\" [(ngModel)]=\"resultinfo.economics\"  class=\"form-control\" [rxminNumberAsync]=\"{'value':35,'messageKey':'minNumberMessageKey'}\"/>\r\n\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message using message key<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"resultinfoForm.controls?.economics?.errors\">{{resultinfoForm.controls?.economics?.errors?.minNumber.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!resultinfoForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class ResultInfo {\r\n\r\n\tmaths: number;\r\n\t\r\n\t\r\n\tscience: number;\r\n\t\r\n\t\r\n\teconomics: number;\r\n\t\r\n\t\r\n}\r\n","modelName":"result-info.model.ts","json":{}},"valueExample":{"notes":null,"component":null,"html":null,"model":"[minNumberAsync]=\"{'value':35}\"","modelName":null,"json":{}},"value":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { ResultInfo } from './result-info.model';\r\n\r\n@Component({\r\n    selector: 'app-minNumberAsync-value-template-driven-validation-directives',\r\n    templateUrl: './min-number-async-value.component.html'\r\n})\r\nexport class MinNumberAsyncValueTemplateDrivenValidationDirectivesComponent implements OnInit {\r\n    resultinfo: ResultInfo\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.resultinfo= new ResultInfo()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #resultinfoForm = \"ngForm\" [rxwebForm]=\"resultinfoForm\" [model]=\"resultinfo\">\r\n    <div class=\"form-group\">\r\n      <label>Maths</label>\r\n\t    <input type=\"text\" name=\"maths\" [(ngModel)]=\"resultinfo.maths\"  class=\"form-control\" [rxminNumberAsync]=\"{'value':35}\"/>\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"resultinfoForm.controls?.maths?.errors\">{{resultinfoForm.controls?.maths?.errors?.minNumber.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!resultinfoForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class ResultInfo {\r\n\r\n\tmaths: number;\r\n\t\r\n\t\r\n}\r\n","modelName":"result-info.model.ts","json":{}},"messageExample":{"notes":null,"component":null,"html":null,"model":"[minNumberAsync]=\"{'value':35,'message':'Number should not be less than 35'}\"","modelName":null,"json":{}},"message":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { ResultInfo } from './result-info.model';\r\n\r\n@Component({\r\n    selector: 'app-minNumberAsync-message-template-driven-validation-directives',\r\n    templateUrl: './min-number-async-message.component.html'\r\n})\r\nexport class MinNumberAsyncMessageTemplateDrivenValidationDirectivesComponent implements OnInit {\r\n    resultinfo: ResultInfo\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.resultinfo= new ResultInfo()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #resultinfoForm = \"ngForm\" [rxwebForm]=\"resultinfoForm\" [model]=\"resultinfo\">\r\n    <div class=\"form-group\">\r\n      <label>Science</label>\r\n\t    <input type=\"text\" name=\"science\" [(ngModel)]=\"resultinfo.science\"  class=\"form-control\" [rxminNumberAsync]=\"{'value':35,'message':'Number should not be less than 35'}\"/>\r\n\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message<br/></small>\r\n      <small class=\"form-text text-muted\">you can enter min number upto 35<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"resultinfoForm.controls?.science?.errors\">{{resultinfoForm.controls?.science?.errors?.minNumber.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!resultinfoForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class ResultInfo {\r\n\r\n\tscience: number;\r\n\t\r\n\t\r\n}\r\n","modelName":"result-info.model.ts","json":{}},"messageKeyExample":{"notes":null,"component":null,"html":null,"model":"[minNumberAsync]=\"{'value':35,'messageKey':'minNumberMessageKey'}\"","modelName":null,"json":{}},"messageKey":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { ResultInfo } from './result-info.model';\r\n\r\n@Component({\r\n    selector: 'app-minNumberAsync-messageKey-template-driven-validation-directives',\r\n    templateUrl: './min-number-async-message-key.component.html'\r\n})\r\nexport class MinNumberAsyncMessageKeyTemplateDrivenValidationDirectivesComponent implements OnInit {\r\n    resultinfo: ResultInfo\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.resultinfo= new ResultInfo()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #resultinfoForm = \"ngForm\" [rxwebForm]=\"resultinfoForm\" [model]=\"resultinfo\">\r\n    <div class=\"form-group\">\r\n      <label>Economics</label>\r\n\t    <input type=\"text\" name=\"economics\" [(ngModel)]=\"resultinfo.economics\"  class=\"form-control\" [rxminNumberAsync]=\"{'value':35,'messageKey':'minNumberMessageKey'}\"/>\r\n\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message using message key<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"resultinfoForm.controls?.economics?.errors\">{{resultinfoForm.controls?.economics?.errors?.minNumber.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!resultinfoForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class ResultInfo {\r\n\r\n\teconomics: number;\r\n\t\r\n\t\r\n}\r\n","modelName":"result-info.model.ts","json":{}},"add":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { ResultInfo } from './result-info.model';\r\n\r\n@Component({\r\n    selector: 'app-minNumberAsync-add-template-driven-validation-directives',\r\n    templateUrl: './min-number-async-add.component.html'\r\n})\r\nexport class MinNumberAsyncAddTemplateDrivenValidationDirectivesComponent implements OnInit {\r\n    resultinfo: ResultInfo\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.resultinfo= new ResultInfo()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #resultinfoForm = \"ngForm\" [rxwebForm]=\"resultinfoForm\" [model]=\"resultinfo\">\r\n    <div class=\"form-group\">\r\n      <label>Maths</label>\r\n\t    <input type=\"text\" name=\"maths\" [(ngModel)]=\"resultinfo.maths\"  class=\"form-control\" [rxminNumberAsync]=\"{'value':35}\"/>\r\n\r\n      <small class=\"form-text text-muted\">you can enter min number upto 35<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"resultinfoForm.controls?.maths?.errors\">{{resultinfoForm.controls?.maths?.errors?.minNumber.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!resultinfoForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class ResultInfo {\r\n\r\n\tmaths: number;\r\n\t\r\n\t\r\n}\r\n","modelName":"result-info.model.ts","json":{}}}