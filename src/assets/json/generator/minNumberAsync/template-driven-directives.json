{"rightSidebarLinks":[{"id":"minnumberasync","title":"minNumberAsync","subLink":null},{"id":"whentouse","title":"When to use","subLink":[]},{"id":"basicminnumberasyncvalidation","title":"Basic minNumberAsync Validation","subLink":[]},{"id":"numberconfig","title":"NumberConfig","subLink":[{"title":"message","id":"message","thirdLevelLink":[]},{"title":"messageKey","id":"messagekey","thirdLevelLink":[]},{"title":"value","id":"value","thirdLevelLink":[]}]},{"id":"completeminnumberasyncexample","title":"Complete minNumberAsync Example","subLink":[]}],"title":"minNumberAsync","description":"minNumberAsync validation  template driven  will allow user to enter the input greater than the minimum number value parameter.","validatorType":"template-driven","validationTypeTitle":"Template Driven","type":"tabs","gitDocPath":"https://github.com/rxweb/rxweb.io/edit/master/docs/angular/reactive-forms/reactive-form-validators/async-validators/minNumberAsync.md","category":"async-validators","subCategory":null,"linkTitle":"minNumberAsync","tabArray":{"complete":[{"tabName":"Example","tabGroupContent":null,"content":"<div component=\"app-example-runner\" ref-component=\"app-minNumberAsync-complete\"></div>\r\n"},{"tabName":"Model","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"minNumberAsync-complete-model\"></div> \r\n"},{"tabName":"Component","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"minNumberAsync-complete-component\"></div> \r\n"},{"tabName":"Html","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"minNumberAsync-complete-html\"></div> \r\n"}]},"innerHtml":null,"htmlContent":"<div class=\"title-bar top_title\"><p>minNumberAsync</p></div> <div class=\"title-bar\"><p>minNumberAsync validation  template driven  will allow user to enter the input greater than the minimum number value parameter asynchronously.</p></div>\r\n<div class='row page-section' id= 'whentouse'>\r\n<div class='col-lg-12'>\r\n<h2 class='showHideElement' >When to use<a title='Link to this heading' class='link-header' href='/async-validators/minNumberAsync/template-driven/directives#whentouse'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Suppose you want to create a ResultInfo form, which contains fields like Maths, Science, Statistics and you want the user to enter number which should not be less than a minimum number asynchronously. Here depending upon the requirement these scenarios may arise.</p>\r\n<ol class='showHideElement'>\r\n\t<li>Allow number greater than 35 in Maths field.</li>\r\n\t<li>Apply minNumberAsync validation based on matched condition in the form, like if the input of Maths is 50, then only the minNumberAsync validation will be applied to Statistics field.</li>\r\n\t<li>Adding Custom Message on Science Field.</li>\r\n\t<data-scope scope=\"['decorator','validator']\">\r\n\t<li>Apply minNumberAsync validation dynamically based on server rules.</li>\r\n\t</data-scope>\r\n</ol>\r\n<p class='showHideElement' >Letâ€™s see how minNumberAsync template driven fulfil the need.</p>\r\n</div></div>\r\n<div class='row page-section' id= 'basicminnumberasyncvalidation'>\r\n<div class='col-lg-12'>\r\n<h2>Basic minNumberAsync Validation<a title='Link to this heading' class='link-header' href='/async-validators/minNumberAsync/template-driven/directives#basicminnumberasyncvalidation'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >First we need to create a ResultInfo class and define a property of Maths in the model to achieve the functional need of point 1.</p>\r\n<div component=\"app-code\" key=\"minNumberAsync-add-model\"></div> \r\n<p class='showHideElement' >Through Angular FormBuilder service we create FormGroup in the component.</p>\r\n<p class='showHideElement' >Here we have covered Add form operations. </p>\r\n<div component=\"app-code\" key=\"minNumberAsync-add-component\"></div> \r\n<p class='showHideElement' >Next, we need to write html code.</p>\r\n<div component=\"app-code\" key=\"minNumberAsync-add-html\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-minNumberAsync-add\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'numberconfig'>\r\n<div class='col-lg-12'>\r\n<h2 class='showHideElement' >NumberConfig<a title='Link to this heading' class='link-header' href='/async-validators/minNumberAsync/template-driven/directives#numberconfig'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Below options are not mandatory to use in the <span class='highlighted'>minNumberAsync</span> validation. If needed then use the below options.</p>\r\n<table class=\"table table-bordered table-striped showHideElement\">\r\n<tr><th>Option</th><th>Description</th></tr>\r\n<tr><td><a  (click)='scrollTo(\"#message\")' title=\"message\">message</a></td><td>To override the global configuration message and set the custom error message on respective FormControl</td></tr>\r\n<tr><td><a (click)='scrollTo(\"#messageKey\")' title=\"messageKey\">messageKey</a></td><td>messageKey property of BaseConfig can be used when the user wants to show a different custom validation message on some of their fields. User can define a custom messageKey globally by defining it in ReactiveFormConfig and set it in the message property of the validation.</td></tr>\r\n<tr><td><a (click)='scrollTo(\"#value\")' title=\"value\">value</a></td><td> Enter value which you want to restrict number in the property.</td></tr>\r\n</table>\r\n</div></div>\r\n<div class='row page-section' id= 'message'>\r\n<div class='col-lg-12'>\r\n<h2>message<a title='Link to this heading' class='link-header' href='/async-validators/minNumberAsync/template-driven/directives#message'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type :  <span class='highlighted'>string</span> </p>\r\n<p class='showHideElement' >To override the global configuration message and set the custom message on respective FormControl.</p>\r\n<div component=\"app-code\" key=\"minNumberAsync-messageExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-minNumberAsync-message\" title=\"minNumberAsync template driven with message\" key=\"message\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'messagekey'>\r\n<div class='col-lg-12'>\r\n<h2>messageKey<a title='Link to this heading' class='link-header' href='/async-validators/minNumberAsync/template-driven/directives#messagekey'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type : <span class='highlighted'>string</span></p>\r\n<p class='showHideElement' >messageKey property of BaseConfig can be used when the user wants to show a different custom validation message on some of their fields. User can define a custom messageKey globally by defining it in ReactiveFormConfig and set it in the message property of the validation.</p>\r\n<div component=\"app-code\" key=\"minNumberAsync-messageKeyExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-minNumberAsync-messageKey\" title=\"minNumberAsync template driven with messageKey\" key=\"messageKey\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'value'>\r\n<div class='col-lg-12'>\r\n<h2>value<a title='Link to this heading' class='link-header' href='/async-validators/minNumberAsync/template-driven/directives#value'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type :  <span class='highlighted'>number</span> </p>\r\n<p class='showHideElement' >enter value which you want to restrict number in the property</p>\r\n<div component=\"app-code\" key=\"minNumberAsync-valueExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-minNumberAsync-value\" title=\"minNumberAsync template driven with value\" key=\"value\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'completeminnumberasyncexample'>\r\n<div class='col-lg-12'>\r\n<h2>Complete minNumberAsync Example<a title='Link to this heading' class='link-header' href='/async-validators/minNumberAsync/template-driven/directives#completeminnumberasyncexample'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >This Complete minNumberAsync example which includes all the NumberConfig properties will fulfil the requirement of scenarios 1, 2 and 3.</p>\r\n<div component=\"app-tabs\" key=\"complete\"></div>\r\n</div></div>\r\n"}