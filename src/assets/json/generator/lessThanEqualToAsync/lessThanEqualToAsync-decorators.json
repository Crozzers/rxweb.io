{"complete":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-lessThanEqualToAsync-complete',\r\n    templateUrl: './less-than-equal-to-async-complete.component.html'\r\n})\r\nexport class LessThanEqualToAsyncCompleteComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Total Marks</label>\r\n      <input type=\"text\" formControlName=\"totalMarks\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.totalMarks.errors\">{{userFormGroup.controls.totalMarks.errors.lessThanEqualTo.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Passing Marks</label>\r\n      <input type=\"text\" formControlName=\"passingMarks\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Passing Marks less than to Total marks<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.passingMarks.errors\">{{userFormGroup.controls.passingMarks.errors.lessThanEqualTo.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Maximum Age</label>\r\n      <input type=\"text\" formControlName=\"maximumAge\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.maximumAge.errors\">{{userFormGroup.controls.maximumAge.errors.lessThanEqualTo.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Other Marks</label>\r\n      <input type=\"text\" formControlName=\"otherMarks\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.otherMarks.errors\">{{userFormGroup.controls.otherMarks.errors.lessThanEqualTo.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Discipline Marks</label>\r\n      <input type=\"text\" formControlName=\"disciplineMarks\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows custom message based on message key<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.disciplineMarks.errors\">{{userFormGroup.controls.disciplineMarks.errors.lessThanEqualToMessageKey.message}}<br/></small>\t\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  lessThanEqualToAsync,prop, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class User {\r\n\r\n\t@prop()\r\n\ttotalMarks: number;\r\n\r\n\t@lessThanEqualToAsync({validatorConfig:of({fieldName:'totalMarks'})}) \r\n\tpassingMarks: number;\r\n\t\r\n\t\r\n\t@lessThanEqualToAsync({validatorConfig:of({value:60})}) \r\n\tmaximumAge: number;\r\n\t\r\n\t\r\n\t@lessThanEqualToAsync({validatorConfig:of({fieldName:'totalMarks'  ,message:'Please enter number less than 100.'})}) \r\n\totherMarks: number;\r\n\t\r\n\t\r\n\t@lessThanEqualToAsync({validatorConfig:of({fieldName:'totalMarks'  ,messageKey:'lessThanEqualToMessageKey'})}) \r\n\tdisciplineMarks: number;\r\n\t\r\n\t\r\n}\r\n","modelName":"user.model.ts","json":{}},"fieldNameExample":{"notes":null,"component":null,"html":null,"model":"@lessThanEqualToAsync({validatorConfig:of({fieldName:'totalMarks'})}) \r\npassingMarks: number;\r\n","modelName":null,"json":{}},"fieldName":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-lessThanEqualToAsync-fieldName',\r\n    templateUrl: './less-than-equal-to-async-field-name.component.html'\r\n})\r\nexport class LessThanEqualToAsyncFieldNameComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Total Marks</label>\r\n      <input type=\"text\" formControlName=\"totalMarks\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.totalMarks.errors\">{{userFormGroup.controls.totalMarks.errors.lessThanEqualTo.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Passing Marks</label>\r\n      <input type=\"text\" formControlName=\"passingMarks\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Passing Marks less than to Total marks<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.passingMarks.errors\">{{userFormGroup.controls.passingMarks.errors.lessThanEqualTo.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  lessThanEqualToAsync,prop, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class User {\r\n\r\n\t@prop()\r\n\ttotalMarks: number;\r\n\r\n\t@lessThanEqualToAsync({validatorConfig:of({fieldName:'totalMarks'})}) \r\n\tpassingMarks: number;\r\n\t\r\n\t\r\n}\r\n","modelName":"user.model.ts","json":{}},"valueExample":{"notes":null,"component":null,"html":null,"model":"@lessThanEqualToAsync({validatorConfig:of({value:60})}) \r\nmaximumAge: number;\r\n","modelName":null,"json":{}},"value":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-lessThanEqualToAsync-value',\r\n    templateUrl: './less-than-equal-to-async-value.component.html'\r\n})\r\nexport class LessThanEqualToAsyncValueComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Maximum Age</label>\r\n      <input type=\"text\" formControlName=\"maximumAge\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.maximumAge.errors\">{{userFormGroup.controls.maximumAge.errors.lessThanEqualTo.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  lessThanEqualToAsync, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class User {\r\n\r\n\t@lessThanEqualToAsync({validatorConfig:of({value:60})}) \r\n\tmaximumAge: number;\r\n\t\r\n\t\r\n}\r\n","modelName":"user.model.ts","json":{}},"messageExample":{"notes":null,"component":null,"html":null,"model":"@lessThanEqualToAsync({validatorConfig:of({fieldName:'totalMarks'  ,message:'Please enter number less than 100.'})}) \r\notherMarks: number;\r\n","modelName":null,"json":{}},"message":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-lessThanEqualToAsync-message',\r\n    templateUrl: './less-than-equal-to-async-message.component.html'\r\n})\r\nexport class LessThanEqualToAsyncMessageComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Other Marks</label>\r\n      <input type=\"text\" formControlName=\"otherMarks\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.otherMarks.errors\">{{userFormGroup.controls.otherMarks.errors.lessThanEqualTo.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  lessThanEqualToAsync, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class User {\r\n\r\n\t@lessThanEqualToAsync({validatorConfig:of({fieldName:'totalMarks'  ,message:'Please enter number less than 100.'})}) \r\n\totherMarks: number;\r\n\t\r\n\t\r\n}\r\n","modelName":"user.model.ts","json":{}},"messageKeyExample":{"notes":null,"component":null,"html":null,"model":"@lessThanEqualToAsync({validatorConfig:of({fieldName:'totalMarks'  ,messageKey:'lessThanEqualToMessageKey'})}) \r\ndisciplineMarks: number;\r\n","modelName":null,"json":{}},"messageKey":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-lessThanEqualToAsync-messageKey',\r\n    templateUrl: './less-than-equal-to-async-message-key.component.html'\r\n})\r\nexport class LessThanEqualToAsyncMessageKeyComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Discipline Marks</label>\r\n      <input type=\"text\" formControlName=\"disciplineMarks\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows custom message based on message key<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.disciplineMarks.errors\">{{userFormGroup.controls.disciplineMarks.errors.lessThanEqualToMessageKey.message}}<br/></small>\t\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  lessThanEqualToAsync, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class User {\r\n\r\n\t@lessThanEqualToAsync({validatorConfig:of({fieldName:'totalMarks'  ,messageKey:'lessThanEqualToMessageKey'})}) \r\n\tdisciplineMarks: number;\r\n\t\r\n\t\r\n}\r\n","modelName":"user.model.ts","json":{}},"dynamic":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\nimport { FormBuilderConfiguration,} from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-lessThanEqualToAsync-dynamic',\r\n    templateUrl: './less-than-equal-to-async-dynamic.component.html'\r\n})\r\nexport class LessThanEqualToAsyncDynamicComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder,private http: HttpClient    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        let formBuilderConfiguration = new FormBuilderConfiguration();\r\n\t\tthis.http.get('assets/examples/reactive-form-validators/decorators/lessThanEqualToAsync/dynamic/dynamic.json?v=' + environment.appVersion).subscribe(dynamic => {\r\n            formBuilderConfiguration.dynamicValidation = JSON.parse(JSON.stringify(dynamic));\r\n\t\t\tthis.userFormGroup = this.formBuilder.formGroup(user,formBuilderConfiguration);\r\n       })})\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  *ngIf=\"userFormGroup\"  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Total Marks</label>\r\n      <input type=\"text\" formControlName=\"totalMarks\" class=\"form-control\"   />\r\n      <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.totalMarks.errors\">{{userFormGroup.controls.totalMarks.errors.lessThanEqualTo.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Passing Marks</label>\r\n      <input type=\"text\" formControlName=\"passingMarks\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Passing Marks less than to Total marks<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.passingMarks.errors\">{{userFormGroup.controls.passingMarks.errors.lessThanEqualTo.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Maximum Age</label>\r\n      <input type=\"text\" formControlName=\"maximumAge\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.maximumAge.errors\">{{userFormGroup.controls.maximumAge.errors.lessThanEqualTo.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Other Marks</label>\r\n      <input type=\"text\" formControlName=\"otherMarks\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.otherMarks.errors\">{{userFormGroup.controls.otherMarks.errors.lessThanEqualTo.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Discipline Marks</label>\r\n      <input type=\"text\" formControlName=\"disciplineMarks\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows custom message based on message key<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.disciplineMarks.errors\">{{userFormGroup.controls.disciplineMarks.errors.lessThanEqualToMessageKey.message}}<br/></small>\t\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  lessThanEqualToAsync,prop, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class User {\r\n\r\n\t@prop()\r\n\ttotalMarks: number;\r\n\r\n\t@prop()\r\n\tpassingMarks: number;\r\n\r\n\t@prop()\r\n\tmaximumAge: number;\r\n\r\n\t@prop()\r\n\totherMarks: number;\r\n\r\n\t@prop()\r\n\tdisciplineMarks: number;\r\n\r\n}\r\n","modelName":"user.model.ts","json":{"dynamic.json":"{\"totalMarks\":{},\"passingMarks\":{\"lessThanEqualToAsync\":{\"fieldName\":\"totalMarks\"}},\"maximumAge\":{\"lessThanEqualToAsync\":{\"value\":\"60\"}},\"otherMarks\":{\"lessThanEqualToAsync\":{\"fieldName\":\"totalMarks\",\"message\":\"Please enter number less than 100.\"}},\"disciplineMarks\":{\"lessThanEqualToAsync\":{\"fieldName\":\"totalMarks\",\"messageKey\":\"lessThanEqualToMessageKey\"}}}"}},"add":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-lessThanEqualToAsync-add',\r\n    templateUrl: './less-than-equal-to-async-add.component.html'\r\n})\r\nexport class LessThanEqualToAsyncAddComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Total Marks</label>\r\n      <input type=\"text\" formControlName=\"totalMarks\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.totalMarks.errors\">{{userFormGroup.controls.totalMarks.errors.lessThanEqualTo.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Marks</label>\r\n      <input type=\"text\" formControlName=\"marks\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This is checking less than equal to validation for  Marks must be less than equal to Total Marks.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.marks.errors\">{{userFormGroup.controls.marks.errors.lessThanEqualTo.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  lessThanEqualToAsync,prop, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class User {\r\n\r\n\t@prop()\r\n\ttotalMarks: number;\r\n\r\n\t@lessThanEqualToAsync({validatorConfig:of({fieldName:'totalMarks'})}) \r\n\tmarks: number;\r\n\t\r\n\t\r\n}\r\n","modelName":"user.model.ts","json":{}},"edit":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-lessThanEqualToAsync-edit',\r\n    templateUrl: './less-than-equal-to-async-edit.component.html'\r\n})\r\nexport class LessThanEqualToAsyncEditComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder,private http: HttpClient    ) { }\r\n\r\n    ngOnInit() {\r\n        this.http.get('assets/examples/reactive-form-validators/decorators/lessThanEqualToAsync/edit/user-data.json?v=' + environment.appVersion).subscribe(user => {\r\n            this.userFormGroup = this.formBuilder.formGroup<User>(User,user);\r\n       })})\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  *ngIf=\"userFormGroup\"  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Total Marks</label>\r\n      <input type=\"text\" formControlName=\"totalMarks\" class=\"form-control\"  />\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.totalMarks.errors\">{{userFormGroup.controls.totalMarks.errors.lessThanEqualTo.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Marks</label>\r\n      <input type=\"text\" formControlName=\"marks\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This is checking less than equal to validation for  Marks must be less than equal to Total Marks.<br/></small>\r\n     <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.marks.errors\">{{userFormGroup.controls.marks.errors.lessThanEqualTo.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  lessThanEqualToAsync,prop, } from   \"@rxweb/reactive-form-validators\"   \r\n\r\nexport class User {\r\n\r\n\t@prop()\r\n\ttotalMarks: number;\r\n\r\n\t@lessThanEqualToAsync({validatorConfig:of({fieldName:'totalMarks'})}) \r\n\tmarks: number;\r\n\t\r\n\t\r\n}\r\n","modelName":"user.model.ts","json":{"user-data.json":"{\"marks\":\"100\",\"totalMarks\":\"100\"}"}}}