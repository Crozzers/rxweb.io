{"complete":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-lessThanEqualToAsync-complete-template-driven-validation-directives',\r\n    templateUrl: './less-than-equal-to-async-complete.component.html'\r\n})\r\nexport class LessThanEqualToAsyncCompleteTemplateDrivenValidationDirectivesComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\" [rxwebForm]=\"userForm\" [model]=\"user\">\r\n    <div class=\"form-group\">\r\n      <label>Total Marks</label>\r\n\t    <input type=\"text\" name=\"totalMarks\" [(ngModel)]=\"user.totalMarks\"  class=\"form-control\" />\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.totalMarks?.errors\">{{userForm.controls?.totalMarks?.errors?.lessThanEqualToAsync.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Passing Marks</label>\r\n\t    <input type=\"text\" name=\"passingMarks\" [(ngModel)]=\"user.passingMarks\"  class=\"form-control\" [rxlessThanEqualToAsync]=\"{'fieldName':'totalMarks'}\"/>\r\n\r\n      <small class=\"form-text text-muted\">Passing Marks less than to Total marks<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.passingMarks?.errors\">{{userForm.controls?.passingMarks?.errors?.lessThanEqualToAsync.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Maximum Age</label>\r\n\t    <input type=\"text\" name=\"maximumAge\" [(ngModel)]=\"user.maximumAge\"  class=\"form-control\" [rxlessThanEqualToAsync]=\"{'value':60}\"/>\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.maximumAge?.errors\">{{userForm.controls?.maximumAge?.errors?.lessThanEqualToAsync.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Other Marks</label>\r\n\t    <input type=\"text\" name=\"otherMarks\" [(ngModel)]=\"user.otherMarks\"  class=\"form-control\" [rxlessThanEqualToAsync]=\"{'fieldName':'totalMarks','message':'Please enter number less than 100.'}\"/>\r\n\r\n      <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.otherMarks?.errors\">{{userForm.controls?.otherMarks?.errors?.lessThanEqualToAsync.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Discipline Marks</label>\r\n\t    <input type=\"text\" name=\"disciplineMarks\" [(ngModel)]=\"user.disciplineMarks\"  class=\"form-control\" [rxlessThanEqualToAsync]=\"{'fieldName':'totalMarks','messageKey':'lessThanEqualToMessageKey'}\"/>\r\n\r\n      <small class=\"form-text text-muted\">Shows custom message based on message key<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.disciplineMarks?.errors\">{{userForm.controls?.disciplineMarks?.errors?.lessThanEqualToAsync.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class User {\r\n\r\n\ttotalMarks: number;\r\n\r\n\tpassingMarks: number;\r\n\t\r\n\t\r\n\tmaximumAge: number;\r\n\t\r\n\t\r\n\totherMarks: number;\r\n\t\r\n\t\r\n\tdisciplineMarks: number;\r\n\t\r\n\t\r\n}\r\n","modelName":"user.model.ts","json":{}},"fieldNameExample":{"notes":null,"component":null,"html":null,"model":"[lessThanEqualToAsync]=\"{'fieldName':'totalMarks'}\"","modelName":null,"json":{}},"fieldName":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-lessThanEqualToAsync-fieldName-template-driven-validation-directives',\r\n    templateUrl: './less-than-equal-to-async-field-name.component.html'\r\n})\r\nexport class LessThanEqualToAsyncFieldNameTemplateDrivenValidationDirectivesComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\" [rxwebForm]=\"userForm\" [model]=\"user\">\r\n    <div class=\"form-group\">\r\n      <label>Total Marks</label>\r\n\t    <input type=\"text\" name=\"totalMarks\" [(ngModel)]=\"user.totalMarks\"  class=\"form-control\" />\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.totalMarks?.errors\">{{userForm.controls?.totalMarks?.errors?.lessThanEqualToAsync.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Passing Marks</label>\r\n\t    <input type=\"text\" name=\"passingMarks\" [(ngModel)]=\"user.passingMarks\"  class=\"form-control\" [rxlessThanEqualToAsync]=\"{'fieldName':'totalMarks'}\"/>\r\n\r\n      <small class=\"form-text text-muted\">Passing Marks less than to Total marks<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.passingMarks?.errors\">{{userForm.controls?.passingMarks?.errors?.lessThanEqualToAsync.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class User {\r\n\r\n\ttotalMarks: number;\r\n\r\n\tpassingMarks: number;\r\n\t\r\n\t\r\n}\r\n","modelName":"user.model.ts","json":{}},"valueExample":{"notes":null,"component":null,"html":null,"model":"[lessThanEqualToAsync]=\"{'value':60}\"","modelName":null,"json":{}},"value":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-lessThanEqualToAsync-value-template-driven-validation-directives',\r\n    templateUrl: './less-than-equal-to-async-value.component.html'\r\n})\r\nexport class LessThanEqualToAsyncValueTemplateDrivenValidationDirectivesComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\" [rxwebForm]=\"userForm\" [model]=\"user\">\r\n    <div class=\"form-group\">\r\n      <label>Maximum Age</label>\r\n\t    <input type=\"text\" name=\"maximumAge\" [(ngModel)]=\"user.maximumAge\"  class=\"form-control\" [rxlessThanEqualToAsync]=\"{'value':60}\"/>\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.maximumAge?.errors\">{{userForm.controls?.maximumAge?.errors?.lessThanEqualToAsync.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class User {\r\n\r\n\tmaximumAge: number;\r\n\t\r\n\t\r\n}\r\n","modelName":"user.model.ts","json":{}},"messageExample":{"notes":null,"component":null,"html":null,"model":"[lessThanEqualToAsync]=\"{'fieldName':'totalMarks','message':'Please enter number less than 100.'}\"","modelName":null,"json":{}},"message":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-lessThanEqualToAsync-message-template-driven-validation-directives',\r\n    templateUrl: './less-than-equal-to-async-message.component.html'\r\n})\r\nexport class LessThanEqualToAsyncMessageTemplateDrivenValidationDirectivesComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\" [rxwebForm]=\"userForm\" [model]=\"user\">\r\n    <div class=\"form-group\">\r\n      <label>Other Marks</label>\r\n\t    <input type=\"text\" name=\"otherMarks\" [(ngModel)]=\"user.otherMarks\"  class=\"form-control\" [rxlessThanEqualToAsync]=\"{'fieldName':'totalMarks','message':'Please enter number less than 100.'}\"/>\r\n\r\n      <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.otherMarks?.errors\">{{userForm.controls?.otherMarks?.errors?.lessThanEqualToAsync.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class User {\r\n\r\n\totherMarks: number;\r\n\t\r\n\t\r\n}\r\n","modelName":"user.model.ts","json":{}},"messageKeyExample":{"notes":null,"component":null,"html":null,"model":"[lessThanEqualToAsync]=\"{'fieldName':'totalMarks','messageKey':'lessThanEqualToMessageKey'}\"","modelName":null,"json":{}},"messageKey":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-lessThanEqualToAsync-messageKey-template-driven-validation-directives',\r\n    templateUrl: './less-than-equal-to-async-message-key.component.html'\r\n})\r\nexport class LessThanEqualToAsyncMessageKeyTemplateDrivenValidationDirectivesComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\" [rxwebForm]=\"userForm\" [model]=\"user\">\r\n    <div class=\"form-group\">\r\n      <label>Discipline Marks</label>\r\n\t    <input type=\"text\" name=\"disciplineMarks\" [(ngModel)]=\"user.disciplineMarks\"  class=\"form-control\" [rxlessThanEqualToAsync]=\"{'fieldName':'totalMarks','messageKey':'lessThanEqualToMessageKey'}\"/>\r\n\r\n      <small class=\"form-text text-muted\">Shows custom message based on message key<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.disciplineMarks?.errors\">{{userForm.controls?.disciplineMarks?.errors?.lessThanEqualToAsync.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class User {\r\n\r\n\tdisciplineMarks: number;\r\n\t\r\n\t\r\n}\r\n","modelName":"user.model.ts","json":{}},"add":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-lessThanEqualToAsync-add-template-driven-validation-directives',\r\n    templateUrl: './less-than-equal-to-async-add.component.html'\r\n})\r\nexport class LessThanEqualToAsyncAddTemplateDrivenValidationDirectivesComponent implements OnInit {\r\n    user: User\r\n\t\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\" [rxwebForm]=\"userForm\" [model]=\"user\">\r\n    <div class=\"form-group\">\r\n      <label>Total Marks</label>\r\n\t    <input type=\"text\" name=\"totalMarks\" [(ngModel)]=\"user.totalMarks\"  class=\"form-control\" />\r\n\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.totalMarks?.errors\">{{userForm.controls?.totalMarks?.errors?.lessThanEqualToAsync.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Marks</label>\r\n\t    <input type=\"text\" name=\"marks\" [(ngModel)]=\"user.marks\"  class=\"form-control\" [rxlessThanEqualToAsync]=\"{'fieldName':'totalMarks'}\"/>\r\n\r\n      <small class=\"form-text text-muted\">This is checking less than equal to validation for  Marks must be less than equal to Total Marks.<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls?.marks?.errors\">{{userForm.controls?.marks?.errors?.lessThanEqualToAsync.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class User {\r\n\r\n\ttotalMarks: number;\r\n\r\n\tmarks: number;\r\n\t\r\n\t\r\n}\r\n","modelName":"user.model.ts","json":{}}}