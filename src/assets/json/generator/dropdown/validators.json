{"rightSidebarLinks":[{"id":"dropdown","title":"dropdown","subLink":null},{"id":"dropdownwithnon-asyncsource","title":"Dropdown with Non-Async source","subLink":[]},{"id":"cascadingdropdown","title":"Cascading Dropdown","subLink":[{"title":"Cascading Dropdown with Sync Source Binding","id":"cascadingdropdownwithsyncsourcebinding","thirdLevelLink":[]},{"title":"Cascading Dropdown with Async Source Binding","id":"cascadingdropdownwithasyncsourcebinding","thirdLevelLink":[]}]},{"id":"dropdownbaseduponcustomkeyandvaluenames","title":"Dropdown Based upon custom key and value names","subLink":[]},{"id":"selectmultipleoptionsindropdown","title":"Select multiple options in Dropdown","subLink":[]}],"title":"Dropdown","description":"","validatorType":"validators","validationTypeTitle":"Validators","type":"simple","gitDocPath":"https://github.com/rxweb/rxweb.io/edit/master/docs/angular/dynamic-forms/ui-bindings/controls/dropdown.md","category":"dynamic-forms","subCategory":"controls","linkTitle":"dropdown","tabArray":{"sync":[{"tabName":"Model","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"dropdown-sync-model\"></div> \r\n"},{"tabName":"Component","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"dropdown-sync-component\"></div> \r\n"}],"async":[{"tabName":"Model","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"dropdown-async-model\"></div>\r\n"},{"tabName":"Component","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"dropdown-async-component\"></div> \r\n"}]},"innerHtml":null,"htmlContent":"<div class=\"title-bar top_title\"><p>Dropdown</p></div> <div class=\"title-bar\"><p>\r\n<p class='showHideElement' >To create a dropdown in dynamic forms, you just need to mention <span class='highlighted'>type: \"select\"</span> and <span class='highlighted'>source</span> which include the options to be selected.</p></div></p>\r\n<div class='row page-section' id= 'dropdownwithnonasyncsource'>\r\n<div class='col-lg-12'>\r\n<h2>Dropdown with Non-Async source<a title='Link to this heading' class='link-header' href='/reactive-dynamic-forms/controls/dropdown#dropdownwithnonasyncsource'><i class='fa fa-link'></i></a></h2>\r\n\r\n<div component=\"app-code\" key=\"dropdown-static-component\"></div> \r\n<p class='showHideElement' >Next, we need to write html code.</p>\r\n<div component=\"app-code\" key=\"dropdown-static-html\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-dropdown-static\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'cascadingdropdown'>\r\n<div class='col-lg-12'>\r\n<h2>Cascading Dropdown<a title='Link to this heading' class='link-header' href='/reactive-dynamic-forms/controls/dropdown#cascadingdropdown'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >You can create cascading dropdown with sync and async source binding.</p>\r\n</div></div>\r\n<div class='row page-section' id= 'cascadingdropdownwithsyncsourcebinding'>\r\n<div class='col-lg-12'>\r\n<h2>Cascading Dropdown with Sync Source Binding<a title='Link to this heading' class='link-header' href='/reactive-dynamic-forms/controls/dropdown#cascadingdropdownwithsyncsourcebinding'><i class='fa fa-link'></i></a></h2>\r\n\r\n<div component=\"app-tabs\" key=\"sync\"></div>\r\n<div component=\"app-code\" key=\"dropdown-sync-html\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-dropdown-sync\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'cascadingdropdownwithasyncsourcebinding'>\r\n<div class='col-lg-12'>\r\n<h2>Cascading Dropdown with Async Source Binding<a title='Link to this heading' class='link-header' href='/reactive-dynamic-forms/controls/dropdown#cascadingdropdownwithasyncsourcebinding'><i class='fa fa-link'></i></a></h2>\r\n\r\n<div component=\"app-tabs\" key=\"async\"></div>\r\n<div component=\"app-code\" key=\"dropdown-async-html\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-dropdown-async\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'dropdownbaseduponcustomkeyandvaluenames'>\r\n<div class='col-lg-12'>\r\n<h2>Dropdown Based upon custom key and value names<a title='Link to this heading' class='link-header' href='/reactive-dynamic-forms/controls/dropdown#dropdownbaseduponcustomkeyandvaluenames'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >The name of value and key can be changed as per your requirement and they need to be passed in the response from the server as <span class='highlighted'>textPropName</span> and <span class='highlighted'>valuePropName</span> respectively.</p>\r\n<div component=\"app-code\" key=\"dropdown-value-component\"></div> \r\n<p class='showHideElement' >Next, we need to write html code.</p>\r\n<div component=\"app-code\" key=\"dropdown-value-html\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-dropdown-value\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'selectmultipleoptionsindropdown'>\r\n<div class='col-lg-12'>\r\n<h2>Select multiple options in Dropdown<a title='Link to this heading' class='link-header' href='/reactive-dynamic-forms/controls/dropdown#selectmultipleoptionsindropdown'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >If you want to select multiple options in dropdown, then you can set <span class='highlighted'>multiselect: true</span> in the response from the server.</p>\r\n<div component=\"app-code\" key=\"dropdown-multiselect-component\"></div> \r\n<p class='showHideElement' >Next, we need to write html code.</p>\r\n<div component=\"app-code\" key=\"dropdown-multiselect-html\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-dropdown-multiselect\"></div>\r\n</div></div>\r\n"}