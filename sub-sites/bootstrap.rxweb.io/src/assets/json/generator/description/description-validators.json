{
    "static": {
        "notes": [],
        "component": "import { Component, OnInit } from '@angular/core';\r\nimport { DynamicFormBuildConfig, DynamicFormConfiguration, RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-description-static',\r\n    templateUrl: './description-static.component.html'\r\n})\r\nexport class DescriptionStaticComponent implements OnInit {\r\n\r\n    serverData: Array<{ [key: string]: any}> = [\r\n        {\r\n            name: 'company',\r\n            type: 'textbox',\r\n            ui: {\r\n                label: 'Company Name',\r\n                description: 'Enter the name of company in which you are currently working'\r\n            }\r\n        }\r\n    ]\r\n\r\n    viewMode: string = 'bootstrap-basic';\r\n    uiBindings: string[] = ['company'];\r\n    dynamicFormBuildConfig: DynamicFormBuildConfig;\r\n\r\n    constructor(private formBuilder: RxFormBuilder) {}\r\n\r\n    ngOnInit() {\r\n        this.dynamicFormBuildConfig = this.formBuilder.dynamicForm(this.serverData);\r\n    }\r\n}",
        "html": "<div class=\"row\">\r\n    <div class=\"col-lg-12\">\r\n        <form [rxDynamicForm]=\"dynamicFormBuildConfig\">\r\n            <rxweb-dynamic-form [viewMode]=\"viewMode\" [controlsConfig]=\"dynamicFormBuildConfig.controlsConfig\"\r\n                [bindings]=\"uiBindings\"></rxweb-dynamic-form>\r\n        </form>\r\n    </div>\r\n</div>",
        "model": null,
        "modelName": null,
        "json": {}
    },
    "conditional": {
        "notes": [],
        "component": "import { Component, OnInit } from \"@angular/core\";\r\nimport { DynamicFormBuildConfig, DynamicFormConfiguration, RxFormBuilder, action, FormControlConfig } from \"@rxweb/reactive-form-validators\";\r\nimport { CssClassNamesModel } from \"./cssClassName.model\";\r\n\r\n@Component({\r\n    selector: 'app-cssClassNames-conditional',\r\n    templateUrl: './cssClassNames-conditional.component.html'\r\n})\r\nexport class CssClassNamesConditionalComponent implements OnInit {\r\n\r\n    serverData: Array<{ [key: string]: any}> = [\r\n        {\r\n            name: 'firstName',\r\n            type: 'textbox',\r\n            ui: {\r\n                cssClassNames: ['col-6','font-italic'],\r\n                label: 'First Name'\r\n            }\r\n        },\r\n        {\r\n            name: 'lastName',\r\n            type: 'textbox',\r\n            actionKeyNames: [\"onlyCssClassNames\"],\r\n            modelName: 'cssClassNames',\r\n            ui: {\r\n                label: 'Last Name'\r\n            }\r\n        }\r\n    ]\r\n\r\n    viewMode: string = 'bootstrap-basic';\r\n    uiBindings: string[] = ['firstName','lastName'];\r\n    dynamicFormBuildConfig: DynamicFormBuildConfig;\r\n    dynamicFormConfiguration: DynamicFormConfiguration;\r\n\r\n    constructor(private formBuilder: RxFormBuilder) {}\r\n\r\n    ngOnInit() {\r\n        this.dynamicFormConfiguration = {\r\n            fieldConfigModels: [{\r\n                modelName: 'cssClassNames',\r\n                model: CssClassNamesModel\r\n            }]\r\n        }\r\n        this.dynamicFormBuildConfig = this.formBuilder.dynamicForm(this.serverData,this.dynamicFormConfiguration);\r\n    }\r\n}",
        "html": "<div class=\"row\">\r\n    <div class=\"col-lg-12\">\r\n        <form [rxDynamicForm]=\"dynamicFormBuildConfig\">\r\n            <rxweb-dynamic-form [viewMode]=\"viewMode\" [controlsConfig]=\"dynamicFormBuildConfig.controlsConfig\"\r\n                [bindings]=\"uiBindings\"></rxweb-dynamic-form>\r\n        </form>\r\n    </div>\r\n</div>",
        "model": "import { FormControlConfig, action } from \"@rxweb/reactive-form-validators\";\r\n\r\n@action([\r\n    {\r\n        keyName: 'onlyDescription',\r\n        actions: {\r\n            description: function () {\r\n                console.log(this.controlsConfig.newsLetter.value)\r\n                if (this.controlsConfig.newsLetter.value == true ) {\r\n                    return this.controlsConfig.email.description = \"Thank you for agreeing to our newsletter\"\r\n                }\r\n                return this.controlsConfig.email.description = \"Please select the above option for newsletter to get our daily newsletter\"\r\n            }\r\n        }\r\n    }\r\n])\r\nexport class DescriptionModel extends FormControlConfig { }",
        "modelName": "CssClassNamesModel",
        "json": {}
    }
}