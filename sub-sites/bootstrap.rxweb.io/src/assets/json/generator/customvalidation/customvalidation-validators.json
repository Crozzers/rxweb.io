{
    "complete": {
        "notes": "ui-bindings",
        "component": "import { Component, OnInit } from \"@angular/core\";\r\nimport { DynamicFormBuildConfig, DynamicFormConfiguration, RxDynamicFormBuilder } from \"@rxweb/reactive-dynamic-forms\";\r\nimport { NonAsyncCustomValidation } from './custom-validation.model'\r\n\r\n@Component({\r\n    selector: 'app-customvalidation-complete',\r\n    templateUrl: './customvalidation-complete.component.html'\r\n})\r\n\r\nexport class CustomvalidationCompleteComponent implements OnInit {\r\n    serverData: Array<{ [key: string]: any }> = [\r\n        {\r\n            name: \"nationality\",\r\n            type: \"text\",\r\n            modelName:'validationModel',\r\n            ui: {\r\n                label: 'Nationality'\r\n            }\r\n        }\r\n    ]\r\n    uiBindings: string[] = [\"nationality\"];\r\n    dynamicFormBuildConfig: DynamicFormBuildConfig;\r\n    dynamicFormConfiguration: DynamicFormConfiguration;\r\n    constructor(private formBuilder: RxDynamicFormBuilder) { }\r\n    ngOnInit() {\r\n        this.dynamicFormConfiguration = {\r\n            controlConfigModels: [{ modelName: 'validationModel', model: NonAsyncCustomValidation }],\r\n          }\r\n        this.dynamicFormBuildConfig = this.formBuilder.formGroup(this.serverData, this.dynamicFormConfiguration);\r\n    }\r\n}",
        "html": "<form [formGroup]=\"dynamicFormBuildConfig.formGroup\">\r\n    <div viewMode=\"basic\" [rxwebDynamicForm]=\"dynamicFormBuildConfig\" [uiBindings]=\"uiBindings\"></div>\r\n</form>",
        "model": "import { FormControlConfig } from \"@rxweb/reactive-dynamic-forms\";\r\nimport { AbstractControl } from \"@angular/forms\"\r\nexport class NonAsyncCustomValidation extends FormControlConfig {\r\n\r\n    validator = (control: AbstractControl) => {\r\n        return control.value == \"India\" ? null : {\r\n            custom: { message: 'Indian Nationality Required' }\r\n        }\r\n    }\r\n\r\n}",
        "modelName": "custom-validation.model.ts",
        "json": {}
    }
}