{
    "component":{
        "component":"import { Component, NgModule, ModuleWithProviders } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { AbstractDynamicControl, RxDynamicReactiveFormsModule, RxReactiveFormsModule, DynamicReactiveFormConfig } from \"@rxweb/reactive-form-validators\";\r\n\r\n@Component({\r\n    template: `<input type='text' [rxwebError]=\"formControl.errorMessage\" [rxwebAction]=\"['placeholder','focus','readonly','cssClassNames']\" [formControl]=\"formControl\" />\r\n                <span [rxwebError]=\"formControl.errorMessage\" ></span>\r\n            `\r\n})\r\nexport class BootstrapInputComponent extends AbstractDynamicControl { }\r\n\r\n@Component({\r\n    template: `<input type='color' [rxwebError]=\"formControl.errorMessage\" [rxwebAction]=\"['placeholder','focus','readonly','cssClassNames']\" [formControl]=\"formControl\" />\r\n                <span [rxwebError]=\"formControl.errorMessage\" ></span>\r\n            `\r\n})\r\nexport class BootstrapInputColorComponent extends AbstractDynamicControl { }\r\n\r\n@Component({\r\n    template: `<input type='date' [rxwebError]=\"formControl.errorMessage\" [rxwebAction]=\"['placeholder','focus','readonly','cssClassNames']\" [formControl]=\"formControl\" />\r\n                <span [rxwebError]=\"formControl.errorMessage\" ></span>\r\n            `\r\n})\r\nexport class BootstrapInputDateComponent extends AbstractDynamicControl { }\r\n\r\n@Component({\r\n    template: `<input type='email' [rxwebError]=\"formControl.errorMessage\" [rxwebAction]=\"['placeholder','focus','readonly','cssClassNames']\" [formControl]=\"formControl\" />\r\n                <span [rxwebError]=\"formControl.errorMessage\" ></span>\r\n            `\r\n})\r\nexport class BootstrapInputEmailComponent extends AbstractDynamicControl { }\r\n\r\n@Component({\r\n    template: `<input type='password' [rxwebError]=\"formControl.errorMessage\" [rxwebAction]=\"['placeholder','focus','readonly','cssClassNames']\" [formControl]=\"formControl\" />\r\n                <span [rxwebError]=\"formControl.errorMessage\" ></span>\r\n            `\r\n})\r\nexport class BootstrapInputPasswordComponent extends AbstractDynamicControl { }\r\n\r\n@Component({\r\n    template: `<input type='url' [rxwebError]=\"formControl.errorMessage\" [rxwebAction]=\"['placeholder','focus','readonly','cssClassNames']\" [formControl]=\"formControl\" />\r\n                <span [rxwebError]=\"formControl.errorMessage\" ></span>\r\n            `\r\n})\r\nexport class BootstrapInputUrlComponent extends AbstractDynamicControl { }\r\n\r\n\r\n\r\n@Component({\r\n    template: `\r\n    <div class=\"input-group\">\r\n        <div class=\"input-group-prepend\">\r\n          <div class=\"input-group-text\">{{controlConfig.prependText.left}}</div>\r\n        </div>\r\n      <input type='text' [rxwebAction]=\"['placeholder','focus','readonly','cssClassNames']\" [formControl]=\"formControl\"/>\r\n      <span [rxwebError]=\"formControl.errorMessage\" ></span>\r\n      </div>\r\n`\r\n})\r\nexport class BootstrapPrependLeftInputComponent extends AbstractDynamicControl { }\r\n\r\n\r\n\r\n@Component({\r\n    template: ` <select class=\"form-control\" [formControl]=\"formControl\">\r\n        <option hideIfNoValue=\"placeholder\" [rxwebAction]=\"['placeholder']\" value=\"null\"></option>\r\n        <option *ngFor=\"let item of controlConfig.source\" [value]=\"item[controlConfig.config.valuePropName || 'value']\">{{item[controlConfig.config.textPropName || 'key']}}</option>\r\n    </select>\r\n    <span [rxwebError]=\"formControl.errorMessage\" ></span>\r\n`\r\n})\r\nexport class BootstrapSelectComponent extends AbstractDynamicControl { }\r\n\r\n@Component({\r\n    template: `<textarea [rxwebAction]=\"['placeholder','focus','readonly','cssClassNames']\" [formControl]=\"formControl\"></textarea>\r\n                <span [rxwebError]=\"formControl.errorMessage\" ></span>\r\n`\r\n})\r\nexport class BootstrapTextareaComponent extends AbstractDynamicControl { }\r\n\r\n@Component({\r\n    template: `<input type=\"file\" [rxwebAction]=\"['placeholder','focus','readonly','cssClassNames']\" [formControl]=\"formControl\"/>\r\n                <span [rxwebError]=\"formControl.errorMessage\" ></span>\r\n`\r\n})\r\nexport class BootstrapFileComponent extends AbstractDynamicControl { }\r\n\r\n@Component({\r\n    template: `<input type=\"range\" [rxwebAction]=\"['placeholder','focus','readonly','cssClassNames']\" [formControl]=\"formControl\"/>\r\n               <span [rxwebError]=\"formControl.errorMessage\" ></span>\r\n`\r\n})\r\nexport class BootstrapRangeComponent extends AbstractDynamicControl { }\r\n\r\n@Component({\r\n    template: `<div [rxwebAction]=\"['checkBoxAndRadioControlRootElement']\" *ngFor=\"let item of controlConfig.source\">\r\n                  <input [rxwebAction]=\"['focus','readonly','cssClassNames']\" [formControl]=\"formControl\" type=\"checkbox\" [value]=\"item[controlConfig.config.valuePropName || 'value']\" />\r\n                  <label [rxwebAction]=\"['checkboxAndRadioControlLabel']\">\r\n                    {{item[controlConfig.config.textPropName || 'key']}}\r\n                  </label>\r\n              </div>\r\n            <span [rxwebError]=\"formControl.errorMessage\" ></span>\r\n`\r\n})\r\nexport class BootstrapCheckboxComponent extends AbstractDynamicControl { }\r\n\r\n@Component({\r\n    template: `<div  [rxwebAction]=\"['checkBoxAndRadioControlRootElement']\" *ngFor=\"let item of controlConfig.source\">\r\n                  <input  [rxwebAction]=\"['focus','readonly','cssClassNames']\" [formControl]=\"formControl\" type=\"radio\" [value]=\"item[controlConfig.config.valuePropName || 'value']\" />\r\n                  <label [rxwebAction]=\"['checkboxAndRadioControlLabel']\" >{{item[controlConfig.config.textPropName || 'key']}}</label>\r\n              </div>\r\n                <span [rxwebError]=\"formControl.errorMessage\" ></span>\r\n`\r\n})\r\nexport class BootstrapRadioButtonComponent extends AbstractDynamicControl { }\r\n\r\n\r\n@Component({\r\n    template: `\r\n      <div  [rxwebAction]=\"['group']\">\r\n        <label hideIfNoValue=\"label\" [rxwebAction]=\"['label']\"></label>\r\n        <rxweb-control [controlsConfig]=\"controlsConfig\" [controlTemplates]=\"controlTemplates\" [formControlConfig]=\"controlConfig\" [name]=\"controlConfig.config.type\"></rxweb-control>\r\n        <small hideIfNoValue=\"description\" [rxwebAction]=\"['description']\"></small>\r\n      </div>\r\n`\r\n})\r\nexport class BootstrapBasicLayoutComponent extends AbstractDynamicControl {\r\n\r\n}\r\n\r\n@Component({\r\n    template: `\r\n     <div class=\"form-group row\">\r\n    <label  [rxwebAction]=\"['label']\" ></label>\r\n    <div [rxwebAction]=\"['formGrid.control']\">\r\n      <rxweb-control [controlsConfig]=\"controlsConfig\" [controlTemplates]=\"controlTemplates\" [formControlConfig]=\"controlConfig\" [name]=\"controlConfig.config.type\"></rxweb-control>\r\n      <small hideIfNoValue=\"description\" [rxwebAction]=\"['description']\"></small>\r\n    </div>\r\n  </div>        \r\n`\r\n})\r\nexport class BootstrapHorizontalLayoutComponent extends AbstractDynamicControl { }\r\n\r\n@Component({\r\n    selector:\"rxweb-section\",\r\n    template: `\r\n        <form [rxDynamicForm]=\"{formGroup:sectionConfig.formGroup,controlsConfig:sectionConfig.controlsConfig}\">\r\n                    <rxweb-dynamic-form [sectionsConfig]=\"sectionConfig.sectionsConfig\" [viewMode]=\"sectionConfig.viewMode\" [controlsConfig]=\"sectionConfig.controlsConfig\" [bindings]=\"sectionConfig.uiBindings\"></rxweb-dynamic-form>\r\n        </form>\r\n`\r\n})\r\nexport class SectionComponent extends AbstractDynamicControl { }\r\n\r\n@NgModule({\r\n    declarations: [BootstrapInputComponent, BootstrapPrependLeftInputComponent,\r\n        BootstrapSelectComponent,\r\n        BootstrapTextareaComponent,\r\n        BootstrapFileComponent,\r\n        BootstrapRangeComponent,\r\n        BootstrapCheckboxComponent,\r\n        BootstrapRadioButtonComponent,\r\n        BootstrapBasicLayoutComponent,\r\n        BootstrapHorizontalLayoutComponent, SectionComponent, BootstrapInputColorComponent, BootstrapInputDateComponent, BootstrapInputEmailComponent, BootstrapInputPasswordComponent, BootstrapInputUrlComponent    ],\r\n    imports: [CommonModule, FormsModule, ReactiveFormsModule, RxDynamicReactiveFormsModule, RxReactiveFormsModule],\r\n    providers: [],\r\n    exports: [BootstrapInputComponent, BootstrapPrependLeftInputComponent,\r\n        BootstrapSelectComponent,\r\n        BootstrapTextareaComponent,\r\n        BootstrapFileComponent,\r\n        BootstrapRangeComponent,\r\n        BootstrapCheckboxComponent,\r\n        BootstrapRadioButtonComponent,\r\n        BootstrapBasicLayoutComponent,\r\n        BootstrapHorizontalLayoutComponent, SectionComponent, BootstrapInputColorComponent, BootstrapInputDateComponent, BootstrapInputEmailComponent, BootstrapInputPasswordComponent, BootstrapInputUrlComponent   ],\r\n    entryComponents: [\r\n        DynamicReactiveFormConfig.registerComponent({\r\n            'file': { component: BootstrapFileComponent },\r\n            'color': { component: BootstrapInputColorComponent },\r\n            'date': { component: BootstrapInputDateComponent },\r\n            'email': { component: BootstrapInputEmailComponent },\r\n            'password': { component: BootstrapInputPasswordComponent },\r\n            'url': { component: BootstrapInputUrlComponent },\r\n            'prepend-left-textbox': { component: BootstrapPrependLeftInputComponent },\r\n            \"bootstrap-horizontal\": { component: BootstrapHorizontalLayoutComponent },\r\n            \"checkbox\": { component: BootstrapCheckboxComponent },\r\n            \"bootstrap-basic\": { component: BootstrapBasicLayoutComponent },\r\n            \"bootstrap-advance\": { component: BootstrapBasicLayoutComponent },\r\n            'textbox': { component: BootstrapInputComponent },\r\n            'select': { component: BootstrapSelectComponent },\r\n            'section': { component: SectionComponent },\r\n            'textarea': { component: BootstrapTextareaComponent },\r\n            \"range\": { component: BootstrapRangeComponent },\r\n            \"radio\":{component:BootstrapRadioButtonComponent}\r\n        })\r\n    ]\r\n})\r\nexport class RxwebBootstrapModule {\r\n    static forRoot(): ModuleWithProviders { return { ngModule: RxwebBootstrapModule, providers: [] }; }\r\n}"
    }
}