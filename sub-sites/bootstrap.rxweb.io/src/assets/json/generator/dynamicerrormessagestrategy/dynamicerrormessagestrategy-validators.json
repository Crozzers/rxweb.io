{
    "onsubmit":{
        "notes": [],
        "component": "import { Component,OnInit } from \"@angular/core\";\r\nimport { DynamicFormBuildConfig, DynamicFormConfiguration, RxDynamicFormBuilder } from \"@rxweb/reactive-dynamic-forms\";\r\nimport {ResetFormType } from '@rxweb/reactive-form-validators'\r\n\r\n@Component({\r\n    selector: 'app-dynamicerrormessagestrategy-onsubmit',\r\n    templateUrl: './dynamicerrormessagestrategy-onsubmit.component.html'\r\n})\r\n\r\nexport class DynamicerrormessagestrategyOnsubmitComponent implements OnInit {\r\n    serverData = [{\r\n            name:\"firstName\",\r\n            type:\"text\",\r\n            ui:{\r\n              \"class\":[\"form-control-lg\"]\r\n            },\r\n            validators:{\r\n              required:true\r\n            }\r\n        }]\r\n    \r\n        uiBindings:string[] = [\"firstName\"];\r\n        dynamicFormBuildConfig: DynamicFormBuildConfig;\r\n\r\n        constructor(private formBuilder: RxDynamicFormBuilder) { }\r\n          ngOnInit()\r\n          {\r\n            this.dynamicFormBuildConfig = this.formBuilder.formGroup(this.serverData,{}); \r\n          }\r\n          submit(){          \r\n            this.dynamicFormBuildConfig.formGroup.submitted = true;\r\n            }\r\n}",
        "html": "<form [formGroup]=\"dynamicFormBuildConfig.formGroup\">\r\n \r\n    <div viewMode=\"basic\" [rxwebDynamicForm]=\"dynamicFormBuildConfig\" [uiBindings]=\"uiBindings\">\r\n    </div>    \r\n        <small class=\"form-text text-danger\" *ngIf=\"dynamicFormBuildConfig.formGroup.controls.firstName.errors\">{{dynamicFormBuildConfig.formGroup.controls.firstName.errorMessage}} \r\n        </small>\r\n     <br/>\r\n    <button type=\"submit\" class=\"btn btn-primary\" (click)=\"submit()\">Submit</button>\r\n   \r\n</form>",
        "model": null,
        "modelName": null,
        "json": {}
    }
}